"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[8368],{27906:function(e,t,E){E.d(t,{w:function(){return r}});class r{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}},49873:function(e,t,E){E.d(t,{R:function(){return r}});class r{constructor(e,t,E){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const _=E?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=E?`${r}.0`:"1.0";let g;if("real"===e)g="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);g="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${_};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${g}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}},86541:function(e,t,E){var r=E(9495),_=E(88380);const i=(0,r.env)();i.registerFlag("HAS_WEBGL",(()=>i.getNumber("WEBGL_VERSION")>0)),i.registerFlag("WEBGL_VERSION",(()=>(0,_.Zj)(2)?2:(0,_.Zj)(1)?1:0)),i.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),i.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===i.get("WEBGL_VERSION"))),i.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),i.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),i.registerFlag("WEBGL_PACK",(()=>i.getBool("HAS_WEBGL"))),i.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_CLIP",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_REDUCE",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_LAZILY_UNPACK",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_CONV_IM2COL",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>i.getBool("WEBGL_PACK"))),i.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>(0,_.Se)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>(0,_.jL)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=i.getNumber("WEBGL_VERSION");return 0===e?0:(0,_.VJ)(e)})),i.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>i.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile())),i.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>(0,_.I2)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!i.getBool("WEBGL_FORCE_F16_TEXTURES")&&i.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),i.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>(0,_.N6)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>(0,_.Ut)(i.getNumber("WEBGL_VERSION")))),i.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>i.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),i.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),i.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),i.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),i.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),i.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),i.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),i.registerFlag("WEBGL_EXP_CONV",(()=>!1)),i.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>i.getBool("IS_TEST"))),i.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),i.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),i.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),i.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1))}}]);
//# sourceMappingURL=stylist-vendors-f6e622b2.317bbdd76c08fe65346b.js.map