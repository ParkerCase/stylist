{"version":3,"file":"stylist-state.405e585f45f4757d2f93.js","mappings":"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","sources":["webpack://StylistWidget/./node_modules/zustand/esm/vanilla.mjs","webpack://StylistWidget/./node_modules/zustand/esm/index.mjs","webpack://StylistWidget/./node_modules/zustand/esm/middleware.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n"],"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","api","getInitialState","initialState","subscribe","add","delete","destroy","clear","createStore","useDebugValue","useSyncExternalStoreWithSelector","didWarnAboutEqualityFn","identity","arg","createImpl","useBoundStore","selector","equalityFn","slice","getServerState","useStore","create","trackedConnections","Map","getTrackedConnectionState","name","get","fromEntries","entries","stores","map","key","api2","devtools","fn","devtoolsOptions","set","enabled","anonymousActionType","store","options","extensionConnector","window","__REDUX_DEVTOOLS_EXTENSION__","_e","connection","connectionInformation","type","connect","existingConnection","newConnection","extractConnectionInformation","isRecording","nameOrAction","r","action","send","setStateFromDevtools","a","originalIsRecording","init","store2","dispatchFromDevtools","dispatch","didWarnAboutReservedActionType","originalDispatch","message","_a","payload","parseJsonThen","keys","length","stateFromDevtools","JSON","stringify","nextLiftedState","lastComputedState","computedStates","stringified","f","parsed","parse","e","createJSONStorage","getStorage","storage","getItem","str2","reviver","str","Promise","then","setItem","newValue","replacer","removeItem","toThenable","input","result","onFulfilled","_onRejected","this","_onFulfilled","onRejected","persist","config","baseOptions","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","catch","savedSetState","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","oldImpl","_b","migrationResult","migrated","skipHydration","newImpl"],"sourceRoot":""}