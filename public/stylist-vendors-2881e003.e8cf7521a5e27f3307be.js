"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[1758],{379:function(e,n,t){t.d(n,{V:function(){return s}});var a=t(9495),i=t(15411),r=t(76905);const o=(0,i.j0)({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:r.BW}),s={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:o}},3872:function(e,n,t){t.d(n,{I:function(){return r}});var a=t(9495);const i=(0,t(15411).vi)({opSnippet:"return float(isnan(x));",dtype:"bool"}),r={kernelName:a.IsNan,backendName:"webgl",kernelFunc:i}},6489:function(e,n,t){t.d(n,{x:function(){return o}});var a=t(9495),i=t(66501),r=t(19314);const o={kernelName:a.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:o}=e,{x:s}=n,{depthRadius:u,bias:c,alpha:l,beta:d}=o,p=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new r.f(s.shape,u,c,l,d):new i.F(s.shape,u,c,l,d);return t.runWebGLProgram(p,[s],s.dtype)}}},15328:function(e,n,t){t.d(n,{U:function(){return r}});var a=t(9495);const i=(0,t(15411).j0)({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),r={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:i}},16386:function(e,n,t){t.d(n,{y:function(){return u}});var a=t(9495),i=t(28560),r=t(18765);class o{constructor(e){this.variableNames=["A"];const n=(0,r.B)(),[t,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${t}.0);\n\n        vec4 values = ${n.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class s{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=(0,r.B)(),[t,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${t}.0);\n            vec4 values = ${n.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${n.output} = result;\n      }\n    `}}const u={kernelName:a.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:r}=e;let{pixels:u}=n;const{numChannels:d}=r,p="undefined"!==typeof HTMLVideoElement&&u instanceof HTMLVideoElement,f="undefined"!==typeof HTMLImageElement&&u instanceof HTMLImageElement,[h,b]=p?[u.videoWidth,u.videoHeight]:[u.width,u.height],v=[b,h],k=[b,h,d];if(f||p){const e=(0,a.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=c&&e===l||(l=e,c=document.createElement("canvas").getContext("2d",{willReadFrequently:l})),c.canvas.width=h,c.canvas.height=b,c.drawImage(u,0,0,h,b),u=c.canvas}const m=t.makeTensorInfo(v,"int32");t.texData.get(m.dataId).usage=i.tT.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),u);const g=(0,a.env)().getBool("WEBGL_PACK")?new s(k):new o(k),I=t.runWebGLProgram(g,[m],"int32");return t.disposeData(m.dataId),I}};let c,l=(0,a.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU")},23706:function(e,n,t){t.d(n,{C:function(){return s},a:function(){return u}});var a=t(9495),i=t(60432),r=t(76905),o=t(94043);function s(e){const{inputs:n,backend:t,attrs:s}=e,{x:u,indices:c}=n,{axis:l,batchDims:d}=s,p=a.util.parseAxisParam(l,u.shape)[0];if((0,a.env)().get("DEBUG")){const e=t.readSync(c.dataId),n=u.shape[p];for(let t=0;t<e.length;++t){const i=e[t];a.util.assert(i<=n-1&&i>=0,(()=>`GatherV2: the index value ${i} is not in [0, ${n-1}]`))}}const f=a.backend_util.segment_util.collectGatherOpShapeInfo(u,c,p,d),h=a.util.sizeFromShape(c.shape),b=[],v=(0,o.t)({inputs:{x:u},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),k=(0,o.t)({inputs:{x:c},backend:t,attrs:{shape:[f.batchSize,h/f.batchSize]}});b.push(v),b.push(k);const m=[f.batchSize,f.outerSize,h/f.batchSize,f.sliceSize];if(t.shouldExecuteOnCPU([u,c])||"string"===u.dtype){const e=t.bufferSync(k),n=t.bufferSync(v),a=(0,r.QM)(n,e,m);return b.forEach((e=>t.disposeIntermediateTensorInfo(e))),t.makeTensorInfo(f.outputShape,a.dtype,a.values)}const g=new i.u(v.shape,m),I=t.runWebGLProgram(g,[v,k],v.dtype);b.push(I);const N=(0,o.t)({inputs:{x:I},backend:t,attrs:{shape:f.outputShape}});return b.forEach((e=>t.disposeIntermediateTensorInfo(e))),N}const u={kernelName:a.GatherV2,backendName:"webgl",kernelFunc:s}},37664:function(e,n,t){t.d(n,{G:function(){return r},u:function(){return o}});var a=t(9495),i=t(27906);function r(e){const{backend:n,attrs:t}=e,{shape:r,value:o}=t;let{dtype:s}=t;if(s=s||a.util.inferDtype(o),"string"===s){const e=a.util.getArrayFromDType(s,a.util.sizeFromShape(r));return e.fill(o),n.makeTensorInfo(r,s,e)}{const e=new i.w(r,o),t=[[o]];return n.runWebGLProgram(e,[],s,t)}}const o={kernelName:a.Fill,backendName:"webgl",kernelFunc:r}},39803:function(e,n,t){t.d(n,{l:function(){return o},n:function(){return r}});var a=t(9495),i=t(77723);function r(e){const{inputs:n,backend:t}=e,{input:a}=n,r=t.texData.get(a.dataId);return(0,i.D)({inputs:{x:r.complexTensorInfos.imag},backend:t})}const o={kernelName:a.Imag,backendName:"webgl",kernelFunc:r}},39882:function(e,n,t){t.d(n,{q:function(){return c}});var a=t(9495),i=t(21005),r=t(78762),o=t(15411),s=t(53002),u=t(94043);const c={kernelName:a.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:c}=e,{x:l,filter:d,bias:p,preluActivationWeights:f}=n,{strides:h,pad:b,dataFormat:v,dilations:k,dimRoundingMode:m,activation:g,leakyreluAlpha:I}=c,N=a.backend_util.convertConv2DDataFormat(v),w=a.backend_util.computeConv2DInfo(l.shape,d.shape,h,k,b,m,!1,N);let x;const S=[],y=null!=p,F=null!=f,W="leakyrelu"===g,C=()=>{const e=[l,d],n=(e,n)=>{if("NCHW"===n&&1===e.shape.length&&1!==e.shape[0]){const n=(0,u.t)({inputs:{x:e},backend:t,attrs:{shape:[e.shape[0],1,1]}});return S.push(n),n}return e};if(y&&e.push(n(p,v)),F&&e.push(n(f,v)),W){const n=t.makeTensorInfo([],"float32",a.util.createScalarValue(I,"float32"));e.push(n),S.push(n)}return e};if(1!==w.filterHeight||1!==w.filterWidth||1!==w.dilationHeight||1!==w.dilationWidth||1!==w.strideHeight||1!==w.strideWidth||"SAME"!==w.padInfo.type&&"VALID"!==w.padInfo.type)if(w.strideWidth<=2&&"channelsLast"===N&&(0,a.env)().getBool("WEBGL_EXP_CONV")){const e=g?(0,o.bE)(g,!0):null,n=new r.Z(w,y,e,F,W),a=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],i=C();x=t.runWebGLProgram(n,i,"float32",a)}else if((0,a.env)().getBool("WEBGL_CONV_IM2COL"))x=(0,s.J)({x:l,filter:d,convInfo:w,backend:t,bias:p,activation:g,preluActivationWeights:f,leakyreluAlpha:I});else{const e=g?(0,o.bE)(g,!1):null,n=new i.B(w,y,e,F,W),a=C();x=t.runWebGLProgram(n,a,"float32")}else x=(0,s.K)({x:l,filter:d,convInfo:w,backend:t,bias:p,activation:g,preluActivationWeights:f,leakyreluAlpha:I});const E=(0,u.t)({inputs:{x:x},backend:t,attrs:{shape:w.outShape}});return S.push(x),S.forEach((e=>t.disposeIntermediateTensorInfo(e))),E}}},54087:function(e,n,t){t.d(n,{H:function(){return u}});var a=t(9495),i=t(15411),r=t(76905);const o="return floor(x);",s=(0,i.vi)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:r.CJ}),u={kernelName:a.Floor,backendName:"webgl",kernelFunc:s}},65057:function(e,n,t){t.d(n,{l:function(){return s}});var a=t(9495),i=t(4999),r=t(10424),o=t(15411);const s={kernelName:a.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:u,filter:c,bias:l,preluActivationWeights:d}=n,{strides:p,pad:f,dilations:h,dimRoundingMode:b,activation:v,leakyreluAlpha:k}=s,m=[];let g=h;null==g&&(g=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(p,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${g}'`));const I=a.backend_util.computeConv2DInfo(u.shape,c.shape,p,g,f,b,!0),N=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&I.strideWidth<=2&&I.outChannels/I.inChannels===1,w=v?(0,o.bE)(v,N):null,x=[u,c],S=null!=l,y=null!=d,F="leakyrelu"===v;if(S&&x.push(l),y&&x.push(d),F){const e=t.makeTensorInfo([],"float32",a.util.createScalarValue(k,"float32"));x.push(e),m.push(e)}let W;W=N?new r.K(I,S,w,y,F):new i.E(I,S,w,y,F);const C=[[I.padInfo.top,I.padInfo.left],[I.strideHeight,I.strideWidth],[I.dilationHeight,I.dilationWidth],[I.inHeight,I.inWidth]],E=t.runWebGLProgram(W,x,"float32",C);return m.forEach((e=>t.disposeIntermediateTensorInfo(e))),E}}},66696:function(e,n,t){t.d(n,{c:function(){return r}});var a=t(9495),i=t(98074);const r={kernelName:a.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:a}=n;return(0,i.J)(a,!0,t)}}},66900:function(e,n,t){t.d(n,{K:function(){return s}});var a=t(9495),i=t(96911),r=t(76905),o=t(94043);const s={kernelName:a.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{params:s,indices:u}=n,c=u.shape,l=c[c.length-1],d=a.util.sizeFromShape(s.shape),[p,f,h,b]=a.backend_util.prepareAndValidate(s,u),v=(0,o.t)({inputs:{x:u},backend:t,attrs:{shape:[f,l]}}),k=(0,o.t)({inputs:{x:s},backend:t,attrs:{shape:[a.util.sizeFromShape(s.shape)/h,h]}});if(t.shouldExecuteOnCPU([s,u])||"string"===s.dtype){const e=t.readSync(u.dataId),n=t.bufferSync(s),a=(0,r.UF)(e,n,s.dtype,f,l,h,b,s.shape,d);return t.makeTensorInfo(p,s.dtype,a.values)}const m=new i.g(l,b,[f,h],s.shape),g=t.runWebGLProgram(m,[k,v],k.dtype),I=(0,o.t)({inputs:{x:g},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(g),I}}},77723:function(e,n,t){function a(e){const{inputs:n,backend:t}=e,{x:a}=n;return t.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}t.d(n,{D:function(){return a},F:function(){return i}});const i={kernelName:t(9495).Identity,backendName:"webgl",kernelFunc:a}},83834:function(e,n,t){t.d(n,{K:function(){return r}});var a=t(9495);const i=(0,t(15411).vi)({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),r={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:i}},89193:function(e,n,t){t.d(n,{j:function(){return r}});var a=t(9495),i=t(96146);const r={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:a}=e,{x:r,y:o,dy:s}=n,{depthRadius:u,bias:c,alpha:l,beta:d}=a,p=new i.j(r.shape,u,c,l,d);return t.runWebGLProgram(p,[r,o,s],r.dtype)}}},95171:function(e,n,t){t.d(n,{x:function(){return s}});var a=t(9495),i=t(15411),r=t(76905);const o=(0,i.j0)({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:r.Tm,dtype:"bool"}),s={kernelName:a.Greater,backendName:"webgl",kernelFunc:o}},95442:function(e,n,t){t.d(n,{I:function(){return r}});var a=t(9495);const i=(0,t(15411).vi)({opSnippet:"return float(isinf(x));",dtype:"bool"}),r={kernelName:a.IsInf,backendName:"webgl",kernelFunc:i}},99893:function(e,n,t){t.d(n,{D:function(){return r}});var a=t(9495),i=t(54057);const r={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:n})=>{const{image:t}=e,a=n,r=new i.T(t.shape);return a.runWebGLProgram(r,[t],t.dtype)}}}}]);
//# sourceMappingURL=stylist-vendors-2881e003.e8cf7521a5e27f3307be.js.map