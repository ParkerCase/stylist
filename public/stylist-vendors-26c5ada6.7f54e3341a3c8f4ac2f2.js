"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[7063],{6307:function(e,t,n){n.d(t,{W_:function(){return i},dz:function(){return o},nN:function(){return a},qW:function(){return s}});var r=n(9495);function o(e,t,n,o,a,i){const s=a.strideHeight,u=a.strideWidth,f=a.dilationHeight,d=a.dilationWidth,l=a.effectiveFilterHeight,c=a.effectiveFilterWidth,p=a.padInfo.top,I=a.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=(0,r.buffer)(a.outShape,n),g=h.values,T=a.outShape[1]*a.outShape[2]*a.outShape[3],k=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let r=0;r<a.batchSize;++r){const t=r*T,n=r*o[0];for(let r=0;r<a.inChannels;++r)for(let h=0;h<a.outHeight;++h){const T=h*s-p,x=Math.max(0,T),y=Math.min(a.inHeight,l+T),S=t+h*k;for(let t=0;t<a.outWidth;++t){const s=t*u-I,l=Math.max(0,s),p=Math.min(a.inWidth,c+s);let h=m,T=0,k=0;for(let t=x;t<y;t+=f){const a=n+t*o[1];for(let t=l;t<p;t+=d){const n=e[a+t*o[2]+r];"max"===i&&n>h?h=n:"avg"===i&&(T+=n,k++)}if(isNaN(h))break}g[S+t*b+r]="avg"===i?T/k:h}}}return h}function a(e,t,n,o,a=!1,i=!1){const s=(0,r.buffer)(o.outShape,"int32"),u=o.strideHeight,f=o.strideWidth,d=o.dilationHeight,l=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,I=o.padInfo.top,m=o.padInfo.left,h=(0,r.buffer)(t,n,e);for(let r=0;r<o.batchSize;++r)for(let e=0;e<o.inChannels;++e)for(let t=0;t<o.outHeight;++t){const n=t*u-I;let g=n;for(;g<0;)g+=d;const T=Math.min(o.inHeight,c+n);for(let u=0;u<o.outWidth;++u){const c=u*f-m;let I=c;for(;I<0;)I+=l;const k=Math.min(o.inWidth,p+c);let b=Number.NEGATIVE_INFINITY,x=-1;for(let t=g;t<T;t+=d){const s=t-n;for(let n=I;n<k;n+=l){const u=n-c,f=h.get(r,t,n,e);f>b&&(b=f,x=a?i?((r*o.inHeight+t)*o.inWidth+n)*o.inChannels+e:(t*o.inWidth+n)*o.inChannels+e:s*p+u)}}s.set(x,r,t,u,e)}}return s}function i(e,t,n,o,a,i){const s=a.strideDepth,u=a.strideHeight,f=a.strideWidth,d=a.dilationDepth,l=a.dilationHeight,c=a.dilationWidth,p=a.effectiveFilterDepth,I=a.effectiveFilterHeight,m=a.effectiveFilterWidth,h=a.padInfo.front,g=a.padInfo.top,T=a.padInfo.left,k="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=(0,r.buffer)(a.outShape,n),x=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[2]*a.outShape[3]*a.outShape[4],v=a.outShape[3]*a.outShape[4],_=a.outShape[4];for(let r=0;r<a.batchSize;++r){const t=r*y,n=r*o[0];for(let r=0;r<a.inChannels;++r)for(let b=0;b<a.outDepth;++b){const y=b*s-h;let N=y;for(;N<0;)N+=d;const A=Math.min(a.inDepth,p+y),W=t+b*S;for(let t=0;t<a.outHeight;++t){const s=t*u-g;let p=s;for(;p<0;)p+=l;const h=Math.min(a.inHeight,I+s),b=W+t*v;for(let t=0;t<a.outWidth;++t){const s=t*f-T;let u=s;for(;u<0;)u+=c;const I=Math.min(a.inWidth,m+s),g=b+t*_;let y=k,S=0,v=0;for(let t=N;t<A;t+=d){const a=n+t*o[1];for(let t=p;t<h;t+=l){const n=a+t*o[2];for(let t=u;t<I;t+=c){const a=e[n+t*o[3]+r];if("max"===i&&a>y?y=a:"avg"===i&&(S+=a,v++),isNaN(y))break}if(isNaN(y))break}if(isNaN(y))break}x[g+r]="avg"===i?S/Math.max(v,1):y}}}}return b}function s(e,t){const n=(0,r.buffer)(t.outShape,"int32"),o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,f=t.dilationWidth,d=t.effectiveFilterDepth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=t.padInfo.front,I=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let h=0;h<t.inChannels;++h)for(let g=0;g<t.outDepth;++g){const T=g*o-p;let k=T;for(;k<0;)k+=s;const b=Math.min(t.inDepth,d+T);for(let o=0;o<t.outHeight;++o){const d=o*a-I;let p=d;for(;p<0;)p+=u;const x=Math.min(t.inHeight,l+d);for(let a=0;a<t.outWidth;++a){const I=a*i-m;let y=I;for(;y<0;)y+=f;const S=Math.min(t.inWidth,c+I);let v=Number.NEGATIVE_INFINITY,_=-1;for(let t=k;t<b;t+=s){const n=t-T;for(let o=p;o<x;o+=u){const a=o-d;for(let i=y;i<S;i+=f){const s=i-I,u=e.get(r,t,o,i,h);u>=v&&(v=u,_=n*l*c+a*l+s)}}}n.set(_,r,g,o,a,h)}}}return n}},8195:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(9495);function o(e){return(t,n,o,a,i)=>{const s=r.backend_util.assertAndGetBroadcastShape(t,n),u=s.length,f=r.util.computeStrides(s),d=r.util.sizeFromShape(s),l=r.util.getTypedArrayFromDType(i,d),c=t.length,p=n.length,I=r.util.computeStrides(t),m=r.util.computeStrides(n),h=r.backend_util.getBroadcastDims(t,s),g=r.backend_util.getBroadcastDims(n,s);if(h.length+g.length===0)for(let r=0;r<l.length;++r)l[r]=e(o[r%o.length],a[r%a.length]);else for(let T=0;T<l.length;++T){const t=r.util.indexToLoc(T,u,f),n=t.slice(-c);h.forEach((e=>n[e]=0));const i=r.util.locToIndex(n,c,I),s=t.slice(-p);g.forEach((e=>s[e]=0));const d=r.util.locToIndex(s,p,m);l[T]=e(o[i],a[d])}return[l,s]}}},9949:function(e,t,n){n.d(t,{f:function(){return d}});var r=n(24856),o=n(46936),a=n(456),i=n(50666),s=n(74016),u=n(53652),f=n(64904);function d(e,t,n,d,l){if("linear"===n)return(0,o.D)({inputs:{x:t},backend:e});if("relu"===n)return(0,s.V)({inputs:{x:t},backend:e});if("elu"===n)return(0,r.P)({inputs:{x:t},backend:e});if("relu6"===n)return(0,u.j)({inputs:{x:t},backend:e});if("prelu"===n)return(0,i.N)({inputs:{x:t,alpha:d},backend:e});if("leakyrelu"===n)return(0,a.H)({inputs:{x:t},backend:e,attrs:{alpha:l}});if("sigmoid"===n)return(0,f.ry)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}},11317:function(e,t,n){n.d(t,{U:function(){return a}});var r=n(9495),o=n(89436);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),r=a(e,t,"float32");return(0,o.f)({inputs:{real:n,imag:r},backend:e})}const i=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},13041:function(e,t,n){n.d(t,{f:function(){return I}});var r=n(9495),o=n(95315),a=n(89436),i=n(98342),s=n(46936),u=n(18944),f=n(65646),d=n(85806),l=n(61879),c=n(87906),p=n(18566);function I(e,t,n){const o=e.shape,i=o[0],s=o[1],u=n.data.get(e.dataId),f=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,l=[i,s],p=r.util.sizeFromShape(l),I=r.util.getTypedArrayFromDType("float32",p),h=r.util.getTypedArrayFromDType("float32",p);for(let b=0;b<i;b++){const e=(0,c.di)({inputs:{x:f},backend:n,attrs:{begin:[b,0],size:[1,s]}}),o=(0,c.di)({inputs:{x:d},backend:n,attrs:{begin:[b,0],size:[1,s]}}),i=(0,a.f)({inputs:{real:e,imag:o},backend:n}),{real:u,imag:l}=m(i,t,n),p=r.backend_util.mergeRealAndImagArrays(u,l);for(let t=0;t<s;t++){const e=r.backend_util.getComplexWithIndex(p,t);I[b*s+t]=e.real,h[b*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i)}const g=n.makeTensorInfo(l,"float32",I),T=n.makeTensorInfo(l,"float32",h),k=(0,a.f)({inputs:{real:g,imag:T},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(T),k}function m(e,t,n){const o=r.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,u=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((f=o)&f-1)){const a=h(i,u,o,t,n),f=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(f,"float32",a.real),t=n.makeTensorInfo(f,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.util.createScalarValue(o,"float32")),u=(0,s.D)({inputs:{x:i},backend:n}),d=l.GN.kernelFunc({inputs:{a:e,b:i},backend:n}),c=l.GN.kernelFunc({inputs:{a:t,b:u},backend:n}),p=n.data.get(d.dataId).values,I=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),{real:p,imag:I}}return a}{const e=function(e,t,n){const o=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,s=0;for(let o=0;o<t;o++){const u=r.backend_util.exponent(a*o,t,n),f=r.backend_util.getComplexWithIndex(e,o);i+=f.real*u.real-f.imag*u.imag,s+=f.real*u.imag+f.imag*u.real}n&&(i/=t,s/=t),r.backend_util.assignToTypedArray(o,i,s,a)}return o}(r.backend_util.mergeRealAndImagArrays(i,u),o,t);return r.backend_util.splitRealAndImagArrays(e)}var f}function h(e,t,n,s,l){if(1===n)return{real:e,imag:t};const c=r.backend_util.mergeRealAndImagArrays(e,t),I=n/2,m=r.backend_util.complexWithEvenIndex(c),g=m.real,T=m.imag,k=[g.length],b=l.makeTensorInfo(k,"float32",g),x=l.makeTensorInfo(k,"float32",T),y=(0,a.f)({inputs:{real:b,imag:x},backend:l}),S=r.backend_util.complexWithOddIndex(c),v=S.real,_=S.imag,N=[v.length],A=l.makeTensorInfo(N,"float32",v),W=l.makeTensorInfo(N,"float32",_),F=(0,a.f)({inputs:{real:A,imag:W},backend:l}),H=h(g,T,I,s,l),D=H.real,E=H.imag,z=[D.length],G=l.makeTensorInfo(z,"float32",D),M=l.makeTensorInfo(z,"float32",E),w=(0,a.f)({inputs:{real:G,imag:M},backend:l}),C=h(v,_,I,s,l),B=C.real,R=C.imag,V=[B.length],Y=l.makeTensorInfo(V,"float32",B),q=l.makeTensorInfo(V,"float32",R),j=(0,a.f)({inputs:{real:Y,imag:q},backend:l}),P=r.backend_util.exponents(n,s),U=[P.real.length],Z=l.makeTensorInfo(U,"float32",P.real),K=l.makeTensorInfo(U,"float32",P.imag),O=(0,a.f)({inputs:{real:Z,imag:K},backend:l}),X=(0,f.lw)({inputs:{a:O,b:j},backend:l}),L=(0,o.WQ)({inputs:{a:w,b:X},backend:l}),Q=(0,p.jb)({inputs:{a:w,b:X},backend:l}),$=(0,d.x)({inputs:{input:L},backend:l}),J=(0,d.x)({inputs:{input:Q},backend:l}),ee=(0,u.n)({inputs:{input:L},backend:l}),te=(0,u.n)({inputs:{input:Q},backend:l}),ne=(0,i.x)({inputs:[$,J],backend:l,attrs:{axis:0}}),re=(0,i.x)({inputs:[ee,te],backend:l,attrs:{axis:0}}),oe=l.data.get(ne.dataId).values,ae=l.data.get(re.dataId).values;return l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(A),l.disposeIntermediateTensorInfo(W),l.disposeIntermediateTensorInfo(F),l.disposeIntermediateTensorInfo(G),l.disposeIntermediateTensorInfo(M),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(Y),l.disposeIntermediateTensorInfo(q),l.disposeIntermediateTensorInfo(j),l.disposeIntermediateTensorInfo(Z),l.disposeIntermediateTensorInfo(K),l.disposeIntermediateTensorInfo(O),l.disposeIntermediateTensorInfo(X),l.disposeIntermediateTensorInfo(L),l.disposeIntermediateTensorInfo(Q),l.disposeIntermediateTensorInfo($),l.disposeIntermediateTensorInfo(ee),l.disposeIntermediateTensorInfo(J),l.disposeIntermediateTensorInfo(te),l.disposeIntermediateTensorInfo(ne),l.disposeIntermediateTensorInfo(re),{real:oe,imag:ae}}},18892:function(e,t,n){n.d(t,{BF:function(){return _.BF},Dk:function(){return N.Dk},Dw:function(){return K.D},GE:function(){return b.G},GG:function(){return m.G},GK:function(){return j.G},HS:function(){return w.HS},He:function(){return S.He},Ku:function(){return D.K},Nk:function(){return a.N},SP:function(){return P.S},WR:function(){return T.WR},XI:function(){return a.X},YG:function(){return u.YG},Zy:function(){return z.Zy},_B:function(){return W._B},_X:function(){return X._},_f:function(){return H._},_m:function(){return Y._},bu:function(){return G.b},cl:function(){return A.cl},ct:function(){return s.ct},cu:function(){return k.cu},dH:function(){return r.dH},dl:function(){return Z.dl},eW:function(){return q.e},f6:function(){return i.f6},hE:function(){return v.hE},hH:function(){return f.h},jC:function(){return y.j},l3:function(){return B.l},lg:function(){return g.lg},mx:function(){return o.mx},px:function(){return x.px},qB:function(){return I.q},qy:function(){return E.q},rq:function(){return h.rq},sG:function(){return l.sG},uM:function(){return c.uM},ub:function(){return F.u},vS:function(){return p.vS},wz:function(){return L.w},x6:function(){return V.x6},xT:function(){return O.x},yH:function(){return C.y},yr:function(){return U.f},z3:function(){return d.z3},z9:function(){return R.z},zv:function(){return M.zv}});var r=n(62680),o=n(95315),a=n(86995),i=n(94890),s=n(13713),u=n(14759),f=n(97763),d=n(99292),l=n(66423),c=n(26789),p=n(85526),I=n(57100),m=n(43842),h=n(14346),g=n(86768),T=n(45207),k=n(3087),b=n(64190),x=n(1802),y=n(3759),S=n(66114),v=n(48580),_=n(65646),N=n(37962),A=n(97113),W=n(51675),F=n(15844),H=n(47620),D=n(80814),E=n(52610),z=n(4092),G=n(19095),M=n(64904),w=n(87906),C=n(5744),B=n(95587),R=n(55589),V=n(63252),Y=n(17985),q=n(67686),j=n(73514),P=n(32948),U=n(45535),Z=n(18566),K=n(21671),O=n(53475),X=n(13396),L=n(2750)},21694:function(e,t,n){n.d(t,{F:function(){return s},v:function(){return i}});var r=n(9495),o=n(97870),a=n(45705);function i(e,t,n){return s(e,(0,a.o)(t),n)}function s(e,t,n){return({inputs:a,attrs:i,backend:s})=>{const{x:u}=a;(0,o.C)(u,e);const f=s,d=f.data.get(u.dataId).values;let l;if("string"===u.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");l=r.backend_util.fromUint8ToStringArray(d)}else l=d;const c=n||u.dtype,p=t(l,c,i);return f.makeTensorInfo(u.shape,c,p)}}},33113:function(e,t,n){n.d(t,{r:function(){return r}});const r="4.22.0"},45705:function(e,t,n){n.d(t,{o:function(){return o}});var r=n(9495);function o(e){return(t,n,o)=>{const a=r.util.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],o);return a}}},98880:function(e,t,n){n.d(t,{B:function(){return u},j:function(){return s}});var r=n(9495),o=n(97870),a=n(13713),i=n(89436);function s(e,t,n,s){return null==n?({inputs:n,backend:a})=>{const{a:i,b:u}=n,f=a;(0,o.C)([i,u],e);const d=f.data.get(i.dataId).values,l=f.data.get(u.dataId).values,c="string"===i.dtype?r.backend_util.fromUint8ToStringArray(d):d,p="string"===i.dtype?r.backend_util.fromUint8ToStringArray(l):l,I=s||i.dtype,[m,h]=t(i.shape,u.shape,c,p,I);return f.makeTensorInfo(h,I,m)}:({inputs:e,backend:r})=>{const{a:o,b:u}=e,f=r;if("complex64"===o.dtype||"complex64"===u.dtype){const e=(0,a.wg)({inputs:{x:o},backend:f,attrs:{dtype:"complex64"}}),t=f.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,d=f.data.get(r.dataId).values,l=f.data.get(s.dataId).values,c=(0,a.wg)({inputs:{x:u},backend:f,attrs:{dtype:"complex64"}}),p=f.data.get(c.dataId),I=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,h=f.data.get(I.dataId).values,g=f.data.get(m.dataId).values,[T,k,b]=n(o.shape,u.shape,d,l,h,g),x=f.makeTensorInfo(b,"float32",T),y=f.makeTensorInfo(b,"float32",k),S=(0,i.f)({inputs:{real:x,imag:y},backend:f});return f.disposeIntermediateTensorInfo(e),f.disposeIntermediateTensorInfo(c),f.disposeIntermediateTensorInfo(x),f.disposeIntermediateTensorInfo(y),S}{const e=f.data.get(o.dataId).values,n=f.data.get(u.dataId).values,r=s||o.dtype,[a,i]=t(o.shape,u.shape,e,n,r);return f.makeTensorInfo(i,r,a)}}}function u(e){return(t,n,o,a,i,s)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),f=r.util.sizeFromShape(u),d=u.length,l=r.util.computeStrides(u),c=r.util.getTypedArrayFromDType("float32",f),p=r.util.getTypedArrayFromDType("float32",f),I=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),h=r.backend_util.mergeRealAndImagArrays(o,a),g=r.backend_util.mergeRealAndImagArrays(i,s),T=t.length,k=r.util.computeStrides(t),b=n.length,x=r.util.computeStrides(n);if(I.length+m.length===0)for(let r=0;r<c.length;r++){const t=r%h.length,n=r%g.length,o=e(h[2*t],h[2*t+1],g[2*n],g[2*n+1]);c[r]=o.real,p[r]=o.imag}else for(let y=0;y<c.length;y++){const t=r.util.indexToLoc(y,d,l),n=t.slice(-T);I.forEach((e=>n[e]=0));const o=r.util.locToIndex(n,T,k),a=t.slice(-b);m.forEach((e=>a[e]=0));const i=r.util.locToIndex(a,b,x),s=e(h[2*o],h[2*o+1],g[2*i],g[2*i+1]);c[y]=s.real,p[y]=s.imag}return[c,p,u]}}}}]);
//# sourceMappingURL=stylist-vendors-26c5ada6.7f54e3341a3c8f4ac2f2.js.map