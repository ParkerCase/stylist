"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[7571],{5466:function(e,n,t){t.d(n,{c:function(){return o}});var a=t(9495),s=t(76905),r=t(11039),u=t(94043),i=t(29547);const o={kernelName:a.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:c}=n,{begin:p,end:d,strides:l,beginMask:k,endMask:f,ellipsisMask:m,newAxisMask:b,shrinkAxisMask:h}=o,{finalShapeSparse:g,finalShape:I,isIdentity:S,sliceDim0:x,isSimpleSlice:y,begin:N,end:w,strides:T}=a.slice_util.sliceInfo(c.shape,p,d,l,k,f,m,b,h);let v;if(S)v=(0,u.t)({inputs:{x:c},backend:t,attrs:{shape:I}});else if(x||y){a.util.assert(c.shape.length>=1,(()=>`Input must have rank at least 1, got: ${c.shape.length}`));const e=a.slice_util.computeOutShape(N,w,T),n=(0,i.d)({inputs:{x:c},backend:t,attrs:{begin:N,size:e}});v=(0,u.t)({inputs:{x:n},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(n)}else{if(t.shouldExecuteOnCPU([c])){const e=t.readSync(c.dataId),n=(0,a.buffer)(c.shape,c.dtype,e),r=(0,s.cy)(g,n,T,N);v=t.makeTensorInfo(I,c.dtype,r.values)}else{const e=new r.U(N,T,g);v=t.runWebGLProgram(e,[c],c.dtype)}}const F=(0,u.t)({inputs:{x:v},backend:t,attrs:{shape:I}});return t.disposeIntermediateTensorInfo(v),F}}},5643:function(e,n,t){t.d(n,{F:function(){return o}});var a=t(9495),s=t(15411),r=t(76905);const u="return sqrt(x);",i=(0,s.vi)({opSnippet:u,packedOpSnippet:u,cpuKernelImpl:r.LF}),o={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:i}},12030:function(e,n,t){t.d(n,{e:function(){return r}});var a=t(9495);const s=(0,t(15411).vi)({opSnippet:"return x * x;"}),r={kernelName:a.Square,backendName:"webgl",kernelFunc:s}},13726:function(e,n,t){t.d(n,{o:function(){return r}});var a=t(9495),s=t(76905);const r={kernelName:a.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{skipEmpty:r}=a,{input:u,delimiter:i}=n;if("string"!==u.dtype)throw new Error("Input must be of datatype string");if(1!==u.shape.length)throw new Error(`Input must be a vector, got shape: ${u.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=t.readSync(u.dataId),c=t.readSync(i.dataId)[0],[p,d,l]=(0,s.S6)(o,c,r),k=d.length;return[t.makeTensorInfo([k,2],"int32",p),t.makeTensorInfo([k],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(l))]}}},22853:function(e,n,t){t.d(n,{c:function(){return i},q:function(){return o}});var a=t(9495),s=t(68754),r=t(94043),u=t(95203);function i(e){const{inputs:n,backend:t,attrs:i}=e,{x:o}=n,{axis:c,keepDims:p}=i;return function(e,n,t,i){const o=n,c=e.shape.length,p=a.util.parseAxisParam(o,e.shape);let d=p;const l=a.backend_util.getAxesPermutation(d,c),k=null!=l;let f=e;k&&(f=(0,u._)(e,l,i),d=a.backend_util.getInnerMostAxes(d.length,c)),a.backend_util.assertAxesAreInnerMostDims("sum",d,c);const[m,b]=a.backend_util.computeOutAndReduceShapes(f.shape,d);let h=m;t&&(h=a.backend_util.expandShapeToKeepDim(m,p));const g=a.util.sizeFromShape(b),I=a.util.sizeFromShape(e.shape)/g,S=(0,r.t)({inputs:{x:f},attrs:{shape:[I,g]},backend:i}),x=(0,a.sumOutType)(e.dtype),y=(0,s.T)(S,x,"sum",i),N=(0,r.t)({inputs:{x:y},attrs:{shape:h},backend:i});return i.disposeIntermediateTensorInfo(S),i.disposeIntermediateTensorInfo(y),k&&i.disposeIntermediateTensorInfo(f),N}(o,c,p,t)}const o={kernelName:a.Sum,backendName:"webgl",kernelFunc:i}},29154:function(e,n,t){t.d(n,{a:function(){return u}});var a=t(9495),s=t(76905),r=t(88380);const u={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:n,attrs:t,backend:a}=e,{axis:u}=t,{x:i}=n;(0,r.CE)(i,"unique");const o=a.readSync(i.dataId),{outputValues:c,outputShape:p,indices:d}=(0,s.M_)(o,u,i.shape,i.dtype);return[a.makeTensorInfo(p,i.dtype,c),a.makeTensorInfo([d.length],"int32",d)]}}},30097:function(e,n,t){t.d(n,{P:function(){return o},Z:function(){return c}});var a=t(9495),s=t(8993),r=t(37664),u=t(39803),i=t(4313);function o(e){const{inputs:n,backend:t}=e,{x:a}=n;if("complex64"===a.dtype){const e=(0,i.x)({inputs:{input:a},backend:t}),n=o({inputs:{x:e},backend:t}),r=(0,u.n)({inputs:{input:a},backend:t}),c=o({inputs:{x:r},backend:t}),p=(0,s.f)({inputs:{real:n,imag:c},backend:t});return t.disposeIntermediateTensorInfo(e),t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(c),p}return(0,r.G)({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:t})}const c={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:o}},31137:function(e,n,t){t.d(n,{N:function(){return r}});var a=t(9495),s=t(23601);const r={kernelName:a.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{image:r,transforms:u}=n,{interpolation:i,fillMode:o,fillValue:c,outputShape:p}=a,[d,l,k,f]=r.shape,[m,b]=null!=p?p:[l,k],h=[d,m,b,f],g=new s.R(l,k,i,o,c,h);return t.runWebGLProgram(g,[r,u],"float32")}}},38483:function(e,n,t){t.d(n,{Z:function(){return o},j:function(){return i}});var a=t(9495),s=t(15411),r=t(76905);const u="return a - b;",i=(0,s.j0)({opSnippet:u,packedOpSnippet:u,supportsComplex:!0,cpuKernelImpl:r.lL}),o={kernelName:a.Sub,backendName:"webgl",kernelFunc:i}},41719:function(e,n,t){t.d(n,{B:function(){return u}});var a=t(9495),s=t(94043),r=t(29547);const u={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{value:u}=n;let{axis:i}=a;i<0&&(i+=u.shape.length);const o=u,c=o.shape.length,p=u.shape[i],d=new Array(c-1);let l=0;for(let s=0;s<c;s++)s!==i&&(d[l++]=o.shape[s]);const k=[],f=new Array(c).fill(0),m=o.shape.slice();m[i]=1;const b=new Array(p);for(let h=0;h<b.length;h++){f[i]=h;const e=(0,r.d)({inputs:{x:o},backend:t,attrs:{begin:f,size:m}}),n=(0,s.t)({inputs:{x:e},backend:t,attrs:{shape:d}});b[h]=n,k.push(e)}return k.forEach((e=>t.disposeIntermediateTensorInfo(e))),b}}},43178:function(e,n,t){t.d(n,{W:function(){return r}});var a=t(9495);const s=(0,t(15411).vi)({opSnippet:"return tan(x);"}),r={kernelName:a.Tan,backendName:"webgl",kernelFunc:s}},44342:function(e,n,t){t.d(n,{C:function(){return r}});var a=t(9495),s=t(76905);const r={kernelName:a.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:r}=e,{x:u}=n;if("string"!==u.dtype)throw new Error("Input must be of datatype string");const i=t.readSync(u.dataId),o=a.backend_util.fromUint8ToStringArray(i),c=(0,s.yZ)(o,"string",r);return t.makeTensorInfo(u.shape,"string",c)}}},47149:function(e,n,t){t.d(n,{l:function(){return r}});var a=t(9495),s=t(64374);const r={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{a:r,b:u,bias:i,preluActivationWeights:o}=n,{transposeA:c,transposeB:p,activation:d,leakyreluAlpha:l}=a;return(0,s.L)({a:r,b:u,transposeA:c,transposeB:p,backend:t,bias:i,preluActivationWeights:o,leakyreluAlpha:l,activation:d})}}},50307:function(e,n,t){t.d(n,{b:function(){return c}});var a=t(9495),s=t(50476),r=t(39264),u=t(94043),i=t(74021),o=t(58246);const c={kernelName:a.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:c}=e,{x:p,segmentIds:d}=n,{numSegments:l}=c,k=p.shape.length,f=[];let m=0;const b=a.backend_util.getAxesPermutation([m],k);let h=p;null!=b&&(h=(0,o.m)({inputs:{x:p},backend:t,attrs:{perm:b}}),f.push(h),m=a.backend_util.getInnerMostAxes(1,k)[0]);const g=a.backend_util.segment_util.computeOutShape(h.shape,m,l),I=a.util.sizeFromShape([h.shape[m]]),S=(0,u.t)({inputs:{x:h},backend:t,attrs:{shape:[-1,I]}});f.push(S);const x=(0,a.sumOutType)(p.dtype),y=(e,n,u,o,c)=>{const p=e.shape[0],d=e.shape[1],l=a.backend_util.segment_util.segOpComputeOptimalWindowSize(d,c),k={windowSize:l,inSize:d,batchSize:p,numSegments:c},m=new s.v(k,n),b=t.compileAndRun(m,[e,u],o);if(f.push(b),b.shape[1]===c)return b;const h=(0,r.y)({backend:t,attrs:{start:0,stop:c,step:1,dtype:"float32"}}),g=(0,i.V)({inputs:{x:h},backend:t,attrs:{reps:[d/l]}});f.push(h),f.push(g);return y(b,n,g,o,c)},N=y(S,"unsortedSegmentSum",d,x,l),w=(0,u.t)({inputs:{x:N},backend:t,attrs:{shape:g}});let T=w;if(null!=b){f.push(w);const e=a.backend_util.getUndoAxesPermutation(b);T=(0,o.m)({inputs:{x:T},backend:t,attrs:{perm:e}})}return f.forEach((e=>t.disposeIntermediateTensorInfo(e))),T}}},55571:function(e,n,t){t.d(n,{b:function(){return u}});var a=t(9495);const s="return (a - b) * (a - b);",r=(0,t(15411).j0)({opSnippet:s,packedOpSnippet:s}),u={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:r}},58246:function(e,n,t){t.d(n,{W:function(){return i},m:function(){return u}});var a=t(9495),s=t(95203),r=t(76905);function u(e){const{inputs:n,backend:t,attrs:a}=e,{x:u}=n,{perm:i}=a,o=t,c=u.shape.length,p=new Array(c);for(let s=0;s<p.length;s++)p[s]=u.shape[i[s]];let d;if(o.shouldExecuteOnCPU([u])){const e=o.texData.get(u.dataId).values,n=(0,r.Q5)(e,u.shape,u.dtype,i,p);d=o.makeTensorInfo(p,u.dtype);o.texData.get(d.dataId).values=n}else d=(0,s._)(u,i,o);return d}const i={kernelName:a.Transpose,backendName:"webgl",kernelFunc:u}},64593:function(e,n,t){t.d(n,{J:function(){return r}});var a=t(9495),s=t(76905);const r={kernelName:a.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{numBuckets:r}=a,{input:u}=n;if("string"!==u.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(u.dataId),o=(0,s.fW)(i,r);return t.makeTensorInfo(u.shape,"int32",o)}}},70637:function(e,n,t){t.d(n,{B:function(){return u}});var a=t(9495),s=t(8939),r=t(94043);const u={kernelName:a.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{tensor:i,indices:o,updates:c}=n,{}=u,{sliceRank:p,numUpdates:d,sliceSize:l,strides:k,outputSize:f}=a.backend_util.calculateShapes(c,o,i.shape),m=[f/l,l];if(0===f)return t.makeTensorInfo(i.shape,o.dtype);const b=(0,r.t)({inputs:{x:o},backend:t,attrs:{shape:[d,p]}}),h=(0,r.t)({inputs:{x:c},backend:t,attrs:{shape:[d,l]}}),g=(0,r.t)({inputs:{x:i},backend:t,attrs:{shape:m}}),I=new s.$(d,p,b.shape.length,h.shape.length,k,m,!1,!0),S=t.runWebGLProgram(I,[h,b,g],g.dtype),x=(0,r.t)({inputs:{x:S},backend:t,attrs:{shape:i.shape}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(S),x}}},72641:function(e,n,t){t.d(n,{p:function(){return l}});var a=t(9495),s=t(76905),r=t(76540),u=t(37664),i=t(23706),o=t(94043),c=t(29547);function p(e,n){null!==n&&e.disposeIntermediateTensorInfo(n)}function d(e){let n=1;for(;n<e;)n*=2;return n}const l={kernelName:a.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:l}=e,{x:k}=n,{k:f,sorted:m}=l,b=(0,a.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),h=(0,a.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),g=k.shape,I=g[g.length-1];if(t.shouldExecuteOnCPU([k])||I<b||f>h){const e=t.readSync(k.dataId),[n,a]=(0,s.xt)(e,g,k.dtype,f,m);return[t.makeTensorInfo(n.shape,n.dtype,n.values),t.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===f)return g[g.length-1]=0,[t.makeTensorInfo(g,k.dtype,[]),t.makeTensorInfo(g,"int32",[])];if(1===I)return[k,(0,u.G)({attrs:{shape:g,dtype:"int32",value:0},backend:t})];const S=t.texData.get(k.dataId),x=null!==S&&S.isPacked,y=x?t.unpackTensor(k):k,N=a.util.sizeFromShape(g)/I,w=(0,o.t)({inputs:{x:y},attrs:{shape:[N,I]},backend:t});x&&p(t,y);const T=d(f),v=d(I);let F=null;const _=()=>null===F?[w,w]:[w,F],A=(e,n,a)=>{const s=_(),u=new r.K(a),i=[[I],[null===F?1:0],[Number.NEGATIVE_INFINITY],[e],[n]],o=F;F=t.runWebGLProgram(u,s,"int32",i),p(t,o)};for(let a=1;a<T;a*=2){const e=2*a;for(let n=a;n>=1;n/=2)A(e,n,[N,v])}for(let a=v;a>T;a/=2){const e=_(),n=new r.T([N,a/2]),s=[[I],[null===F?1:0],[T]],u=F;F=t.runWebGLProgram(n,e,"int32",s),p(t,u);const i=T/2,o=2*i;for(let t=i;t>=1;t/=2)A(o,t,F.shape)}let P=F;F=(0,c.d)({inputs:{x:F},backend:t,attrs:{begin:0,size:[N,f]}}),p(t,P);let O=(0,i.C)({inputs:{x:w,indices:F},backend:t,attrs:{axis:1,batchDims:1}});p(t,w);const E=g.slice(0,-1);E.push(f),P=F,F=(0,o.t)({inputs:{x:F},attrs:{shape:E},backend:t}),p(t,P);const W=O;return O=(0,o.t)({inputs:{x:O},attrs:{shape:E},backend:t}),p(t,W),[O,F]}}},74021:function(e,n,t){t.d(n,{V:function(){return u},n:function(){return i}});var a=t(9495),s=t(76905),r=t(20771);function u(e){const{inputs:n,backend:t,attrs:u}=e,{x:i}=n,{reps:o}=u;if("string"===i.dtype||i.shape.length>5){const e=t.readSync(i.dataId),n="string"===i.dtype?e.map((e=>a.util.decodeString(e))):e,r=(0,a.buffer)(i.shape,i.dtype,n),u=(0,s.$O)(r,o);return t.makeTensorInfo(u.shape,u.dtype,u.values)}const c=new r.$(i.shape,o);return t.runWebGLProgram(c,[i],i.dtype)}const i={kernelName:a.Tile,backendName:"webgl",kernelFunc:u}},79862:function(e,n,t){t.d(n,{Q:function(){return r}});var a=t(9495),s=t(76905);const r={kernelName:a.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{separator:r,nGramWidths:u,leftPad:i,rightPad:o,padWidth:c,preserveShortSequences:p}=a,{data:d,dataSplits:l}=n,k=t.readSync(d.dataId),f=t.readSync(l.dataId),[m,b]=(0,s.UC)(k,f,r,u,i,o,c,p);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(l.shape,"int32",b)]}}},85048:function(e,n,t){t.d(n,{i:function(){return r}});var a=t(9495);const s=(0,t(15411).vi)({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),r={kernelName:a.Tanh,backendName:"webgl",kernelFunc:s}},95203:function(e,n,t){t.d(n,{_:function(){return u}});var a=t(9495),s=t(81322),r=t(55315);function u(e,n,t){const u=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r.Y(e.shape,n):new s.u(e.shape,n);return t.runWebGLProgram(u,[e],e.dtype)}},97667:function(e,n,t){t.d(n,{t:function(){return r}});var a=t(9495),s=t(68173);const r={kernelName:a.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:n,backend:t}){const{x:a}=e,r=s.dR+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,u=new s.hE(a.shape,r);return t.runWebGLProgram(u,[a],a.dtype)}}}}]);
//# sourceMappingURL=stylist-vendors-7607137c.eb24c28f89a8f0215df3.js.map