"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[6394],{11717:function(e,n,t){t.d(n,{a:function(){return i}});var a=t(9495),r=t(97870),s=t(43842),o=t(14590);const i={kernelName:a.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u,indices:c}=n,{axis:d,batchDims:l}=i;(0,r.C)([u,c],"gatherV2");const p=a.util.parseAxisParam(d,u.shape)[0],f=t.data.get(c.dataId).values,h=u.shape[p];for(let r=0;r<f.length;++r){const e=f[r];a.util.assert(e<=h-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`))}let k=l;null==l&&(k=0);const m=a.util.sizeFromShape(c.shape),b=a.backend_util.segment_util.collectGatherOpShapeInfo(u,c,p,k),I=(0,o.t)({inputs:{x:u},backend:t,attrs:{shape:[b.batchSize,b.outerSize,b.dimSize,b.sliceSize]}}),F=(0,o.t)({inputs:{x:c},backend:t,attrs:{shape:[b.batchSize,m/b.batchSize]}}),N=[b.batchSize,b.outerSize,m/b.batchSize,b.sliceSize],v=t.bufferSync(F),g=t.bufferSync(I),y=(0,s.G)(g,v,N);return t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(F),t.makeTensorInfo(b.outputShape,y.dtype,y.values)}}},14346:function(e,n,t){t.d(n,{rq:function(){return o},xp:function(){return u}});var a=t(9495),r=t(8195),s=t(98880);const o=(0,r.Z)(((e,n)=>e>n?1:0)),i=(0,s.j)(a.Greater,o,null,"bool"),u={kernelName:a.Greater,backendName:"cpu",kernelFunc:i}},18944:function(e,n,t){function a(e){const{inputs:n,backend:t}=e,{input:a}=n,r=t.data.get(a.dataId).complexTensorInfos.imag,s=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,s)}t.d(n,{l:function(){return r},n:function(){return a}});const r={kernelName:t(9495).Imag,backendName:"cpu",kernelFunc:a}},27445:function(e,n,t){t.d(n,{I:function(){return s}});var a=t(9495);const r=(0,t(21694).v)(a.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),s={kernelName:a.IsNan,backendName:"cpu",kernelFunc:r}},30307:function(e,n,t){t.d(n,{q:function(){return u}});var a=t(9495),r=t(9949),s=t(95315),o=t(43898),i=t(14590);const u={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:u,filter:c,bias:d,preluActivationWeights:l}=n,{strides:p,pad:f,dataFormat:h,dilations:k,dimRoundingMode:m,activation:b,leakyreluAlpha:I}=a;let F=(0,o.J)({inputs:{x:u,filter:c},backend:t,attrs:{strides:p,pad:f,dataFormat:h,dilations:k,dimRoundingMode:m}});if(d){const e=F;if("NCHW"===h&&1===d.shape.length&&1!==d.shape[0]){const e=(0,i.t)({inputs:{x:d},backend:t,attrs:{shape:[d.shape[0],1,1]}});F=(0,s.WQ)({inputs:{a:F,b:e},backend:t}),t.disposeIntermediateTensorInfo(e)}else F=(0,s.WQ)({inputs:{a:F,b:d},backend:t});t.disposeIntermediateTensorInfo(e)}if(b){const e=F;if("NCHW"===h&&"prelu"===b&&1===l.shape.length&&1!==l.shape[0]){const e=(0,i.t)({inputs:{x:l},backend:t,attrs:{shape:[l.shape[0],1,1]}});F=(0,r.f)(t,F,b,e,I),t.disposeIntermediateTensorInfo(e)}else F=(0,r.f)(t,F,b,l,I);t.disposeIntermediateTensorInfo(e)}return F}}},34820:function(e,n,t){t.d(n,{x:function(){return s}});var a=t(9495),r=t(97870);const s={kernelName:a.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o}=n,{depthRadius:i,bias:u,alpha:c,beta:d}=s;(0,r.C)(o,"LRN");const l=o.shape[3],p=l-1,f=t.data.get(o.dataId).values,h=a.util.sizeFromShape(o.shape),k=new Float32Array(h);function m(e){const n=e%l;let t=e-n+Math.max(0,n-i);const a=e-n+Math.min(n+i,p);let r=0;for(;t<=a;t++){const e=f[t];r+=e*e}return r}for(let a=0;a<h;a++){const e=m(a),n=f[a]*Math.pow(u+c*e,-d);k[a]=n}return t.makeTensorInfo(o.shape,o.dtype,k)}}},43842:function(e,n,t){t.d(n,{G:function(){return r}});var a=t(9495);function r(e,n,t){const r=(0,a.buffer)(t,e.dtype);for(let a=0;a<r.size;++a){const t=r.indexToLoc(a).slice(),s=t[0],o=t[2],i=n.locToIndex([s,o]);t[2]=n.values[i];const u=e.locToIndex(t);0<=u&&u<e.values.length&&(r.values[a]=e.values[u])}return r}},46936:function(e,n,t){function a(e){const{inputs:n,backend:t}=e,{x:a}=n;return t.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}t.d(n,{D:function(){return a},F:function(){return r}});const r={kernelName:t(9495).Identity,backendName:"cpu",kernelFunc:a}},49608:function(e,n,t){t.d(n,{j:function(){return s}});var a=t(9495),r=t(97870);const s={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o,y:i,dy:u}=n,{depthRadius:c,bias:d,alpha:l,beta:p}=s;(0,r.C)(u,"LRNGrad");const f=a.util.sizeFromShape(u.shape),h=u.shape[3],k=t.data.get(u.dataId).values,m=t.data.get(o.dataId).values,b=t.data.get(i.dataId).values,I=new Float32Array(f),F=f;for(let a=0;a<F;a++){const e=a%h,n=a-e+Math.max(0,e-c),t=a-e+Math.min(h,e+c+1);let r=0;for(let a=n;a<t;a++)r+=Math.pow(m[a],2);r=l*r+d;for(let s=n;s<t;s++){let e=-2*l*p*m[s]*b[a]/r;a===s&&(e+=Math.pow(r,-p)),e*=k[a],I[s]+=e}}return t.makeTensorInfo(u.shape,o.dtype,I)}}},50591:function(e,n,t){t.d(n,{K:function(){return s}});var a=t(9495),r=t(57100);const s={kernelName:a.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t}=e,{params:s,indices:o}=n,i=a.util.sizeFromShape(s.shape),u=o.shape,c=u[u.length-1],[d,l,p,f]=a.backend_util.prepareAndValidate(s,o);if(0===l)return t.makeTensorInfo(d,s.dtype,[]);const h=t.data.get(o.dataId).values,k=t.bufferSync(s),m=(0,r.q)(h,k,s.dtype,l,c,p,f,s.shape,i);return t.makeTensorInfo(d,s.dtype,m.values)}}},57100:function(e,n,t){t.d(n,{q:function(){return r}});var a=t(9495);function r(e,n,t,r,s,o,i,u,c){const d=(0,a.buffer)([r,o],t);for(let a=0;a<r;a++){const t=[];let r=0;for(let n=0;n<s;n++){const o=e[a*s+n];r+=o*i[n],t.push(o)}if(r<0||r>=c/o)throw new Error(`Invalid indices: ${t} does not index into ${u}`);for(let e=0;e<o;e++)d.values[a*o+e]=n.get(...n.indexToLoc(r*o+e))}return d}},60251:function(e,n,t){t.d(n,{c:function(){return o}});var a=t(9495),r=t(13041),s=t(14590);const o={kernelName:a.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:o}=n,i=a.util.sizeFromShape(o.shape),u=o.shape[o.shape.length-1],c=i/u,d=(0,s.t)({inputs:{x:o},backend:t,attrs:{shape:[c,u]}}),l=(0,r.f)(d,!0,t),p=(0,s.t)({inputs:{x:l},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),p}}},62684:function(e,n,t){t.d(n,{D:function(){return r}});var a=t(9495);const r={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:n,backend:t})=>{const{image:r}=e,s=t,o=a.util.getTypedArrayFromDType(r.dtype,a.util.sizeFromShape(r.shape)),[i,u,c,d]=r.shape,l=s.data.get(r.dataId).values;for(let a=0;a<i;a++){const e=a*c*u*d;for(let n=0;n<u;n++){const t=n*(c*d);for(let n=0;n<c;n++){const a=n*d;for(let r=0;r<d;r++){const s=Math.round(c-n-1),i=e+t+a+r;let u=l[i];if(s>=0&&s<c){u=l[e+t+s*d+r]}o[i]=u}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}}},71969:function(e,n,t){t.d(n,{K:function(){return s}});var a=t(9495);const r=(0,t(21694).v)(a.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),s={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:r}},79727:function(e,n,t){t.d(n,{I:function(){return s}});var a=t(9495);const r=(0,t(21694).v)(a.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),s={kernelName:a.IsInf,backendName:"cpu",kernelFunc:r}},80015:function(e,n,t){t.d(n,{G:function(){return r},u:function(){return s}});var a=t(9495);function r(e){const{backend:n,attrs:t}=e,{shape:r,value:s,dtype:o}=t,i=o||a.util.inferDtype(s),u=a.util.getArrayFromDType(i,a.util.sizeFromShape(r));return function(e,n){e.fill(n)}(u,s),n.makeTensorInfo(r,i,u)}const s={kernelName:a.Fill,backendName:"cpu",kernelFunc:r}},85526:function(e,n,t){t.d(n,{Hc:function(){return u},vS:function(){return o}});var a=t(9495),r=t(45705),s=t(21694);const o=(0,r.o)((e=>Math.floor(e))),i=(0,s.F)(a.Floor,o),u={kernelName:a.Floor,backendName:"cpu",kernelFunc:i}},86768:function(e,n,t){t.d(n,{VM:function(){return u},lg:function(){return o}});var a=t(9495),r=t(8195),s=t(98880);const o=(0,r.Z)(((e,n)=>e>=n?1:0)),i=(0,s.j)(a.GreaterEqual,o,null,"bool"),u={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:i}},89792:function(e,n,t){t.d(n,{N:function(){return o}});var a=t(9495),r=t(13041),s=t(14590);const o={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:o}=n,i=a.util.sizeFromShape(o.shape),u=o.shape[o.shape.length-1],c=i/u,d=(0,s.t)({inputs:{x:o},backend:t,attrs:{shape:[c,u]}}),l=(0,r.f)(d,!1,t),p=(0,s.t)({inputs:{x:l},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),p}}},95071:function(e,n,t){t.d(n,{Uc:function(){return u}});var a=t(9495),r=t(8195),s=t(98880);const o=(0,r.Z)(((e,n)=>Math.floor(e/n))),i=(0,s.j)(a.FloorDiv,o,null,"int32"),u={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:i}},99150:function(e,n,t){t.d(n,{l:function(){return i}});var a=t(9495),r=t(9949),s=t(95315),o=t(87994);const i={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:i,filter:u,bias:c,preluActivationWeights:d}=n,{strides:l,pad:p,dataFormat:f,dilations:h,dimRoundingMode:k,activation:m,leakyreluAlpha:b}=a;let I=(0,o.n)({inputs:{x:i,filter:u},backend:t,attrs:{strides:l,pad:p,dataFormat:f,dilations:h,dimRoundingMode:k}});if(c){const e=I;I=(0,s.WQ)({inputs:{a:I,b:c},backend:t}),t.disposeIntermediateTensorInfo(e)}if(m){const e=I;I=(0,r.f)(t,I,m,d,b),t.disposeIntermediateTensorInfo(e)}return I}}}}]);
//# sourceMappingURL=stylist-vendors-90af5a2e.71dd15dbd41353946406.js.map