{"version":3,"file":"stylist-vendors-820dece3.3ac52030b170b778b0c5.js","mappings":"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EAAYD,EAAW/E,OAC7B8E,GACI,GAAGJ,MAASM,MAAcA,EAAY,EAAID,EAAa,KAC/D,CACJ,CAEJ,E,wpCCSJ,MAAME,GAAc,CAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,IAAK,MAAMC,MAAkBD,IACzB,SAAiBC,G,kKC1Md,MAAMC,EAYT,YAAAC,GACI,OAAOzC,KAAKH,YACP6C,SACT,CAUA,iBAAOC,CAAWC,EAAKC,GACnB,OAAO,IAAID,EAAIC,EACnB,EASG,MAAMC,EACT,WAAAjD,GACIG,KAAK+C,aAAe,CAAC,CACzB,CAIA,aAAOC,GAIH,OAHiC,MAA7BF,EAAiBG,WACjBH,EAAiBG,SAAW,IAAIH,GAE7BA,EAAiBG,QAC5B,CAIA,eAAOC,CAASN,GACZE,EAAiBE,SAASD,aAAaH,EAAIF,WACvC,CAACE,EAAKA,EAAID,WAClB,EA0BG,SAASQ,EAAcP,IAC1B,QAAwB,MAAjBA,EAAIF,WAAmB,IAAM,iFAEpC,QAAgC,kBAAlBE,EAAIF,WAAwB,IAAM,6DACrCE,EAAIF,aACf,QAAOE,EAAIF,UAAUrF,OAAS,GAAG,IAAM,sFAEvCyF,EAAiBI,SAASN,EAC9B,C,kDC7FA,UAAuBQ,UAAUC,IAAM,WAEnC,OADArD,KAAKsD,mBACE,E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","sources":["webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/tape.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/profiler.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/register_all_gradients.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/serialization.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/abs.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/acos.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/acosh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/add.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/all.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/any.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/arg_max.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/arg_min.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as_scalar.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as_type.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as1d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as2d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as3d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as4d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as5d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/asin.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/asinh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/atan.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/atan2.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/atanh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/avg_pool.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/batch_to_space_nd.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/batchnorm.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/broadcast_to.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cast.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/ceil.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/clip_by_value.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/concat.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/conv1d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/conv2d_transpose.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/conv2d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cos.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cosh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/cumsum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/depth_to_space.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/depthwise_conv2d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/dilation2d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/div_no_nan.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/div.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/dot.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/elu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/equal.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/erf.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/exp.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/expand_dims.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/expm1.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/fft.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/flatten.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/floor.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/floorDiv.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/gather.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/greater_equal.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/greater.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/ifft.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/irfft.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/is_finite.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/is_inf.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/is_nan.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/leaky_relu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/less_equal.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/less.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/local_response_normalization.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log_sigmoid.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log_softmax.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log_sum_exp.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/log1p.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_and.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_not.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_or.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/logical_xor.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mat_mul.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/max_pool.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/max.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/maximum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mean.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/min.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/minimum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mirror_pad.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mod.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mul.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/neg.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/norm.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/not_equal.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/one_hot.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/ones_like.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/pad.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/pool.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/pow.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/prelu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/prod.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reciprocal.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/relu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/relu6.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reshape_as.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reshape.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/resize_bilinear.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/resize_nearest_neighbor.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/reverse.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/rfft.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/round.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/rsqrt.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/selu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/separable_conv2d.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sigmoid.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sign.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sin.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sinh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/slice.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/softmax.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/softplus.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/space_to_batch_nd.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/split.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sqrt.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/square.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/squared_difference.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/squeeze.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/stack.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/step.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/strided_slice.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sub.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/sum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/tan.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/tanh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/tile.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/to_bool.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/to_float.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/to_int.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/topk.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/transpose.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/unique.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/unsorted_segment_sum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/unstack.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/where.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/zeros_like.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from './util';\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=tape.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as util from './util';\nexport class Profiler {\n    constructor(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    profileKernel(kernelName, inputs, f) {\n        let outputs;\n        const holdResultWrapperFn = () => {\n            outputs = f();\n        };\n        let timer;\n        const start = util.now();\n        if (this.backendTimer.timerAvailable()) {\n            timer = this.backendTimer.time(holdResultWrapperFn);\n        }\n        else {\n            holdResultWrapperFn();\n            for (const output of outputs) {\n                output.dataSync();\n            }\n            timer = Promise.resolve({ kernelMs: util.now() - start });\n        }\n        if (env().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n            for (let i = 0; i < outputs.length; i++) {\n                const output = outputs[i];\n                // Dangling promise here because we don't want to propagate up\n                // asynchronicity.\n                output.data().then(tensorVals => {\n                    checkComputationForErrors(tensorVals, output.dtype, kernelName);\n                });\n            }\n        }\n        const kernelProfile = {\n            kernelName,\n            outputs,\n            inputs,\n            timeMs: timer.then(timing => timing.kernelMs),\n            extraInfo: timer.then(timing => timing.getExtraProfileInfo != null ?\n                timing.getExtraProfileInfo() :\n                '')\n        };\n        return kernelProfile;\n    }\n    logKernelProfile(kernelProfile) {\n        const { kernelName, outputs, timeMs, inputs, extraInfo } = kernelProfile;\n        outputs.forEach(result => {\n            Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n                this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);\n            });\n        });\n    }\n}\nexport function checkComputationForErrors(vals, dtype, kernelName) {\n    if (dtype !== 'float32') {\n        // Only floating point computations will generate NaN values\n        return false;\n    }\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            // Throwing custom exception so behavior is testable.\n            console.warn(`Found ${num} in the result of '${kernelName}'`);\n            return true;\n        }\n    }\n    return false;\n}\nexport class Logger {\n    logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {\n        const time = typeof timeMs === 'number' ? util.rightPad(`${timeMs}ms`, 9) :\n            timeMs['error'];\n        const paddedName = util.rightPad(name, 25);\n        const rank = result.rank;\n        const size = result.size;\n        const shape = util.rightPad(result.shape.toString(), 14);\n        let inputShapesDescription = '';\n        for (const name in inputs) {\n            const input = inputs[name];\n            if (input != null) {\n                // The input might be a non-tensor (e.g HTMLImageElement), in which case\n                // we claim the output shape as input shape.\n                const inputShape = input.shape || result.shape;\n                const inputRank = inputShape.length;\n                inputShapesDescription +=\n                    `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n            }\n        }\n        console.log(`%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${inputShapesDescription}\\t%c${extraInfo}`, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    }\n}\n//# sourceMappingURL=profiler.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { absGradConfig } from './gradients/Abs_grad';\nimport { acosGradConfig } from './gradients/Acos_grad';\nimport { acoshGradConfig } from './gradients/Acosh_grad';\nimport { addGradConfig } from './gradients/Add_grad';\nimport { addNGradConfig } from './gradients/AddN_grad';\nimport { argMaxGradConfig } from './gradients/ArgMax_grad';\nimport { argMinGradConfig } from './gradients/ArgMin_grad';\nimport { asinGradConfig } from './gradients/Asin_grad';\nimport { asinhGradConfig } from './gradients/Asinh_grad';\nimport { atan2GradConfig } from './gradients/Atan2_grad';\nimport { atanGradConfig } from './gradients/Atan_grad';\nimport { atanhGradConfig } from './gradients/Atanh_grad';\nimport { avgPool3DGradConfig } from './gradients/AvgPool3D_grad';\nimport { avgPoolGradConfig } from './gradients/AvgPool_grad';\nimport { batchMatMulGradConfig } from './gradients/BatchMatMul_grad';\nimport { batchToSpaceNDGradConfig } from './gradients/BatchToSpaceND_grad';\nimport { broadcastToGradConfig } from './gradients/BroadcastTo_grad';\nimport { castGradConfig } from './gradients/Cast_grad';\nimport { ceilGradConfig } from './gradients/Ceil_grad';\nimport { clipByValueGradConfig } from './gradients/ClipByValue_grad';\nimport { complexAbsGradConfig } from './gradients/ComplexAbs_grad';\nimport { concatGradConfig } from './gradients/Concat_grad';\nimport { conv2DGradConfig } from './gradients/Conv2D_grad';\nimport { conv2DBackpropInputGradConfig } from './gradients/Conv2DBackpropInput_grad';\nimport { conv3DGradConfig } from './gradients/Conv3D_grad';\nimport { cosGradConfig } from './gradients/Cos_grad';\nimport { coshGradConfig } from './gradients/Cosh_grad';\nimport { cumsumGradConfig } from './gradients/Cumsum_grad';\nimport { depthwiseConv2dNativeGradConfig } from './gradients/DepthwiseConv2dNative_grad';\nimport { dilation2dGradConfig } from './gradients/Dilation2D_grad';\nimport { eluGradConfig } from './gradients/Elu_grad';\nimport { erfGradConfig } from './gradients/Erf_grad';\nimport { expGradConfig } from './gradients/Exp_grad';\nimport { expandDimsGradConfig } from './gradients/ExpandDims_grad';\nimport { expm1GradConfig } from './gradients/Expm1_grad';\nimport { floorGradConfig } from './gradients/Floor_grad';\nimport { floorDivGradConfig } from './gradients/FloorDiv_grad';\nimport { fusedBatchNormGradConfig } from './gradients/FusedBatchNorm_grad';\nimport { gatherGradConfig } from './gradients/GatherV2_grad';\nimport { greaterEqualGradConfig } from './gradients/GreaterEqual_grad';\nimport { identityGradConfig } from './gradients/Identity_grad';\nimport { isFiniteGradConfig } from './gradients/IsFinite_grad';\nimport { isInfGradConfig } from './gradients/IsInf_grad';\nimport { isNanGradConfig } from './gradients/IsNan_grad';\nimport { leakyReluGradConfig } from './gradients/LeakyRelu_grad';\nimport { log1pGradConfig } from './gradients/Log1p_grad';\nimport { logGradConfig } from './gradients/Log_grad';\nimport { logSoftmaxGradConfig } from './gradients/LogSoftmax_grad';\nimport { lrnGradConfig } from './gradients/LRN_grad';\nimport { maxGradConfig } from './gradients/Max_grad';\nimport { maximumGradConfig } from './gradients/Maximum_grad';\nimport { maxPool3DGradConfig } from './gradients/MaxPool3D_grad';\nimport { maxPoolGradConfig } from './gradients/MaxPool_grad';\nimport { meanGradConfig } from './gradients/Mean_grad';\nimport { minGradConfig } from './gradients/Min_grad';\nimport { minimumGradConfig } from './gradients/Minimum_grad';\nimport { mirrorPadGradConfig } from './gradients/MirrorPad_grad';\nimport { modGradConfig } from './gradients/Mod_grad';\nimport { multiplyGradConfig } from './gradients/Multiply_grad';\nimport { negGradConfig } from './gradients/Neg_grad';\nimport { oneHotGradConfig } from './gradients/OneHot_grad';\nimport { onesLikeGradConfig } from './gradients/OnesLike_grad';\nimport { packGradConfig } from './gradients/Pack_grad';\nimport { padV2GradConfig } from './gradients/PadV2_grad';\nimport { powGradConfig } from './gradients/Pow_grad';\nimport { preluGradConfig } from './gradients/Prelu_grad';\nimport { divGradConfig } from './gradients/RealDiv_grad';\nimport { reciprocalGradConfig } from './gradients/Reciprocal_grad';\nimport { relu6GradConfig } from './gradients/Relu6_grad';\nimport { reluGradConfig } from './gradients/Relu_grad';\nimport { reshapeGradConfig } from './gradients/Reshape_grad';\nimport { resizeBilinearGradConfig } from './gradients/ResizeBilinear_grad';\nimport { resizeNearestNeighborGradConfig } from './gradients/ResizeNearestNeighbor_grad';\nimport { reverseGradConfig } from './gradients/Reverse_grad';\nimport { roundGradConfig } from './gradients/Round_grad';\nimport { rsqrtGradConfig } from './gradients/Rsqrt_grad';\nimport { selectGradConfig } from './gradients/Select_grad';\nimport { seluGradConfig } from './gradients/Selu_grad';\nimport { sigmoidGradConfig } from './gradients/Sigmoid_grad';\nimport { signGradConfig } from './gradients/Sign_grad';\nimport { sinGradConfig } from './gradients/Sin_grad';\nimport { sinhGradConfig } from './gradients/Sinh_grad';\nimport { sliceGradConfig } from './gradients/Slice_grad';\nimport { softmaxGradConfig } from './gradients/Softmax_grad';\nimport { softplusGradConfig } from './gradients/Softplus_grad';\nimport { spaceToBatchNDGradConfig } from './gradients/SpaceToBatchND_grad';\nimport { splitVGradConfig } from './gradients/SplitV_grad';\nimport { sqrtGradConfig } from './gradients/Sqrt_grad';\nimport { squareGradConfig } from './gradients/Square_grad';\nimport { squaredDifferenceGradConfig } from './gradients/SquaredDifference_grad';\nimport { stepGradConfig } from './gradients/Step_grad';\nimport { subGradConfig } from './gradients/Sub_grad';\nimport { sumGradConfig } from './gradients/Sum_grad';\nimport { tanGradConfig } from './gradients/Tan_grad';\nimport { tanhGradConfig } from './gradients/Tanh_grad';\nimport { tileGradConfig } from './gradients/Tile_grad';\nimport { transposeGradConfig } from './gradients/Transpose_grad';\nimport { unpackGradConfig } from './gradients/Unpack_grad';\nimport { unsortedSegmentSumGradConfig } from './gradients/UnsortedSegmentSum_grad';\nimport { zerosLikeGradConfig } from './gradients/ZerosLike_grad';\nimport { registerGradient } from './kernel_registry';\n// Export all kernel configs here so that the package can auto register them\nconst gradConfigs = [\n    absGradConfig,\n    acosGradConfig,\n    acoshGradConfig,\n    addGradConfig,\n    addNGradConfig,\n    argMaxGradConfig,\n    argMinGradConfig,\n    asinGradConfig,\n    asinhGradConfig,\n    atan2GradConfig,\n    atanGradConfig,\n    atanhGradConfig,\n    avgPool3DGradConfig,\n    avgPoolGradConfig,\n    batchMatMulGradConfig,\n    batchToSpaceNDGradConfig,\n    broadcastToGradConfig,\n    castGradConfig,\n    ceilGradConfig,\n    clipByValueGradConfig,\n    complexAbsGradConfig,\n    concatGradConfig,\n    conv2DBackpropInputGradConfig,\n    conv2DGradConfig,\n    conv3DGradConfig,\n    cosGradConfig,\n    coshGradConfig,\n    cumsumGradConfig,\n    depthwiseConv2dNativeGradConfig,\n    dilation2dGradConfig,\n    divGradConfig,\n    eluGradConfig,\n    erfGradConfig,\n    expGradConfig,\n    expandDimsGradConfig,\n    expm1GradConfig,\n    floorDivGradConfig,\n    floorGradConfig,\n    fusedBatchNormGradConfig,\n    gatherGradConfig,\n    greaterEqualGradConfig,\n    identityGradConfig,\n    isFiniteGradConfig,\n    isInfGradConfig,\n    isNanGradConfig,\n    leakyReluGradConfig,\n    log1pGradConfig,\n    logGradConfig,\n    logSoftmaxGradConfig,\n    lrnGradConfig,\n    maxGradConfig,\n    maxGradConfig,\n    maximumGradConfig,\n    maxPool3DGradConfig,\n    maxPoolGradConfig,\n    meanGradConfig,\n    minGradConfig,\n    minimumGradConfig,\n    mirrorPadGradConfig,\n    modGradConfig,\n    multiplyGradConfig,\n    negGradConfig,\n    oneHotGradConfig,\n    onesLikeGradConfig,\n    packGradConfig,\n    padV2GradConfig,\n    padV2GradConfig,\n    powGradConfig,\n    preluGradConfig,\n    reciprocalGradConfig,\n    relu6GradConfig,\n    reluGradConfig,\n    reshapeGradConfig,\n    resizeBilinearGradConfig,\n    resizeNearestNeighborGradConfig,\n    reverseGradConfig,\n    roundGradConfig,\n    rsqrtGradConfig,\n    selectGradConfig,\n    seluGradConfig,\n    sigmoidGradConfig,\n    signGradConfig,\n    sinGradConfig,\n    sinhGradConfig,\n    sliceGradConfig,\n    softmaxGradConfig,\n    softplusGradConfig,\n    spaceToBatchNDGradConfig,\n    spaceToBatchNDGradConfig,\n    splitVGradConfig,\n    splitVGradConfig,\n    sqrtGradConfig,\n    squaredDifferenceGradConfig,\n    squareGradConfig,\n    stepGradConfig,\n    subGradConfig,\n    sumGradConfig,\n    tanGradConfig,\n    tanhGradConfig,\n    tileGradConfig,\n    transposeGradConfig,\n    unpackGradConfig,\n    unsortedSegmentSumGradConfig,\n    zerosLikeGradConfig\n];\nfor (const gradientConfig of gradConfigs) {\n    registerGradient(gradientConfig);\n}\n//# sourceMappingURL=register_all_gradients.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from './util';\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport class Serializable {\n    /**\n     * Return the class name for this class to use in serialization contexts.\n     *\n     * Generally speaking this will be the same thing that constructor.name\n     * would have returned.  However, the class name needs to be robust\n     * against minification for serialization/deserialization to work properly.\n     *\n     * There's also places such as initializers.VarianceScaling, where\n     * implementation details between different languages led to different\n     * class hierarchies and a non-leaf node is used for serialization purposes.\n     */\n    getClassName() {\n        return this.constructor\n            .className;\n    }\n    /**\n     * Creates an instance of T from a ConfigDict.\n     *\n     * This works for most descendants of serializable.  A few need to\n     * provide special handling.\n     * @param cls A Constructor for the class to instantiate.\n     * @param config The Configuration for the object.\n     */\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config);\n    }\n}\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n    constructor() {\n        this.classNameMap = {};\n    }\n    /**\n     * Returns the singleton instance of the map.\n     */\n    static getMap() {\n        if (SerializationMap.instance == null) {\n            SerializationMap.instance = new SerializationMap();\n        }\n        return SerializationMap.instance;\n    }\n    /**\n     * Registers the class as serializable.\n     */\n    static register(cls) {\n        SerializationMap.getMap().classNameMap[cls.className] =\n            [cls, cls.fromConfig];\n    }\n}\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nexport function registerClass(cls) {\n    assert(cls.className != null, () => `Class being registered does not have the static className ` +\n        `property defined.`);\n    assert(typeof cls.className === 'string', () => `className is required to be a string, but got type ` +\n        typeof cls.className);\n    assert(cls.className.length > 0, () => `Class being registered has an empty-string as its className, ` +\n        `which is disallowed.`);\n    SerializationMap.register(cls);\n}\n//# sourceMappingURL=serialization.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { abs } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.abs = function () {\n    this.throwIfDisposed();\n    return abs(this);\n};\n//# sourceMappingURL=abs.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { acos } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.acos = function () {\n    this.throwIfDisposed();\n    return acos(this);\n};\n//# sourceMappingURL=acos.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { acosh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.acosh = function () {\n    this.throwIfDisposed();\n    return acosh(this);\n};\n//# sourceMappingURL=acosh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { add } from '../../ops/add';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.add = function (b) {\n    this.throwIfDisposed();\n    return add(this, b);\n};\n//# sourceMappingURL=add.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { all } from '../../ops/all';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.all = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return all(this, axis, keepDims);\n};\n//# sourceMappingURL=all.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { any } from '../../ops/any';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.any = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return any(this, axis, keepDims);\n};\n//# sourceMappingURL=any.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { argMax } from '../../ops/arg_max';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.argMax = function (axis) {\n    this.throwIfDisposed();\n    return argMax(this, axis);\n};\n//# sourceMappingURL=arg_max.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { argMin } from '../../ops/arg_min';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.argMin = function (axis) {\n    this.throwIfDisposed();\n    return argMin(this, axis);\n};\n//# sourceMappingURL=arg_min.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\nimport { assert } from '../../util';\n/**\n * Converts a size-1 `tf.Tensor` to a `tf.Scalar`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.asScalar = function () {\n    this.throwIfDisposed();\n    assert(this.size === 1, () => 'The array must have only 1 element.');\n    return reshape(this, []);\n};\n//# sourceMappingURL=as_scalar.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts a `tf.Tensor` to a specified dtype.\n *\n * @param dtype Data-type to cast the tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.asType = function (dtype) {\n    this.throwIfDisposed();\n    return cast(this, dtype);\n};\n//# sourceMappingURL=as_type.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor1D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.as1D = function () {\n    this.throwIfDisposed();\n    return reshape(this, [this.size]);\n};\n//# sourceMappingURL=as1d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor2D`.\n *\n * @param rows Number of rows in `tf.Tensor2D`.\n * @param columns Number of columns in `tf.Tensor2D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.as2D = function (rows, columns) {\n    this.throwIfDisposed();\n    return reshape(this, [rows, columns]);\n};\n//# sourceMappingURL=as2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor3D`.\n *\n * @param rows Number of rows in `tf.Tensor3D`.\n * @param columns Number of columns in `tf.Tensor3D`.\n * @param depth Depth of `tf.Tensor3D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.as3D = function (rows, columns, depth) {\n    this.throwIfDisposed();\n    return reshape(this, [rows, columns, depth]);\n};\n//# sourceMappingURL=as3d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor4D`.\n *\n * @param rows Number of rows in `tf.Tensor4D`.\n * @param columns Number of columns in `tf.Tensor4D`.\n * @param depth Depth of `tf.Tensor4D`.\n * @param depth2 4th dimension of `tf.Tensor4D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.as4D = function (rows, columns, depth, depth2) {\n    this.throwIfDisposed();\n    return reshape(this, [rows, columns, depth, depth2]);\n};\n//# sourceMappingURL=as4d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor5D`.\n *\n * @param rows Number of rows in `tf.Tensor5D`.\n * @param columns Number of columns in `tf.Tensor5D`.\n * @param depth Depth of `tf.Tensor5D`.\n * @param depth2 4th dimension of `tf.Tensor5D`.\n * @param depth3 5th dimension of 'tf.Tensor5D'\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.as5D = function (rows, columns, depth, depth2, depth3) {\n    this.throwIfDisposed();\n    return reshape(this, [rows, columns, depth, depth2, depth3]);\n};\n//# sourceMappingURL=as5d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { asin } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.asin = function () {\n    this.throwIfDisposed();\n    return asin(this);\n};\n//# sourceMappingURL=asin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { asinh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.asinh = function () {\n    this.throwIfDisposed();\n    return asinh(this);\n};\n//# sourceMappingURL=asinh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { atan } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.atan = function () {\n    this.throwIfDisposed();\n    return atan(this);\n};\n//# sourceMappingURL=atan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atan2 } from '../../ops/atan2';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.atan2 = function (b) {\n    this.throwIfDisposed();\n    return atan2(this, b);\n};\n//# sourceMappingURL=atan2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { atanh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.atanh = function () {\n    this.throwIfDisposed();\n    return atanh(this);\n};\n//# sourceMappingURL=atanh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { avgPool } from '../../ops/avg_pool';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.avgPool =\n    function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return avgPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n//# sourceMappingURL=avg_pool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { batchToSpaceND } from '../../ops/batch_to_space_nd';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.batchToSpaceND = function (blockShape, crops) {\n    this.throwIfDisposed();\n    return batchToSpaceND(this, blockShape, crops);\n};\n//# sourceMappingURL=batch_to_space_nd.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { batchNorm } from '../../ops/batchnorm';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.batchNorm = function (mean, variance, offset, scale, varianceEpsilon) {\n    this.throwIfDisposed();\n    return batchNorm(this, mean, variance, offset, scale, varianceEpsilon);\n};\n//# sourceMappingURL=batchnorm.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { broadcastTo } from '../../ops/broadcast_to';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.broadcastTo = function (shape) {\n    this.throwIfDisposed();\n    return broadcastTo(this, shape);\n};\n//# sourceMappingURL=broadcast_to.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.cast = function (dtype) {\n    this.throwIfDisposed();\n    return cast(this, dtype);\n};\n//# sourceMappingURL=cast.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { ceil } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.ceil = function () {\n    this.throwIfDisposed();\n    return ceil(this);\n};\n//# sourceMappingURL=ceil.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { clipByValue } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.clipByValue = function (min, max) {\n    this.throwIfDisposed();\n    return clipByValue(this, min, max);\n};\n//# sourceMappingURL=clip_by_value.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../../ops/concat';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\ngetGlobalTensorClass().prototype.concat = function (x, axis) {\n    this.throwIfDisposed();\n    if (x instanceof Tensor) {\n        x = [x];\n    }\n    return concat([this, ...x], axis);\n};\n//# sourceMappingURL=concat.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv1d } from '../../ops/conv1d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n    this.throwIfDisposed();\n    return conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n};\n//# sourceMappingURL=conv1d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv2dTranspose } from '../../ops/conv2d_transpose';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.conv2dTranspose =\n    function (filter, outputShape, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return conv2dTranspose(this, filter, outputShape, strides, pad, dimRoundingMode);\n    };\n//# sourceMappingURL=conv2d_transpose.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv2d } from '../../ops/conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.conv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n    this.throwIfDisposed();\n    return conv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n};\n//# sourceMappingURL=conv2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cos } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.cos = function () {\n    this.throwIfDisposed();\n    return cos(this);\n};\n//# sourceMappingURL=cos.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cosh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.cosh = function () {\n    this.throwIfDisposed();\n    return cosh(this);\n};\n//# sourceMappingURL=cosh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { cumsum } from '../../ops/cumsum';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.cumsum = function (axis, exclusive, reverse) {\n    this.throwIfDisposed();\n    return cumsum(this, axis, exclusive, reverse);\n};\n//# sourceMappingURL=cumsum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { depthToSpace } from '../../ops/depth_to_space';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.depthToSpace = function (blockSize, dataFormat) {\n    this.throwIfDisposed();\n    return depthToSpace(this, blockSize, dataFormat);\n};\n//# sourceMappingURL=depth_to_space.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { depthwiseConv2d } from '../../ops/depthwise_conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.depthwiseConv2d =\n    function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        this.throwIfDisposed();\n        return depthwiseConv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n//# sourceMappingURL=depthwise_conv2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dilation2d } from '../../ops/dilation2d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.dilation2d =\n    function (filter, strides, pad, dilations, dataFormat) {\n        this.throwIfDisposed();\n        return dilation2d(this, filter, strides, pad, dilations, dataFormat);\n    };\n//# sourceMappingURL=dilation2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { divNoNan } from '../../ops/div_no_nan';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.divNoNan = function (b) {\n    this.throwIfDisposed();\n    return divNoNan(this, b);\n};\n//# sourceMappingURL=div_no_nan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { div } from '../../ops/div';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.div = function (b) {\n    this.throwIfDisposed();\n    return div(this, b);\n};\n//# sourceMappingURL=div.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dot } from '../../ops/dot';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.dot = function (b) {\n    this.throwIfDisposed();\n    return dot(this, b);\n};\n//# sourceMappingURL=dot.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { elu } from '../../ops/elu';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.elu = function () {\n    this.throwIfDisposed();\n    return elu(this);\n};\n//# sourceMappingURL=elu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { equal } from '../../ops/equal';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.equal = function (b) {\n    this.throwIfDisposed();\n    return equal(this, b);\n};\n//# sourceMappingURL=equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { erf } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.erf = function () {\n    this.throwIfDisposed();\n    return erf(this);\n};\n//# sourceMappingURL=erf.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { exp } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.exp = function () {\n    this.throwIfDisposed();\n    return exp(this);\n};\n//# sourceMappingURL=exp.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { expandDims } from '../../ops/expand_dims';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.expandDims = function (axis) {\n    this.throwIfDisposed();\n    return expandDims(this, axis);\n};\n//# sourceMappingURL=expand_dims.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { expm1 } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.expm1 = function () {\n    this.throwIfDisposed();\n    return expm1(this);\n};\n//# sourceMappingURL=expm1.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { fft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.fft = function () {\n    this.throwIfDisposed();\n    return fft(this);\n};\n//# sourceMappingURL=fft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Flatten a Tensor to a 1D array.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.flatten = function () {\n    this.throwIfDisposed();\n    return reshape(this, [this.size]);\n};\n//# sourceMappingURL=flatten.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { floor } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.floor = function () {\n    this.throwIfDisposed();\n    return floor(this);\n};\n//# sourceMappingURL=floor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { floorDiv } from '../../ops/floorDiv';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.floorDiv = function (b) {\n    this.throwIfDisposed();\n    return floorDiv(this, b);\n};\n//# sourceMappingURL=floorDiv.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { gather } from '../../ops/gather';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.gather = function (indices, axis) {\n    this.throwIfDisposed();\n    return gather(this, indices, axis);\n};\n//# sourceMappingURL=gather.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { greaterEqual } from '../../ops/greater_equal';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.greaterEqual = function (b) {\n    this.throwIfDisposed();\n    return greaterEqual(this, b);\n};\n//# sourceMappingURL=greater_equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { greater } from '../../ops/greater';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.greater = function (b) {\n    this.throwIfDisposed();\n    return greater(this, b);\n};\n//# sourceMappingURL=greater.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { ifft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.ifft = function () {\n    this.throwIfDisposed();\n    return ifft(this);\n};\n//# sourceMappingURL=ifft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { irfft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.irfft = function () {\n    this.throwIfDisposed();\n    return irfft(this);\n};\n//# sourceMappingURL=irfft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { isFinite } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.isFinite = function () {\n    this.throwIfDisposed();\n    return isFinite(this);\n};\n//# sourceMappingURL=is_finite.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { isInf } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.isInf = function () {\n    this.throwIfDisposed();\n    return isInf(this);\n};\n//# sourceMappingURL=is_inf.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { isNaN } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.isNaN = function () {\n    this.throwIfDisposed();\n    return isNaN(this);\n};\n//# sourceMappingURL=is_nan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { leakyRelu } from '../../ops/leaky_relu';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.leakyRelu = function (alpha) {\n    this.throwIfDisposed();\n    return leakyRelu(this, alpha);\n};\n//# sourceMappingURL=leaky_relu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { lessEqual } from '../../ops/less_equal';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.lessEqual = function (b) {\n    this.throwIfDisposed();\n    return lessEqual(this, b);\n};\n//# sourceMappingURL=less_equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { less } from '../../ops/less';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.less = function (b) {\n    this.throwIfDisposed();\n    return less(this, b);\n};\n//# sourceMappingURL=less.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { localResponseNormalization } from '../../ops/local_response_normalization';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.localResponseNormalization =\n    function (depthRadius, bias, alpha, beta) {\n        this.throwIfDisposed();\n        return localResponseNormalization(this, depthRadius, bias, alpha, beta);\n    };\n//# sourceMappingURL=local_response_normalization.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { logSigmoid } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logSigmoid = function () {\n    this.throwIfDisposed();\n    return logSigmoid(this);\n};\n//# sourceMappingURL=log_sigmoid.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { logSoftmax } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logSoftmax = function (axis) {\n    this.throwIfDisposed();\n    return logSoftmax(this, axis);\n};\n//# sourceMappingURL=log_softmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logSumExp } from '../../ops/log_sum_exp';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logSumExp = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return logSumExp(this, axis, keepDims);\n};\n//# sourceMappingURL=log_sum_exp.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { log } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.log = function () {\n    this.throwIfDisposed();\n    return log(this);\n};\n//# sourceMappingURL=log.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { log1p } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.log1p = function () {\n    this.throwIfDisposed();\n    return log1p(this);\n};\n//# sourceMappingURL=log1p.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalAnd } from '../../ops/logical_and';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logicalAnd = function (b) {\n    this.throwIfDisposed();\n    return logicalAnd(this, b);\n};\n//# sourceMappingURL=logical_and.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalNot } from '../../ops/logical_not';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logicalNot = function () {\n    this.throwIfDisposed();\n    return logicalNot(this);\n};\n//# sourceMappingURL=logical_not.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalOr } from '../../ops/logical_or';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logicalOr = function (b) {\n    this.throwIfDisposed();\n    return logicalOr(this, b);\n};\n//# sourceMappingURL=logical_or.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { logicalXor } from '../../ops/logical_xor';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.logicalXor = function (b) {\n    this.throwIfDisposed();\n    return logicalXor(this, b);\n};\n//# sourceMappingURL=logical_xor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { matMul } from '../../ops/mat_mul';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.matMul = function (b, transposeA, transposeB) {\n    this.throwIfDisposed();\n    return matMul(this, b, transposeA, transposeB);\n};\n//# sourceMappingURL=mat_mul.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { maxPool } from '../../ops/max_pool';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.maxPool =\n    function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return maxPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n//# sourceMappingURL=max_pool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { max } from '../../ops/max';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.max = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return max(this, axis, keepDims);\n};\n//# sourceMappingURL=max.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { maximum } from '../../ops/maximum';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.maximum = function (b) {\n    this.throwIfDisposed();\n    return maximum(this, b);\n};\n//# sourceMappingURL=maximum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mean } from '../../ops/mean';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.mean = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return mean(this, axis, keepDims);\n};\n//# sourceMappingURL=mean.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { min } from '../../ops/min';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.min = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return min(this, axis, keepDims);\n};\n//# sourceMappingURL=min.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { minimum } from '../../ops/minimum';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.minimum = function (b) {\n    this.throwIfDisposed();\n    return minimum(this, b);\n};\n//# sourceMappingURL=minimum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mirrorPad } from '../../ops/mirror_pad';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.mirrorPad = function (paddings, mode) {\n    this.throwIfDisposed();\n    return mirrorPad(this, paddings, mode);\n};\n//# sourceMappingURL=mirror_pad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mod } from '../../ops/mod';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.mod = function (b) {\n    this.throwIfDisposed();\n    return mod(this, b);\n};\n//# sourceMappingURL=mod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mul } from '../../ops/mul';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.mul = function (b) {\n    this.throwIfDisposed();\n    return mul(this, b);\n};\n//# sourceMappingURL=mul.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { neg } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.neg = function () {\n    this.throwIfDisposed();\n    return neg(this);\n};\n//# sourceMappingURL=neg.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { norm } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.norm = function (ord, axis, keepDims) {\n    this.throwIfDisposed();\n    return norm(this, ord, axis, keepDims);\n};\n//# sourceMappingURL=norm.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { notEqual } from '../../ops/not_equal';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.notEqual = function (b) {\n    this.throwIfDisposed();\n    return notEqual(this, b);\n};\n//# sourceMappingURL=not_equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { oneHot } from '../../ops/one_hot';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.oneHot = function (depth, onValue = 1, offValue = 0) {\n    this.throwIfDisposed();\n    return oneHot(this, depth, onValue, offValue);\n};\n//# sourceMappingURL=one_hot.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { onesLike } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.onesLike = function () {\n    this.throwIfDisposed();\n    return onesLike(this);\n};\n//# sourceMappingURL=ones_like.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pad } from '../../ops/pad';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.pad = function (paddings, constantValue) {\n    this.throwIfDisposed();\n    return pad(this, paddings, constantValue);\n};\n//# sourceMappingURL=pad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pool } from '../../ops/pool';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.pool = function (windowShape, poolingType, padding, dilationRate, strides) {\n    this.throwIfDisposed();\n    return pool(this, windowShape, poolingType, padding, dilationRate, strides);\n};\n//# sourceMappingURL=pool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pow } from '../../ops/pow';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.pow = function (exp) {\n    this.throwIfDisposed();\n    return pow(this, exp);\n};\n//# sourceMappingURL=pow.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { prelu } from '../../ops/prelu';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.prelu = function (alpha) {\n    this.throwIfDisposed();\n    return prelu(this, alpha);\n};\n//# sourceMappingURL=prelu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { prod } from '../../ops/prod';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.prod = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return prod(this, axis, keepDims);\n};\n//# sourceMappingURL=prod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { reciprocal } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.reciprocal = function () {\n    this.throwIfDisposed();\n    return reciprocal(this);\n};\n//# sourceMappingURL=reciprocal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { relu } from '../../ops/relu';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.relu = function () {\n    this.throwIfDisposed();\n    return relu(this);\n};\n//# sourceMappingURL=relu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { relu6 } from '../../ops/relu6';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.relu6 = function () {\n    this.throwIfDisposed();\n    return relu6(this);\n};\n//# sourceMappingURL=relu6.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Reshapes the tensor into the shape of the provided tensor.\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.reshapeAs = function (x) {\n    this.throwIfDisposed();\n    return reshape(this, x.shape);\n};\n//# sourceMappingURL=reshape_as.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.reshape = function (shape) {\n    this.throwIfDisposed();\n    return reshape(this, shape);\n};\n//# sourceMappingURL=reshape.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { resizeBilinear } from '../../ops/image/resize_bilinear';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.resizeBilinear =\n    function (newShape2D, alignCorners, halfPixelCenters) {\n        this.throwIfDisposed();\n        return resizeBilinear(this, newShape2D, alignCorners, halfPixelCenters);\n    };\n//# sourceMappingURL=resize_bilinear.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { resizeNearestNeighbor } from '../../ops/image/resize_nearest_neighbor';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.resizeNearestNeighbor =\n    function (newShape2D, alignCorners, halfFloatCenters) {\n        this.throwIfDisposed();\n        return resizeNearestNeighbor(this, newShape2D, alignCorners, halfFloatCenters);\n    };\n//# sourceMappingURL=resize_nearest_neighbor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reverse } from '../../ops/reverse';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.reverse = function (axis) {\n    this.throwIfDisposed();\n    return reverse(this, axis);\n};\n//# sourceMappingURL=reverse.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { rfft } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.rfft = function () {\n    this.throwIfDisposed();\n    return rfft(this);\n};\n//# sourceMappingURL=rfft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { round } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.round = function () {\n    this.throwIfDisposed();\n    return round(this);\n};\n//# sourceMappingURL=round.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { rsqrt } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.rsqrt = function () {\n    this.throwIfDisposed();\n    return rsqrt(this);\n};\n//# sourceMappingURL=rsqrt.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { selu } from '../../ops/selu';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.selu = function () {\n    this.throwIfDisposed();\n    return selu(this);\n};\n//# sourceMappingURL=selu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { separableConv2d } from '../../ops/separable_conv2d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.separableConv2d =\n    function (depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n        this.throwIfDisposed();\n        return separableConv2d(this, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat);\n    };\n//# sourceMappingURL=separable_conv2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sigmoid } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sigmoid = function () {\n    this.throwIfDisposed();\n    return sigmoid(this);\n};\n//# sourceMappingURL=sigmoid.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sign } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sign = function () {\n    this.throwIfDisposed();\n    return sign(this);\n};\n//# sourceMappingURL=sign.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sin } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sin = function () {\n    this.throwIfDisposed();\n    return sin(this);\n};\n//# sourceMappingURL=sin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sinh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sinh = function () {\n    this.throwIfDisposed();\n    return sinh(this);\n};\n//# sourceMappingURL=sinh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { slice } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.slice = function (begin, size) {\n    this.throwIfDisposed();\n    return slice(this, begin, size);\n};\n//# sourceMappingURL=slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { softmax } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.softmax = function (dim) {\n    this.throwIfDisposed();\n    return softmax(this, dim);\n};\n//# sourceMappingURL=softmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { softplus } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.softplus = function () {\n    this.throwIfDisposed();\n    return softplus(this);\n};\n//# sourceMappingURL=softplus.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { spaceToBatchND } from '../../ops/space_to_batch_nd';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.spaceToBatchND = function (blockShape, paddings) {\n    this.throwIfDisposed();\n    return spaceToBatchND(this, blockShape, paddings);\n};\n//# sourceMappingURL=space_to_batch_nd.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { split } from '../../ops/split';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.split = function (numOrSizeSplits, axis) {\n    this.throwIfDisposed();\n    return split(this, numOrSizeSplits, axis);\n};\n//# sourceMappingURL=split.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { sqrt } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sqrt = function () {\n    this.throwIfDisposed();\n    return sqrt(this);\n};\n//# sourceMappingURL=sqrt.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { square } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.square = function () {\n    this.throwIfDisposed();\n    return square(this);\n};\n//# sourceMappingURL=square.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { squaredDifference } from '../../ops/squared_difference';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.squaredDifference = function (b) {\n    this.throwIfDisposed();\n    return squaredDifference(this, b);\n};\n//# sourceMappingURL=squared_difference.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { squeeze } from '../../ops/squeeze';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.squeeze = function (axis) {\n    this.throwIfDisposed();\n    return squeeze(this, axis);\n};\n//# sourceMappingURL=squeeze.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { stack } from '../../ops/stack';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\ngetGlobalTensorClass().prototype.stack = function (x, axis) {\n    this.throwIfDisposed();\n    const tensorsToBeStacked = x instanceof Tensor ? [this, x] : [this, ...x];\n    return stack(tensorsToBeStacked, axis);\n};\n//# sourceMappingURL=stack.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { step } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.step = function (alpha) {\n    this.throwIfDisposed();\n    return step(this, alpha);\n};\n//# sourceMappingURL=step.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { stridedSlice } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.stridedSlice = function (begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n    this.throwIfDisposed();\n    return stridedSlice(this, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n};\n//# sourceMappingURL=strided_slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { sub } from '../../ops/sub';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sub = function (b) {\n    this.throwIfDisposed();\n    return sub(this, b);\n};\n//# sourceMappingURL=sub.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { sum } from '../../ops/sum';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.sum = function (axis, keepDims) {\n    this.throwIfDisposed();\n    return sum(this, axis, keepDims);\n};\n//# sourceMappingURL=sum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { tan } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.tan = function () {\n    this.throwIfDisposed();\n    return tan(this);\n};\n//# sourceMappingURL=tan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { tanh } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.tanh = function () {\n    this.throwIfDisposed();\n    return tanh(this);\n};\n//# sourceMappingURL=tanh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tile } from '../../ops/tile';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.tile = function (reps) {\n    this.throwIfDisposed();\n    return tile(this, reps);\n};\n//# sourceMappingURL=tile.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts the array to type `bool`\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.toBool = function () {\n    this.throwIfDisposed();\n    return cast(this, 'bool');\n};\n//# sourceMappingURL=to_bool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts the array to type `float32`\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.toFloat = function () {\n    this.throwIfDisposed();\n    return cast(this, 'float32');\n};\n//# sourceMappingURL=to_float.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { cast } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Casts the array to type `int32`\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.toInt = function () {\n    this.throwIfDisposed();\n    return cast(this, 'int32');\n};\n//# sourceMappingURL=to_int.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { topk } from '../../ops/topk';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.topk = function (k, sorted) {\n    this.throwIfDisposed();\n    return topk(this, k, sorted);\n};\n//# sourceMappingURL=topk.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { transpose } from '../../ops/transpose';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.transpose = function (perm) {\n    this.throwIfDisposed();\n    return transpose(this, perm);\n};\n//# sourceMappingURL=transpose.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unique } from '../../ops/unique';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.unique = function (axis) {\n    this.throwIfDisposed();\n    return unique(this, axis);\n};\n//# sourceMappingURL=unique.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unsortedSegmentSum } from '../../ops/unsorted_segment_sum';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.unsortedSegmentSum =\n    function (segmentIds, numSegments) {\n        this.throwIfDisposed();\n        return unsortedSegmentSum(this, segmentIds, numSegments);\n    };\n//# sourceMappingURL=unsorted_segment_sum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unstack } from '../../ops/unstack';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.unstack = function (axis) {\n    this.throwIfDisposed();\n    return unstack(this, axis);\n};\n//# sourceMappingURL=unstack.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { where } from '../../ops/where';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.where = function (condition, x) {\n    this.throwIfDisposed();\n    return where(condition, this, x);\n};\n//# sourceMappingURL=where.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { zerosLike } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.zerosLike = function () {\n    this.throwIfDisposed();\n    return zerosLike(this);\n};\n//# sourceMappingURL=zeros_like.js.map"],"names":["getFilteredNodesXToY","tape","xs","y","tensorsFromX","nodesFromX","i","length","id","node","nodeInputs","inputs","inputName","input","anyInputFromX","j","outputs","forEach","output","tensorsLeadToY","nodesToY","filteredTape","prunedInputs","nodeInput","prunedNode","Object","assign","push","backpropagateGradients","tensorAccumulatedGradientMap","tidy","add","dys","o","gradTensor","gradient","Error","kernelName","inputGradients","keys","dx","dtype","x","shape","curGradient","dispose","Profiler","constructor","backendTimer","logger","this","Logger","profileKernel","f","holdResultWrapperFn","timer","start","timerAvailable","time","dataSync","Promise","resolve","kernelMs","getBool","data","then","tensorVals","checkComputationForErrors","timeMs","timing","extraInfo","getExtraProfileInfo","logKernelProfile","kernelProfile","result","all","valueContainer","vals","num","isNaN","isFinite","name","rank","size","toString","inputShapesDescription","inputShape","inputRank","gradConfigs","gradientConfig","Serializable","getClassName","className","fromConfig","cls","config","SerializationMap","classNameMap","getMap","instance","register","registerClass","prototype","abs","throwIfDisposed","acos","acosh","b","axis","keepDims","any","argMax","argMin","asScalar","reshape","asType","cast","as1D","as2D","rows","columns","as3D","depth","as4D","depth2","as5D","depth3","asin","asinh","atan","atan2","atanh","avgPool","filterSize","strides","pad","dimRoundingMode","batchToSpaceND","blockShape","crops","batchNorm","mean","variance","offset","scale","varianceEpsilon","broadcastTo","ceil","clipByValue","min","max","concat","conv1d","filter","stride","dataFormat","dilation","conv2dTranspose","outputShape","conv2d","dilations","cos","cosh","cumsum","exclusive","reverse","depthToSpace","blockSize","depthwiseConv2d","dilation2d","divNoNan","div","dot","elu","equal","erf","exp","expandDims","expm1","fft","flatten","floor","floorDiv","gather","indices","greaterEqual","greater","ifft","irfft","isInf","leakyRelu","alpha","lessEqual","less","localResponseNormalization","depthRadius","bias","beta","logSigmoid","logSoftmax","logSumExp","log","log1p","logicalAnd","logicalNot","logicalOr","logicalXor","matMul","transposeA","transposeB","maxPool","maximum","minimum","mirrorPad","paddings","mode","mod","mul","neg","norm","ord","notEqual","oneHot","onValue","offValue","onesLike","constantValue","pool","windowShape","poolingType","padding","dilationRate","pow","prelu","prod","reciprocal","relu","relu6","reshapeAs","resizeBilinear","newShape2D","alignCorners","halfPixelCenters","resizeNearestNeighbor","halfFloatCenters","rfft","round","rsqrt","selu","separableConv2d","depthwiseFilter","pointwiseFilter","sigmoid","sign","sin","sinh","slice","begin","softmax","dim","softplus","spaceToBatchND","split","numOrSizeSplits","sqrt","square","squaredDifference","squeeze","stack","tensorsToBeStacked","step","stridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","sub","sum","tan","tanh","tile","reps","toBool","toFloat","toInt","topk","k","sorted","transpose","perm","unique","unsortedSegmentSum","segmentIds","numSegments","unstack","where","condition","zerosLike"],"sourceRoot":""}