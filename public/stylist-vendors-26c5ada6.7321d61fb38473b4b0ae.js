"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[7063],{6307:function(e,t,n){n.d(t,{W_:function(){return i},dz:function(){return r},nN:function(){return a},qW:function(){return s}});var o=n(9495);function r(e,t,n,r,a,i){const s=a.strideHeight,u=a.strideWidth,d=a.dilationHeight,f=a.dilationWidth,l=a.effectiveFilterHeight,c=a.effectiveFilterWidth,p=a.padInfo.top,I=a.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=(0,o.buffer)(a.outShape,n),g=h.values,T=a.outShape[1]*a.outShape[2]*a.outShape[3],k=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let o=0;o<a.batchSize;++o){const t=o*T,n=o*r[0];for(let o=0;o<a.inChannels;++o)for(let h=0;h<a.outHeight;++h){const T=h*s-p,x=Math.max(0,T),y=Math.min(a.inHeight,l+T),v=t+h*k;for(let t=0;t<a.outWidth;++t){const s=t*u-I,l=Math.max(0,s),p=Math.min(a.inWidth,c+s);let h=m,T=0,k=0;for(let t=x;t<y;t+=d){const a=n+t*r[1];for(let t=l;t<p;t+=f){const n=e[a+t*r[2]+o];"max"===i&&n>h?h=n:"avg"===i&&(T+=n,k++)}if(isNaN(h))break}g[v+t*b+o]="avg"===i?T/k:h}}}return h}function a(e,t,n,r,a=!1,i=!1){const s=(0,o.buffer)(r.outShape,"int32"),u=r.strideHeight,d=r.strideWidth,f=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,I=r.padInfo.top,m=r.padInfo.left,h=(0,o.buffer)(t,n,e);for(let o=0;o<r.batchSize;++o)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*u-I;let g=n;for(;g<0;)g+=f;const T=Math.min(r.inHeight,c+n);for(let u=0;u<r.outWidth;++u){const c=u*d-m;let I=c;for(;I<0;)I+=l;const k=Math.min(r.inWidth,p+c);let b=Number.NEGATIVE_INFINITY,x=-1;for(let t=g;t<T;t+=f){const s=t-n;for(let n=I;n<k;n+=l){const u=n-c,d=h.get(o,t,n,e);d>b&&(b=d,x=a?i?((o*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:s*p+u)}}s.set(x,o,t,u,e)}}return s}function i(e,t,n,r,a,i){const s=a.strideDepth,u=a.strideHeight,d=a.strideWidth,f=a.dilationDepth,l=a.dilationHeight,c=a.dilationWidth,p=a.effectiveFilterDepth,I=a.effectiveFilterHeight,m=a.effectiveFilterWidth,h=a.padInfo.front,g=a.padInfo.top,T=a.padInfo.left,k="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=(0,o.buffer)(a.outShape,n),x=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],v=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],F=a.outShape[4];for(let o=0;o<a.batchSize;++o){const t=o*y,n=o*r[0];for(let o=0;o<a.inChannels;++o)for(let b=0;b<a.outDepth;++b){const y=b*s-h;let N=y;for(;N<0;)N+=f;const W=Math.min(a.inDepth,p+y),H=t+b*v;for(let t=0;t<a.outHeight;++t){const s=t*u-g;let p=s;for(;p<0;)p+=l;const h=Math.min(a.inHeight,I+s),b=H+t*S;for(let t=0;t<a.outWidth;++t){const s=t*d-T;let u=s;for(;u<0;)u+=c;const I=Math.min(a.inWidth,m+s),g=b+t*F;let y=k,v=0,S=0;for(let t=N;t<W;t+=f){const a=n+t*r[1];for(let t=p;t<h;t+=l){const n=a+t*r[2];for(let t=u;t<I;t+=c){const a=e[n+t*r[3]+o];if("max"===i&&a>y?y=a:"avg"===i&&(v+=a,S++),isNaN(y))break}if(isNaN(y))break}if(isNaN(y))break}x[g+o]="avg"===i?v/S:y}}}}return b}function s(e,t){const n=(0,o.buffer)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=t.padInfo.front,I=t.padInfo.top,m=t.padInfo.left;for(let o=0;o<t.batchSize;++o)for(let h=0;h<t.inChannels;++h)for(let g=0;g<t.outDepth;++g){const T=g*r-p;let k=T;for(;k<0;)k+=s;const b=Math.min(t.inDepth,f+T);for(let r=0;r<t.outHeight;++r){const f=r*a-I;let p=f;for(;p<0;)p+=u;const x=Math.min(t.inHeight,l+f);for(let a=0;a<t.outWidth;++a){const I=a*i-m;let y=I;for(;y<0;)y+=d;const v=Math.min(t.inWidth,c+I);let S=Number.NEGATIVE_INFINITY,F=-1;for(let t=k;t<b;t+=s){const n=t-T;for(let r=p;r<x;r+=u){const a=r-f;for(let i=y;i<v;i+=d){const s=i-I,u=e.get(o,t,r,i,h);u>=S&&(S=u,F=n*l*c+a*l+s)}}}n.set(F,o,g,r,a,h)}}}return n}},8195:function(e,t,n){n.d(t,{Z:function(){return r}});var o=n(9495);function r(e){return(t,n,r,a,i)=>{const s=o.backend_util.assertAndGetBroadcastShape(t,n),u=s.length,d=o.util.computeStrides(s),f=o.util.sizeFromShape(s),l=o.util.getTypedArrayFromDType(i,f),c=t.length,p=n.length,I=o.util.computeStrides(t),m=o.util.computeStrides(n),h=o.backend_util.getBroadcastDims(t,s),g=o.backend_util.getBroadcastDims(n,s);if(h.length+g.length===0)for(let o=0;o<l.length;++o)l[o]=e(r[o%r.length],a[o%a.length]);else for(let T=0;T<l.length;++T){const t=o.util.indexToLoc(T,u,d),n=t.slice(-c);h.forEach((e=>n[e]=0));const i=o.util.locToIndex(n,c,I),s=t.slice(-p);g.forEach((e=>s[e]=0));const f=o.util.locToIndex(s,p,m);l[T]=e(r[i],a[f])}return[l,s]}}},9949:function(e,t,n){n.d(t,{f:function(){return f}});var o=n(24856),r=n(46936),a=n(456),i=n(50666),s=n(74016),u=n(53652),d=n(64904);function f(e,t,n,f,l){if("linear"===n)return(0,r.D)({inputs:{x:t},backend:e});if("relu"===n)return(0,s.V)({inputs:{x:t},backend:e});if("elu"===n)return(0,o.P)({inputs:{x:t},backend:e});if("relu6"===n)return(0,u.j)({inputs:{x:t},backend:e});if("prelu"===n)return(0,i.N)({inputs:{x:t,alpha:f},backend:e});if("leakyrelu"===n)return(0,a.H)({inputs:{x:t},backend:e,attrs:{alpha:l}});if("sigmoid"===n)return(0,d.r)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}},11317:function(e,t,n){n.d(t,{U:function(){return a}});var o=n(9495),r=n(89436);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),o=a(e,t,"float32");return(0,r.f)({inputs:{real:n,imag:o},backend:e})}const i=o.util.makeZerosTypedArray(o.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},13041:function(e,t,n){n.d(t,{f:function(){return I}});var o=n(9495),r=n(95315),a=n(89436),i=n(98342),s=n(46936),u=n(18944),d=n(65646),f=n(85806),l=n(61879),c=n(87906),p=n(18566);function I(e,t,n){const r=e.shape,i=r[0],s=r[1],u=n.data.get(e.dataId),d=u.complexTensorInfos.real,f=u.complexTensorInfos.imag,l=[i,s],p=o.util.sizeFromShape(l),I=o.util.getTypedArrayFromDType("float32",p),h=o.util.getTypedArrayFromDType("float32",p);for(let b=0;b<i;b++){const e=(0,c.di)({inputs:{x:d},backend:n,attrs:{begin:[b,0],size:[1,s]}}),r=(0,c.di)({inputs:{x:f},backend:n,attrs:{begin:[b,0],size:[1,s]}}),i=(0,a.f)({inputs:{real:e,imag:r},backend:n}),{real:u,imag:l}=m(i,t,n),p=o.backend_util.mergeRealAndImagArrays(u,l);for(let t=0;t<s;t++){const e=o.backend_util.getComplexWithIndex(p,t);I[b*s+t]=e.real,h[b*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const g=n.makeTensorInfo(l,"float32",I),T=n.makeTensorInfo(l,"float32",h),k=(0,a.f)({inputs:{real:g,imag:T},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(T),k}function m(e,t,n){const r=o.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,u=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((d=r)&d-1)){const a=h(i,u,r,t,n),d=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(d,"float32",a.real),t=n.makeTensorInfo(d,"float32",a.imag),i=n.makeTensorInfo([],"float32",o.util.createScalarValue(r,"float32")),u=(0,s.D)({inputs:{x:i},backend:n}),f=l.GN.kernelFunc({inputs:{a:e,b:i},backend:n}),c=l.GN.kernelFunc({inputs:{a:t,b:u},backend:n}),p=n.data.get(f.dataId).values,I=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(c),{real:p,imag:I}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,s=0;for(let r=0;r<t;r++){const u=o.backend_util.exponent(a*r,t,n),d=o.backend_util.getComplexWithIndex(e,r);i+=d.real*u.real-d.imag*u.imag,s+=d.real*u.imag+d.imag*u.real}n&&(i/=t,s/=t),o.backend_util.assignToTypedArray(r,i,s,a)}return r}(o.backend_util.mergeRealAndImagArrays(i,u),r,t);return o.backend_util.splitRealAndImagArrays(e)}var d}function h(e,t,n,s,l){if(1===n)return{real:e,imag:t};const c=o.backend_util.mergeRealAndImagArrays(e,t),I=n/2,m=o.backend_util.complexWithEvenIndex(c),g=m.real,T=m.imag,k=[g.length],b=l.makeTensorInfo(k,"float32",g),x=l.makeTensorInfo(k,"float32",T),y=(0,a.f)({inputs:{real:b,imag:x},backend:l}),v=o.backend_util.complexWithOddIndex(c),S=v.real,F=v.imag,N=[S.length],W=l.makeTensorInfo(N,"float32",S),H=l.makeTensorInfo(N,"float32",F),_=(0,a.f)({inputs:{real:W,imag:H},backend:l}),A=h(g,T,I,s,l),D=A.real,E=A.imag,G=[D.length],w=l.makeTensorInfo(G,"float32",D),C=l.makeTensorInfo(G,"float32",E),z=(0,a.f)({inputs:{real:w,imag:C},backend:l}),M=h(S,F,I,s,l),B=M.real,R=M.imag,V=[B.length],Y=l.makeTensorInfo(V,"float32",B),j=l.makeTensorInfo(V,"float32",R),q=(0,a.f)({inputs:{real:Y,imag:j},backend:l}),P=o.backend_util.exponents(n,s),Z=[P.real.length],O=l.makeTensorInfo(Z,"float32",P.real),X=l.makeTensorInfo(Z,"float32",P.imag),K=(0,a.f)({inputs:{real:O,imag:X},backend:l}),L=(0,d.lw)({inputs:{a:K,b:q},backend:l}),U=(0,r.WQ)({inputs:{a:z,b:L},backend:l}),Q=(0,p.jb)({inputs:{a:z,b:L},backend:l}),$=(0,f.x)({inputs:{input:U},backend:l}),J=(0,f.x)({inputs:{input:Q},backend:l}),ee=(0,u.n)({inputs:{input:U},backend:l}),te=(0,u.n)({inputs:{input:Q},backend:l}),ne=(0,i.x)({inputs:[$,J],backend:l,attrs:{axis:0}}),oe=(0,i.x)({inputs:[ee,te],backend:l,attrs:{axis:0}}),re=l.data.get(ne.dataId).values,ae=l.data.get(oe.dataId).values;return l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(W),l.disposeIntermediateTensorInfo(H),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(C),l.disposeIntermediateTensorInfo(z),l.disposeIntermediateTensorInfo(Y),l.disposeIntermediateTensorInfo(j),l.disposeIntermediateTensorInfo(q),l.disposeIntermediateTensorInfo(O),l.disposeIntermediateTensorInfo(X),l.disposeIntermediateTensorInfo(K),l.disposeIntermediateTensorInfo(L),l.disposeIntermediateTensorInfo(U),l.disposeIntermediateTensorInfo(Q),l.disposeIntermediateTensorInfo($),l.disposeIntermediateTensorInfo(ee),l.disposeIntermediateTensorInfo(J),l.disposeIntermediateTensorInfo(te),l.disposeIntermediateTensorInfo(ne),l.disposeIntermediateTensorInfo(oe),{real:re,imag:ae}}},18892:function(e,t,n){n.d(t,{BF:function(){return k.BF},Dk:function(){return b.Dk},Dw:function(){return _.D},GE:function(){return I.G},GG:function(){return l.G},HS:function(){return S.HS},He:function(){return g.He},Nk:function(){return a.N},WR:function(){return p.WR},XI:function(){return a.X},YG:function(){return i.YG},Zy:function(){return v.Zy},_B:function(){return x._B},_X:function(){return D._},dH:function(){return o.dH},dl:function(){return H.dl},eW:function(){return W.e},hE:function(){return T.hE},hH:function(){return s.h},jC:function(){return h.j},l3:function(){return N.l},mx:function(){return r.mx},px:function(){return m.px},qy:function(){return y.q},rq:function(){return c.rq},sG:function(){return u.sG},uM:function(){return d.uM},vS:function(){return f.vS},wz:function(){return E.w},xT:function(){return A.x},yH:function(){return F.y}});var o=n(62680),r=n(95315),a=n(86995),i=n(14759),s=n(97763),u=n(66423),d=n(26789),f=n(85526),l=n(43842),c=n(14346),p=n(45207),I=n(64190),m=n(1802),h=n(3759),g=n(66114),T=n(48580),k=n(65646),b=n(37962),x=n(51675),y=n(52610),v=n(4092),S=n(87906),F=n(5744),N=n(95587),W=n(67686),H=n(18566),_=n(21671),A=n(53475),D=n(13396),E=n(2750)},21694:function(e,t,n){n.d(t,{F:function(){return i},v:function(){return a}});var o=n(9495),r=n(97870);function a(e,t,n){return({inputs:a,attrs:i,backend:s})=>{const{x:u}=a;if((0,r.C)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const d=s,f=d.data.get(u.dataId).values,l=o.util.sizeFromShape(u.shape),c=n||u.dtype,p=o.util.getArrayFromDType(c,l);for(let e=0;e<l;++e)p[e]=t(f[e],i);return d.makeTensorInfo(u.shape,c,p)}}function i(e,t,n){return({inputs:o,attrs:a,backend:i})=>{const{x:s}=o;if((0,r.C)(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,d=u.data.get(s.dataId).values,f=n||s.dtype,l=t(d,f,a);return u.makeTensorInfo(s.shape,f,l)}}},33113:function(e,t,n){n.d(t,{r:function(){return o}});const o="3.6.0"},45705:function(e,t,n){n.d(t,{o:function(){return r}});var o=n(9495);function r(e){return(t,n,r)=>{const a=o.util.getTypedArrayFromDType(n,t.length);for(let o=0;o<t.length;++o)a[o]=e(t[o],r);return a}}},98880:function(e,t,n){n.d(t,{B:function(){return u},j:function(){return s}});var o=n(9495),r=n(97870),a=n(13713),i=n(89436);function s(e,t,n,o){return null==n?({inputs:n,backend:a})=>{const{a:i,b:s}=n,u=a;(0,r.C)([i,s],e);const d=u.data.get(i.dataId).values,f=u.data.get(s.dataId).values,l=o||i.dtype,[c,p]=t(i.shape,s.shape,d,f,l);return u.makeTensorInfo(p,l,c)}:({inputs:e,backend:r})=>{const{a:s,b:u}=e,d=r;if("complex64"===s.dtype||"complex64"===u.dtype){const e=(0,a.w)({inputs:{x:s},backend:d,attrs:{dtype:"complex64"}}),t=d.data.get(e.dataId),o=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,f=d.data.get(o.dataId).values,l=d.data.get(r.dataId).values,c=(0,a.w)({inputs:{x:u},backend:d,attrs:{dtype:"complex64"}}),p=d.data.get(c.dataId),I=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,h=d.data.get(I.dataId).values,g=d.data.get(m.dataId).values,[T,k,b]=n(s.shape,u.shape,f,l,h,g),x=d.makeTensorInfo(b,"float32",T),y=d.makeTensorInfo(b,"float32",k),v=(0,i.f)({inputs:{real:x,imag:y},backend:d});return d.disposeIntermediateTensorInfo(e),d.disposeIntermediateTensorInfo(c),d.disposeIntermediateTensorInfo(x),d.disposeIntermediateTensorInfo(y),v}{const e=d.data.get(s.dataId).values,n=d.data.get(u.dataId).values,r=o||s.dtype,[a,i]=t(s.shape,u.shape,e,n,r);return d.makeTensorInfo(i,r,a)}}}function u(e){return(t,n,r,a,i,s)=>{const u=o.backend_util.assertAndGetBroadcastShape(t,n),d=o.util.sizeFromShape(u),f=u.length,l=o.util.computeStrides(u),c=o.util.getTypedArrayFromDType("float32",d),p=o.util.getTypedArrayFromDType("float32",d),I=o.backend_util.getBroadcastDims(t,u),m=o.backend_util.getBroadcastDims(n,u),h=o.backend_util.mergeRealAndImagArrays(r,a),g=o.backend_util.mergeRealAndImagArrays(i,s),T=t.length,k=o.util.computeStrides(t),b=n.length,x=o.util.computeStrides(n);if(I.length+m.length===0)for(let o=0;o<c.length;o++){const t=o%h.length,n=o%g.length,r=e(h[2*t],h[2*t+1],g[2*n],g[2*n+1]);c[o]=r.real,p[o]=r.imag}else for(let y=0;y<c.length;y++){const t=o.util.indexToLoc(y,f,l),n=t.slice(-T);I.forEach((e=>n[e]=0));const r=o.util.locToIndex(n,T,k),a=t.slice(-b);m.forEach((e=>a[e]=0));const i=o.util.locToIndex(a,b,x),s=e(h[2*r],h[2*r+1],g[2*i],g[2*i+1]);c[y]=s.real,p[y]=s.imag}return[c,p,u]}}}}]);
//# sourceMappingURL=stylist-vendors-26c5ada6.7321d61fb38473b4b0ae.js.map