"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[3083],{2249:function(e,n,t){t.d(n,{T:function(){return u}});var a=t(9495),r=t(26180),s=t(16853);const u={kernelName:a.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{images:o}=n,{alignCorners:i,halfPixelCenters:c,size:p}=u,[l,d]=p,b=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new s.x(o.shape,l,d,i,c):new r.z(o.shape,l,d,i,c);return t.runWebGLProgram(b,[o],"float32")}}},4313:function(e,n,t){t.d(n,{r:function(){return u},x:function(){return s}});var a=t(9495),r=t(77723);function s(e){const{inputs:n,backend:t}=e,{input:a}=n,s=t.texData.get(a.dataId);return(0,r.D)({inputs:{x:s.complexTensorInfos.real},backend:t})}const u={kernelName:a.Real,backendName:"webgl",kernelFunc:s}},4490:function(e,n,t){t.d(n,{G:function(){return s},M:function(){return r}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),s={kernelName:a.RealDiv,backendName:"webgl",kernelFunc:r}},5466:function(e,n,t){t.d(n,{c:function(){return i}});var a=t(9495),r=t(76905),s=t(11039),u=t(94043),o=t(29547);const i={kernelName:a.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:c}=n,{begin:p,end:l,strides:d,beginMask:b,endMask:k,ellipsisMask:f,newAxisMask:m,shrinkAxisMask:h}=i,{nonStrided:g,$begin:x,$strides:N,size:v,newShape:I,outShape:w}=a.slice_util.sliceInfo(c.shape,p,l,d,b,k,f,m,h),S=(0,u.t)({inputs:{x:c},backend:t,attrs:{shape:I}});let y;if(g){const e=(0,o.d)({inputs:{x:S},backend:t,attrs:{begin:x,size:v}});y=(0,u.t)({inputs:{x:e},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(e)}else if(w.some((e=>0===e)))y=t.makeTensorInfo(w,c.dtype,[]);else{if(t.shouldExecuteOnCPU([S])){const e=t.texData.get(S.dataId).values,n=(0,a.buffer)(S.shape,S.dtype,e),s=(0,r.cy)(w,n,N,x);y=t.makeTensorInfo(w,S.dtype,s.values)}else{const e=new s.U(x,N,w);y=t.runWebGLProgram(e,[S],S.dtype)}}const T=(0,u.t)({inputs:{x:y},backend:t,attrs:{shape:w}});return t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(y),T}}},5643:function(e,n,t){t.d(n,{F:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return sqrt(x);"}),s={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:r}},12030:function(e,n,t){t.d(n,{e:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return x * x;"}),s={kernelName:a.Square,backendName:"webgl",kernelFunc:r}},14421:function(e,n,t){t.d(n,{X:function(){return o}});var a=t(9495),r=t(15411);const s=t(68173).dR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",u=(0,r.vi)({opSnippet:s,packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),o={kernelName:a.Relu6,backendName:"webgl",kernelFunc:u}},14899:function(e,n,t){t.d(n,{CN:function(){return o},DH:function(){return u},HK:function(){return i}});var a=t(9495),r=t(22897),s=t(46334);const u="return (a < 0.) ? b * a : a;",o="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const i={kernelName:a.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{x:i,alpha:c}=n,p=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new s.VI(o,i.shape,c.shape):new r.x(u,i.shape,c.shape);return t.runWebGLProgram(p,[i,c],i.dtype)}}},22853:function(e,n,t){t.d(n,{c:function(){return o},q:function(){return i}});var a=t(9495),r=t(68754),s=t(94043),u=t(95203);function o(e){const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{axis:c,keepDims:p}=o;return function(e,n,t,o){const i=n,c=e.shape.length,p=a.util.parseAxisParam(i,e.shape);let l=p;const d=a.backend_util.getAxesPermutation(l,c),b=null!=d;let k=e;b&&(k=(0,u._)(e,d,o),l=a.backend_util.getInnerMostAxes(l.length,c)),a.backend_util.assertAxesAreInnerMostDims("sum",l,c);const[f,m]=a.backend_util.computeOutAndReduceShapes(k.shape,l);let h=f;t&&(h=a.backend_util.expandShapeToKeepDim(f,p));const g=a.util.sizeFromShape(m),x=a.util.sizeFromShape(e.shape)/g,N=(0,s.t)({inputs:{x:k},attrs:{shape:[x,g]},backend:o}),v=(0,a.sumOutType)(e.dtype),I=(0,r.T)(N,v,"sum",o),w=(0,s.t)({inputs:{x:I},attrs:{shape:h},backend:o});return o.disposeIntermediateTensorInfo(N),o.disposeIntermediateTensorInfo(I),b&&o.disposeIntermediateTensorInfo(k),w}(i,c,p,t)}const i={kernelName:a.Sum,backendName:"webgl",kernelFunc:o}},24129:function(e,n,t){t.d(n,{X:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),s={kernelName:a.Sigmoid,backendName:"webgl",kernelFunc:r}},24929:function(e,n,t){t.d(n,{f:function(){return s}});var a=t(9495),r=t(40784);const s={kernelName:a.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:n,backend:t})=>{const{image:s}=e,{radians:u,fillValue:o,center:i}=n,c=t,p=new r.e(s.shape,o),[l,d]=a.backend_util.getImageCenter(i,s.shape[1],s.shape[2]),b=p.getCustomSetupFunc(l,d,Math.sin(u),Math.cos(u));return c.runWebGLProgram(p,[s],s.dtype,b)}}},25103:function(e,n,t){t.d(n,{F:function(){return s}});var a=t(9495),r=t(76905);const s={kernelName:a.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{inputIndices:a,inputShape:s,newShape:u}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==u.shape.length)throw new Error(`Target shape should be a vector but received shape ${u.shape}`);const o=Array.from(t.readSync(s.dataId)),i=t.readSync(a.dataId),c=Array.from(t.readSync(u.dataId)),[p,l,d]=(0,r.vo)(i,a.shape,a.dtype,o,c);return[t.makeTensorInfo(l,a.dtype,p),t.makeTensorInfo([d.length],u.dtype,new Int32Array(d))]}}},29154:function(e,n,t){t.d(n,{a:function(){return u}});var a=t(9495),r=t(76905),s=t(88380);const u={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:n,attrs:t,backend:a}=e,{axis:u}=t,{x:o}=n;(0,s.CE)(o,"unique");const i=a.readSync(o.dataId),{outputValues:c,outputShape:p,indices:l}=(0,r.M_)(i,u,o.shape,o.dtype);return[a.makeTensorInfo(p,o.dtype,c),a.makeTensorInfo([l.length],"int32",l)]}}},29547:function(e,n,t){t.d(n,{d:function(){return o},l:function(){return i}});var a=t(9495),r=t(76905),s=t(10043),u=t(5144);function o(e){const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{begin:c,size:p}=o,[l,d]=a.slice_util.parseSliceParams(i,c,p);if(a.slice_util.assertParamsValid(i,l,d),0===a.util.sizeFromShape(d))return t.makeTensorInfo(d,i.dtype,[]);if(t.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=t.texData.get(i.dataId),n=(0,r.J3)(e.values,l,d,i.shape,i.dtype);return t.makeTensorInfo(d,i.dtype,n)}const{isPacked:b}=t.texData.get(i.dataId),k=a.slice_util.isSliceContinous(i.shape,l,d);if(b||!k){const e=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new u.V(d):new s.J(d),n=e.getCustomSetupFunc(l);return t.runWebGLProgram(e,[i],i.dtype,n)}return t.uploadToGPU(i.dataId),function(e,n,t,r){const s=r.texData.get(e.dataId),u=r.makeTensorInfo(t,e.dtype),o=r.texData.get(u.dataId);Object.assign(o,s),o.refCount=1,o.shape=t,o.dtype=e.dtype;let i=a.slice_util.computeFlatOffset(n,a.util.computeStrides(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const c=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,c+1),u}(i,l,d,t)}const i={kernelName:a.Slice,backendName:"webgl",kernelFunc:o}},30097:function(e,n,t){t.d(n,{P:function(){return i},Z:function(){return c}});var a=t(9495),r=t(8993),s=t(37664),u=t(39803),o=t(4313);function i(e){const{inputs:n,backend:t}=e,{x:a}=n;if("complex64"===a.dtype){const e=(0,o.x)({inputs:{input:a},backend:t}),n=i({inputs:{x:e},backend:t}),s=(0,u.n)({inputs:{input:a},backend:t}),c=i({inputs:{x:s},backend:t}),p=(0,r.f)({inputs:{real:n,imag:c},backend:t});return t.disposeIntermediateTensorInfo(e),t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(c),p}return(0,s.G)({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:t})}const c={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:i}},31137:function(e,n,t){t.d(n,{N:function(){return s}});var a=t(9495),r=t(23601);const s={kernelName:a.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{image:s,transforms:u}=n,{interpolation:o,fillMode:i,fillValue:c,outputShape:p}=a,[l,d,b,k]=s.shape,[f,m]=null!=p?p:[d,b],h=[l,f,m,k],g=new r.R(d,b,o,i,c,h);return t.runWebGLProgram(g,[s,u],"float32")}}},34733:function(e,n,t){t.d(n,{L:function(){return o}});var a=t(9495),r=t(15411),s=t(76905);const u=(0,r.vi)({opSnippet:"return inversesqrt(x);",cpuKernelImpl:s.tc}),o={kernelName:a.Rsqrt,backendName:"webgl",kernelFunc:u}},37647:function(e,n,t){t.d(n,{z:function(){return o}});var a=t(9495),r=t(15411);const s=t(68173).dR+"\n  return (x < 0.0) ? 0.0 : x;\n",u=(0,r.vi)({opSnippet:s,packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),o={kernelName:a.Relu,backendName:"webgl",kernelFunc:u}},38483:function(e,n,t){t.d(n,{Z:function(){return i},j:function(){return o}});var a=t(9495),r=t(15411),s=t(76905);const u="return a - b;",o=(0,r.j0)({opSnippet:u,packedOpSnippet:u,supportsComplex:!0,cpuKernelImpl:s.lL}),i={kernelName:a.Sub,backendName:"webgl",kernelFunc:o}},39264:function(e,n,t){t.d(n,{i:function(){return u},y:function(){return s}});var a=t(9495),r=t(76905);const s=e=>{const{backend:n,attrs:t}=e,{start:a,stop:s,step:u,dtype:o}=t,i=(0,r.we)(a,s,u,o);return n.makeTensorInfo([i.length],o,i)},u={kernelName:a.Range,backendName:"webgl",kernelFunc:s}},41719:function(e,n,t){t.d(n,{B:function(){return u}});var a=t(9495),r=t(94043),s=t(29547);const u={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{value:u}=n;let{axis:o}=a;o<0&&(o+=u.shape.length);const i=u,c=i.shape.length,p=u.shape[o],l=new Array(c-1);let d=0;for(let r=0;r<c;r++)r!==o&&(l[d++]=i.shape[r]);const b=[],k=new Array(c).fill(0),f=i.shape.slice();f[o]=1;const m=new Array(p);for(let h=0;h<m.length;h++){k[o]=h;const e=(0,s.d)({inputs:{x:i},backend:t,attrs:{begin:k,size:f}}),n=(0,r.t)({inputs:{x:e},backend:t,attrs:{shape:l}});m[h]=n,b.push(e)}return b.forEach((e=>t.disposeIntermediateTensorInfo(e))),m}}},43137:function(e,n,t){t.d(n,{j:function(){return u}});var a=t(9495),r=t(6917),s=t(59250);const u={kernelName:a.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{images:o}=n,{alignCorners:i,halfPixelCenters:c,size:p}=u,[l,d]=p,b=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new s.z(o.shape,l,d,i,c):new r.$(o.shape,l,d,i,c);return t.runWebGLProgram(b,[o],o.dtype)}}},43168:function(e,n,t){t.d(n,{C:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),s={kernelName:a.Sign,backendName:"webgl",kernelFunc:r}},43178:function(e,n,t){t.d(n,{W:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return tan(x);"}),s={kernelName:a.Tan,backendName:"webgl",kernelFunc:r}},47149:function(e,n,t){t.d(n,{l:function(){return s}});var a=t(9495),r=t(64374);const s={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{a:s,b:u,bias:o,preluActivationWeights:i}=n,{transposeA:c,transposeB:p,activation:l,leakyreluAlpha:d}=a;return(0,r.L)({a:s,b:u,transposeA:c,transposeB:p,backend:t,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}}},48223:function(e,n,t){t.d(n,{j:function(){return i}});var a=t(9495),r=t(46334),s=t(15411);const u="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+r.dR+"\n  return result;\n",o=(0,s.j0)({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:u}),i={kernelName:a.Pow,backendName:"webgl",kernelFunc:o}},49442:function(e,n,t){t.d(n,{K:function(){return s}});var a=t(9495),r=t(76905);const s={kernelName:a.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{indices:a,values:s,denseShape:u,defaultValue:o}=n;if(1!==u.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${u.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=t.readSync(a.dataId),c=t.readSync(s.dataId),p=t.readSync(u.dataId),l=t.readSync(o.dataId)[0],[d,b,k,f,m]=(0,r.sB)(i,a.shape,a.dtype,c,s.dtype,p,l);return[t.makeTensorInfo(b,a.dtype,d),t.makeTensorInfo([b[0]],s.dtype,k),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),t.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}}},49627:function(e,n,t){t.d(n,{$:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),s={kernelName:a.Sinh,backendName:"webgl",kernelFunc:r}},49649:function(e,n,t){t.d(n,{l:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return 1.0 / x;"}),s={kernelName:a.Reciprocal,backendName:"webgl",kernelFunc:r}},50307:function(e,n,t){t.d(n,{b:function(){return c}});var a=t(9495),r=t(50476),s=t(39264),u=t(94043),o=t(74021),i=t(58246);const c={kernelName:a.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:c}=e,{x:p,segmentIds:l}=n,{numSegments:d}=c,b=p.shape.length,k=[];let f=0;const m=a.backend_util.getAxesPermutation([f],b);let h=p;null!=m&&(h=(0,i.m)({inputs:{x:p},backend:t,attrs:{perm:m}}),k.push(h),f=a.backend_util.getInnerMostAxes(1,b)[0]);const g=a.backend_util.segment_util.computeOutShape(h.shape,f,d),x=a.util.sizeFromShape([h.shape[f]]),N=(0,u.t)({inputs:{x:h},backend:t,attrs:{shape:[-1,x]}});k.push(N);const v=(0,a.sumOutType)(p.dtype),I=(e,n,u,i,c)=>{const p=e.shape[0],l=e.shape[1],d=a.backend_util.segment_util.segOpComputeOptimalWindowSize(l,c),b={windowSize:d,inSize:l,batchSize:p,numSegments:c},f=new r.v(b,n),m=t.compileAndRun(f,[e,u],i);if(k.push(m),m.shape[1]===c)return m;const h=(0,s.y)({backend:t,attrs:{start:0,stop:c,step:1,dtype:"float32"}}),g=(0,o.V)({inputs:{x:h},backend:t,attrs:{reps:[l/d]}});k.push(h),k.push(g);return I(m,n,g,i,c)},w=I(N,"unsortedSegmentSum",l,v,d),S=(0,u.t)({inputs:{x:w},backend:t,attrs:{shape:g}});let y=S;if(null!=m){k.push(S);const e=a.backend_util.getUndoAxesPermutation(m);y=(0,i.m)({inputs:{x:y},backend:t,attrs:{perm:e}})}return k.forEach((e=>t.disposeIntermediateTensorInfo(e))),y}}},50894:function(e,n,t){t.d(n,{W:function(){return o}});var a=t(9495),r=t(92616),s=t(94043),u=t(58246);const o={kernelName:a.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{blockShape:c,paddings:p}=o;a.util.assert(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=c.reduce(((e,n)=>e*n)),d=[[0,0]];d.push(...p);for(let a=1+c.length;a<i.shape.length;++a)d.push([0,0]);const b=[],k=(0,r.w)({inputs:{x:i},backend:t,attrs:{paddings:d,constantValue:0}}),f=a.backend_util.getReshaped(k.shape,c,l,!1),m=a.backend_util.getPermuted(f.length,c.length,!1),h=a.backend_util.getReshapedPermuted(k.shape,c,l,!1),g=(0,s.t)({inputs:{x:k},backend:t,attrs:{shape:f}}),x=(0,u.m)({inputs:{x:g},backend:t,attrs:{perm:m}}),N=(0,s.t)({inputs:{x:x},backend:t,attrs:{shape:h}});return b.push(k),b.push(g),b.push(x),b.forEach((e=>t.disposeIntermediateTensorInfo(e))),N}}},51361:function(e,n,t){t.d(n,{z:function(){return s}});var a=t(9495),r=t(81847);const s={kernelName:a.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{condition:s,t:u,e:o}=n,i=new r.T(s.shape.length,u.shape,u.shape.length);return t.runWebGLProgram(i,[s,u,o],(0,a.upcastType)(u.dtype,o.dtype))}}},55571:function(e,n,t){t.d(n,{b:function(){return u}});var a=t(9495);const r="return (a - b) * (a - b);",s=(0,t(15411).j0)({opSnippet:r,packedOpSnippet:r}),u={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:s}},57518:function(e,n,t){t.d(n,{H:function(){return u}});var a=t(9495),r=t(8939),s=t(94043);const u={kernelName:a.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{indices:o,updates:i}=n,{shape:c}=u,{sliceRank:p,numUpdates:l,sliceSize:d,strides:b,outputSize:k}=a.backend_util.calculateShapes(i,o,c),f=[k/d,d];if(0===k)return t.makeTensorInfo(c,o.dtype);const m=(0,s.t)({inputs:{x:o},backend:t,attrs:{shape:[l,p]}}),h=(0,s.t)({inputs:{x:i},backend:t,attrs:{shape:[l,d]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0])),x=new r.$(l,p,m.shape.length,h.shape.length,b,f),N=t.runWebGLProgram(x,[h,m,g],h.dtype),v=(0,s.t)({inputs:{x:N},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(g),v}}},58246:function(e,n,t){t.d(n,{W:function(){return o},m:function(){return u}});var a=t(9495),r=t(95203),s=t(76905);function u(e){const{inputs:n,backend:t,attrs:a}=e,{x:u}=n,{perm:o}=a,i=t,c=u.shape.length,p=new Array(c);for(let r=0;r<p.length;r++)p[r]=u.shape[o[r]];let l;if(i.shouldExecuteOnCPU([u])){const e=i.texData.get(u.dataId).values,n=(0,s.Q5)(e,u.shape,u.dtype,o,p);l=i.makeTensorInfo(p,u.dtype);i.texData.get(l.dataId).values=n}else l=(0,r._)(u,o,i);return l}const o={kernelName:a.Transpose,backendName:"webgl",kernelFunc:u}},60739:function(e,n,t){t.d(n,{b:function(){return o}});var a=t(9495),r=t(15411);const s=r.Zt+"\n  return sin(x);\n",u=(0,r.vi)({opSnippet:s}),o={kernelName:a.Sin,backendName:"webgl",kernelFunc:u}},62667:function(e,n,t){t.d(n,{$:function(){return l},V:function(){return p}});var a=t(9495),r=t(29450),s=t(99160),u=t(4490),o=t(94043),i=t(38483),c=t(22853);function p(e){const{inputs:n,backend:t,attrs:p}=e,{logits:l}=n,{dim:d}=p,b=a.util.parseAxisParam([d],l.shape),k=(0,s.T)({inputs:{x:l},backend:t,attrs:{reductionIndices:b,keepDims:!1}}),f=a.backend_util.expandShapeToKeepDim(k.shape,b),m=(0,o.t)({inputs:{x:k},backend:t,attrs:{shape:f}}),h=(0,i.j)({inputs:{a:l,b:m},backend:t}),g=(0,r.oN)({inputs:{x:h},backend:t}),x=(0,c.c)({inputs:{x:g},backend:t,attrs:{axis:b,keepDims:!1}}),N=(0,o.t)({inputs:{x:x},backend:t,attrs:{shape:f}}),v=(0,u.M)({inputs:{a:g,b:N},backend:t});return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(N),v}const l={kernelName:a.Softmax,backendName:"webgl",kernelFunc:p}},63575:function(e,n,t){t.d(n,{t:function(){return s}});var a=t(9495),r=t(29547);const s={kernelName:a.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:u}=n,{numOrSizeSplits:o,axis:i}=s,c=a.util.parseAxisParam(i,u.shape)[0],p=a.backend_util.prepareSplitSize(u,o,c),l=u.shape.length,d=new Array(l).fill(0),b=u.shape.slice();return p.map((e=>{const n=[...b];n[c]=e;const a=(0,r.d)({inputs:{x:u},backend:t,attrs:{begin:d,size:n}});return d[c]+=e,a}))}}},64770:function(e,n,t){t.d(n,{k:function(){return o}});var a=t(9495),r=t(15411);const s=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.backend_util.SELU_SCALEALPHA};\n  float scale = ${a.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,u=(0,r.vi)({opSnippet:s}),o={kernelName:a.Selu,backendName:"webgl",kernelFunc:u}},68065:function(e,n,t){t.d(n,{Z:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),s={kernelName:a.Softplus,backendName:"webgl",kernelFunc:r}},68889:function(e,n,t){t.d(n,{j:function(){return s}});var a=t(9495),r=t(47791);const s={kernelName:a.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{images:s,dy:u}=n,{alignCorners:o}=a,i=new r.h(u.shape,s.shape,o);return t.runWebGLProgram(i,[u],u.dtype)}}},72641:function(e,n,t){t.d(n,{p:function(){return s}});var a=t(9495),r=t(76905);const s={kernelName:a.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:s}=n,{k:u,sorted:o}=a,i=t.readSync(s.dataId),[c,p]=(0,r.xt)(i,s.shape,s.dtype,u,o);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(p.shape,p.dtype,p.values)]}}},74021:function(e,n,t){t.d(n,{V:function(){return u},n:function(){return o}});var a=t(9495),r=t(76905),s=t(20771);function u(e){const{inputs:n,backend:t,attrs:u}=e,{x:o}=n,{reps:i}=u;if("string"===o.dtype||o.shape.length>5){const e=t.readSync(o.dataId),n="string"===o.dtype?e.map((e=>a.util.decodeString(e))):e,s=(0,a.buffer)(o.shape,o.dtype,n),u=(0,r.$O)(s,i);return t.makeTensorInfo(u.shape,u.dtype,u.values)}const c=new s.$(o.shape,i);return t.runWebGLProgram(c,[o],o.dtype)}const o={kernelName:a.Tile,backendName:"webgl",kernelFunc:u}},74952:function(e,n,t){t.d(n,{S:function(){return i}});var a=t(9495),r=t(68754),s=t(76905),u=t(94043),o=t(58246);const i={kernelName:a.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:c}=n,{axis:p,keepDims:l}=i,d=c.shape.length,b=[],k=a.util.parseAxisParam(p,c.shape);let f=k;const m=a.backend_util.getAxesPermutation(f,d);let h,g=c;if(null!=m&&(g=(0,o.m)({inputs:{x:c},backend:t,attrs:{perm:m}}),f=a.backend_util.getInnerMostAxes(f.length,d),b.push(g)),a.backend_util.assertAxesAreInnerMostDims("prod",f,d),t.shouldExecuteOnCPU([g])){const e=t.texData.get(g.dataId).values,{outVals:n,outShape:a,outDtype:r}=(0,s.Og)(g.shape,g.dtype,e,f);h=t.makeTensorInfo(a,r,n)}else{const[e,n]=a.backend_util.computeOutAndReduceShapes(g.shape,f),s=a.util.sizeFromShape(n),o=(0,u.t)({inputs:{x:g},backend:t,attrs:{shape:[-1,s]}}),i=(0,a.sumOutType)(c.dtype),p=(0,r.T)(o,i,"prod",t);h=(0,u.t)({inputs:{x:p},backend:t,attrs:{shape:e}}),b.push(o),b.push(p)}if(l){b.push(h);const e=a.backend_util.expandShapeToKeepDim(h.shape,k);h=(0,u.t)({inputs:{x:h},backend:t,attrs:{shape:e}})}return b.forEach((e=>t.disposeIntermediateTensorInfo(e))),h}}},80809:function(e,n,t){t.d(n,{x:function(){return u}});var a=t(9495),r=t(8939),s=t(94043);const u={kernelName:a.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{sparseIndices:o,sparseValues:i,defaultValue:c}=n,{outputShape:p}=u,{sliceRank:l,numUpdates:d,strides:b,outputSize:k}=a.backend_util.calculateShapes(i,o,p),f=new r.$(d,l,o.shape.length,i.shape.length,b,[k,1],!1),m=t.runWebGLProgram(f,[i,o,c],i.dtype),h=(0,s.t)({inputs:{x:m},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(m),h}}},84745:function(e,n,t){t.d(n,{$:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),s={kernelName:a.Round,backendName:"webgl",kernelFunc:r}},85048:function(e,n,t){t.d(n,{i:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),s={kernelName:a.Tanh,backendName:"webgl",kernelFunc:r}},86567:function(e,n,t){t.d(n,{r:function(){return o}});var a=t(9495),r=t(71967),s=t(68636),u=t(77723);const o={kernelName:a.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{dims:c}=o,p=i.shape.length,l=a.util.parseAxisParam(c,i.shape);if(0===p)return(0,u.D)({inputs:{x:i},backend:t});const d=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s.X(i.shape,l):new r.N(i.shape,l);return t.runWebGLProgram(d,[i],i.dtype)}}},94043:function(e,n,t){t.d(n,{V:function(){return o},t:function(){return u}});var a=t(9495),r=t(99992),s=t(88380);function u(e){const{inputs:n,backend:t,attrs:u}=e,{x:o}=n,{shape:i}=u,c=t,p=a.util.sizeFromShape(o.shape),l=a.util.inferFromImplicitShape(i,p),d=a.util.sizeFromShape(l);a.util.assert(p===d,(()=>`The new shape (${l}) has ${d} elements and the old shape (${o.shape}) has ${p} elements. The new shape and old shape must have the same number of elements.`));const b=c.texData.get(o.dataId);return!b.isPacked||(0,s.P0)(o.shape,l)||null!==b.texture&&(0,s.P0)(b.shape,l)?(c.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype}):(0,r.p)(o,l,c)}const o={kernelName:a.Reshape,backendName:"webgl",kernelFunc:u}},95203:function(e,n,t){t.d(n,{_:function(){return u}});var a=t(9495),r=t(81322),s=t(55315);function u(e,n,t){const u=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s.Y(e.shape,n):new r.u(e.shape,n);return t.runWebGLProgram(u,[e],e.dtype)}},96017:function(e,n,t){t.d(n,{n:function(){return s}});var a=t(9495),r=t(27436);const s={kernelName:a.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{images:s,dy:u}=n,{alignCorners:o}=a,i=new r.x(u.shape,s.shape,o);return t.runWebGLProgram(i,[u],u.dtype)}}},97667:function(e,n,t){t.d(n,{t:function(){return s}});var a=t(9495),r=t(68173);const s={kernelName:a.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:n,backend:t}){const{x:a}=e,s=r.dR+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,u=new r.hE(a.shape,s);return t.runWebGLProgram(u,[a],a.dtype)}}}}]);
//# sourceMappingURL=stylist-vendors-0b561521.742ef679e40615dc3ce0.js.map