"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[4217],{379:function(e,n,t){t.d(n,{V:function(){return s}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),s={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:r}},3872:function(e,n,t){t.d(n,{I:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return float(isnan(x));",dtype:"bool"}),s={kernelName:a.IsNan,backendName:"webgl",kernelFunc:r}},4094:function(e,n,t){t.d(n,{Q:function(){return s}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),s={kernelName:a.LessEqual,backendName:"webgl",kernelFunc:r}},4873:function(e,n,t){t.d(n,{f:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return float(!(x >= 1.0));"}),s={kernelName:a.LogicalNot,backendName:"webgl",kernelFunc:r}},5171:function(e,n,t){t.d(n,{$:function(){return i}});var a=t(9495),r=t(40025),s=t(77723),o=t(58246);const i={kernelName:a.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u}=n,{axis:c,exclusive:p,reverse:l}=i,d=u.shape.length,h=a.backend_util.getAxesPermutation([c],d);let m=u;null!=h&&(m=(0,o.m)({inputs:{x:u},backend:t,attrs:{perm:h}}));const f=a.backend_util.getInnerMostAxes(1,d)[0];if(f!==d-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const b=m.shape[f];let k=(0,s.D)({inputs:{x:m},backend:t});for(let a=0;a<=Math.ceil(Math.log2(b))-1;a++){const e=new r.H(m.shape,!1,l),n=e.getCustomSetupFunc(a),s=k;k=t.runWebGLProgram(e,[k],k.dtype,n),t.disposeIntermediateTensorInfo(s)}if(p){const e=new r.H(m.shape,p,l),n=k;k=t.runWebGLProgram(e,[k],k.dtype),t.disposeIntermediateTensorInfo(n)}if(null!=h){const e=a.backend_util.getUndoAxesPermutation(h),n=(0,o.m)({inputs:{x:k},backend:t,attrs:{perm:e}});return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(m),n}return k}}},6489:function(e,n,t){t.d(n,{x:function(){return o}});var a=t(9495),r=t(66501),s=t(19314);const o={kernelName:a.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{depthRadius:u,bias:c,alpha:p,beta:l}=o,d=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new s.f(i.shape,u,c,p,l):new r.F(i.shape,u,c,p,l);return t.runWebGLProgram(d,[i],i.dtype)}}},7530:function(e,n,t){t.d(n,{O:function(){return o}});var a=t(9495),r=t(32068),s=t(94043);const o={kernelName:a.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{x:o}=n,i=[...o.shape,...o.shape],u=a.util.sizeFromShape(o.shape),c=(0,s.t)({inputs:{x:o},backend:t,attrs:{shape:[u]}}),p=new r.e(u),l=t.runWebGLProgram(p,[c],c.dtype),d=(0,s.t)({inputs:{x:l},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),d}}},7664:function(e,n,t){t.d(n,{i:function(){return s}});var a=t(9495),r=t(81223);const s={kernelName:a.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o,dy:i}=n,{strides:u,pad:c,filterShape:p}=s,l=a.backend_util.computeConv3DInfo(o.shape,p,u,1,c),d=new r.N7(l);return t.runWebGLProgram(d,[o,i],"float32")}}},8537:function(e,n,t){t.d(n,{X:function(){return s}});var a=t(9495),r=t(64374);const s={kernelName:a.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{a:s,b:o}=n,{transposeA:i,transposeB:u}=a;return(0,r.L)({a:s,b:o,transposeA:i,transposeB:u,backend:t})}}},8993:function(e,n,t){t.d(n,{f:function(){return s},v:function(){return o}});var a=t(9495),r=t(77723);function s(e){const{inputs:n,backend:t}=e,{real:a,imag:s}=n,o=t.makeTensorInfo(a.shape,"complex64"),i=t.texData.get(o.dataId),u=(0,r.D)({inputs:{x:a},backend:t}),c=(0,r.D)({inputs:{x:s},backend:t});return i.complexTensorInfos={real:u,imag:c},o}const o={kernelName:a.Complex,backendName:"webgl",kernelFunc:s}},10695:function(e,n,t){t.d(n,{r:function(){return s}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),s={kernelName:a.LogicalOr,backendName:"webgl",kernelFunc:r}},12462:function(e,n,t){t.d(n,{W:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return log(1.0 + x);"}),s={kernelName:a.Log1p,backendName:"webgl",kernelFunc:r}},14669:function(e,n,t){t.d(n,{F:function(){return s}});var a=t(9495);const r=a.kernel_impls.nonMaxSuppressionV4Impl;const s={kernelName:a.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:t,attrs:s}=e,{boxes:o,scores:i}=n,{maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:l}=s,d=t.readSync(o.dataId),h=t.readSync(i.dataId),{selectedIndices:m,validOutputs:f}=r(d,h,u,c,p,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}}},14947:function(e,n,t){t.d(n,{v:function(){return o}});var a=t(9495),r=t(4999),s=t(10424);const o={kernelName:a.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:i,filter:u}=n,{strides:c,pad:p,dilations:l,dimRoundingMode:d}=o;let h=l;null==h&&(h=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(c,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${h}'`));const m=a.backend_util.computeConv2DInfo(i.shape,u.shape,c,h,p,d,!0);let f;return f=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?new s.K(m):new r.E(m),t.runWebGLProgram(f,[i,u],"float32")}}},14992:function(e,n,t){t.d(n,{i:function(){return s}});var a=t(9495),r=t(21005);const s={kernelName:a.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o,filter:i}=n,{strides:u,pad:c,dilations:p}=s,l=a.backend_util.computeConv3DInfo(o.shape,i.shape,u,p,c),d=new r.w(l);return t.runWebGLProgram(d,[o,i],"float32")}}},15328:function(e,n,t){t.d(n,{U:function(){return s}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),s={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:r}},15354:function(e,n,t){t.d(n,{o:function(){return i}});var a=t(9495),r=t(15411);const s=r.Zt+"\n  return cos(x);\n",o=(0,r.vi)({opSnippet:s}),i={kernelName:a.Cos,backendName:"webgl",kernelFunc:o}},16386:function(e,n,t){t.d(n,{y:function(){return u}});var a=t(9495),r=t(28560),s=t(18765);class o{constructor(e){this.variableNames=["A"];const n=(0,s.B)(),[t,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${t}.0);\n\n        vec4 values = ${n.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class i{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=(0,s.B)(),[t,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${t}.0);\n            vec4 values = ${n.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${n.output} = result;\n      }\n    `}}const u={kernelName:a.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e;let{pixels:u}=n;const{numChannels:p}=s,l="undefined"!==typeof HTMLVideoElement&&u instanceof HTMLVideoElement,d="undefined"!==typeof HTMLImageElement&&u instanceof HTMLImageElement,[h,m]=l?[u.videoWidth,u.videoHeight]:[u.width,u.height],f=[m,h],b=[m,h,p];(d||l)&&(null==c&&(c=document.createElement("canvas").getContext("2d")),c.canvas.width=h,c.canvas.height=m,c.drawImage(u,0,0,h,m),u=c.canvas);const k=t.makeTensorInfo(f,"int32");t.texData.get(k.dataId).usage=r.tT.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(k.dataId),u);const g=(0,a.env)().getBool("WEBGL_PACK")?new i(b):new o(b),x=t.runWebGLProgram(g,[k],"int32");return t.disposeData(k.dataId),x}};let c},16998:function(e,n,t){t.d(n,{O:function(){return s}});var a=t(9495),r=t(59396);const s={kernelName:a.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:a}=e,{image:s,boxes:o,boxInd:i}=n,{cropSize:u,method:c,extrapolationValue:p}=a,l=new r.c(s.shape,o.shape,u,c,p);return t.runWebGLProgram(l,[s,o,i],"float32")}}},17249:function(e,n,t){t.d(n,{P:function(){return i}});var a=t(9495),r=t(81017),s=t(80297),o=t(88380);const i={kernelName:a.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{dy:u,input:c,output:p}=n,l=c;(0,o.CE)([c,p],"maxPoolGrad");const{filterSize:d,strides:h,pad:m,dimRoundingMode:f}=i,b=a.backend_util.computePool2DInfo(l.shape,d,h,1,m,f),k=new s.h(b,"max",!0),g=t.runWebGLProgram(k,[l],l.dtype),x=new r.d(b),v=t.runWebGLProgram(x,[u,g],l.dtype);return t.disposeIntermediateTensorInfo(g),v}}},18801:function(e,n,t){t.d(n,{$:function(){return i}});var a=t(9495),r=t(80297),s=t(88380),o=t(77723);const i={kernelName:a.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u}=n;(0,s.CE)(u,"maxPool");const{filterSize:c,strides:p,pad:l,dimRoundingMode:d}=i;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(p,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${p} and dilations '1'`));const h=a.backend_util.computePool2DInfo(u.shape,c,p,1,l,d);if(1===h.filterWidth&&1===h.filterHeight&&a.util.arraysEqual(h.inShape,h.outShape))return(0,o.D)({inputs:{x:u},backend:t});const m=new r.h(h,"max",!1);return t.runWebGLProgram(m,[u],u.dtype)}}},19013:function(e,n,t){t.d(n,{X:function(){return u}});var a=t(9495),r=t(46334),s=t(15411);const o="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+r.dR+"\n  return result;\n",i=(0,s.j0)({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:o}),u={kernelName:a.Mod,backendName:"webgl",kernelFunc:i}},22970:function(e,n,t){t.d(n,{o:function(){return s}});var a=t(9495),r=t(76905);const s={kernelName:a.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:n,attrs:t}=e,{start:a,stop:s,num:o}=t,i=(0,r.AC)(a,s,o);return n.makeTensorInfo([i.length],"float32",i)}}},23007:function(e,n,t){t.d(n,{l:function(){return l}});var a=t(9495),r=t(22897),s=t(46334),o=t(15411),i=t(76905);const u=r.dR+"\n  return max(a, b);\n",c="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+s.dR+"\n  return result;\n",p=(0,o.j0)({opSnippet:u,packedOpSnippet:c,cpuKernelImpl:i.Dy}),l={kernelName:a.Maximum,backendName:"webgl",kernelFunc:p}},23706:function(e,n,t){t.d(n,{a:function(){return i}});var a=t(9495),r=t(60432),s=t(76905),o=t(94043);const i={kernelName:a.GatherV2,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u,indices:c}=n,{axis:p,batchDims:l}=i,d=a.util.parseAxisParam(p,u.shape)[0],h=a.backend_util.segment_util.collectGatherOpShapeInfo(u,c,d,l),m=a.util.sizeFromShape(c.shape),f=[],b=(0,o.t)({inputs:{x:u},backend:t,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),k=(0,o.t)({inputs:{x:c},backend:t,attrs:{shape:[h.batchSize,m/h.batchSize]}});f.push(b),f.push(k);const g=[h.batchSize,h.outerSize,m/h.batchSize,h.sliceSize];if(t.shouldExecuteOnCPU([u,c])||"string"===u.dtype){const e=t.bufferSync(k),n=t.bufferSync(b),a=(0,s.QM)(n,e,g);return f.forEach((e=>t.disposeIntermediateTensorInfo(e))),t.makeTensorInfo(h.outputShape,a.dtype,a.values)}const x=new r.u(b.shape,g),v=t.runWebGLProgram(x,[b,k],b.dtype);f.push(v);const I=(0,o.t)({inputs:{x:v},backend:t,attrs:{shape:h.outputShape}});return f.forEach((e=>t.disposeIntermediateTensorInfo(e))),I}}},25621:function(e,n,t){t.d(n,{N:function(){return l}});var a=t(9495),r=t(22897),s=t(46334),o=t(15411),i=t(76905);const u=r.dR+"\n  return min(a, b);\n",c="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+s.dR+"\n  return result;\n",p=(0,o.j0)({opSnippet:u,packedOpSnippet:c,cpuKernelImpl:i.h}),l={kernelName:a.Minimum,backendName:"webgl",kernelFunc:p}},26041:function(e,n,t){t.d(n,{l:function(){return p},t:function(){return l}});var a=t(9495),r=t(65274),s=t(22897),o=t(46334),i=t(76905),u=t(8993);const c="return a * b;";function p(e){const{inputs:n,backend:t}=e,{a:p,b:l}=n,d=a.backend_util.upcastType(p.dtype,l.dtype);if("complex64"===p.dtype){const e=t.texData.get(p.dataId),n=t.texData.get(l.dataId),a=new r.f(r.C.REAL,p.shape,l.shape),s=new r.f(r.C.IMAG,p.shape,l.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:p.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:p.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l.shape}],i=t.runWebGLProgram(a,o,"float32"),c=t.runWebGLProgram(s,o,"float32"),d=(0,u.f)({inputs:{real:i,imag:c},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),d}if(t.shouldExecuteOnCPU([p,l])){const e=t.texData.get(p.dataId),n=t.texData.get(l.dataId),[a,r]=(0,i.Xe)(p.shape,l.shape,e.values,n.values,d),s=t.makeTensorInfo(r,d);return t.texData.get(s.dataId).values=a,s}let h;return h=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new o.VI(c,p.shape,l.shape):new s.x(c,p.shape,l.shape),t.runWebGLProgram(h,[p,l],d)}const l={kernelName:a.Multiply,backendName:"webgl",kernelFunc:p}},26132:function(e,n,t){t.d(n,{Y:function(){return i}});var a=t(9495),r=t(15411),s=t(76905);const o=(0,r.j0)({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:s.uw,dtype:"bool"}),i={kernelName:a.Less,backendName:"webgl",kernelFunc:o}},27260:function(e,n,t){t.d(n,{f:function(){return s}});var a=t(9495),r=t(81223);const s={kernelName:a.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{dy:o,filter:i}=n,{inputShape:u,strides:c,pad:p,dataFormat:l,dimRoundingMode:d}=s,h=a.backend_util.convertConv2DDataFormat(l),m=a.backend_util.computeConv2DInfo(u,i.shape,c,1,p,d,!1,h),f=new r.eS(m);return t.runWebGLProgram(f,[o,i],"float32")}}},29450:function(e,n,t){t.d(n,{AC:function(){return u},oN:function(){return i}});var a=t(9495),r=t(15411),s=t(76905);const o="return exp(x);",i=(0,r.vi)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:s.E$}),u={kernelName:a.Exp,backendName:"webgl",kernelFunc:i}},31345:function(e,n,t){t.d(n,{F:function(){return o}});var a=t(9495),r=t(79229),s=t(94043);const o={kernelName:a.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:i,filter:u}=n,{strides:c,pad:p,dilations:l}=o,d=a.backend_util.computeDilation2DInfo(i.shape,u.shape,c,p,"NHWC",l);let h;const m=new r.x(d);h=t.runWebGLProgram(m,[i,u],"float32");const f=(0,s.t)({inputs:{x:h},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(h),f}}},35960:function(e,n,t){t.d(n,{u:function(){return u}});var a=t(9495),r=t(15411),s=t(76905);const o="return ceil(x);",i=(0,r.vi)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:s.Md}),u={kernelName:a.Ceil,backendName:"webgl",kernelFunc:i}},36446:function(e,n,t){t.d(n,{M:function(){return c}});var a=t(9495),r=t(8993),s=t(77723),o=t(98890),i=t(4313),u=t(7199);const c={kernelName:a.Cast,backendName:"webgl",kernelFunc:function e(n){const{inputs:t,backend:c,attrs:p}=n,{x:l}=t,{dtype:d}=p;if("complex64"===d){if("complex64"===l.dtype)return(0,s.D)({inputs:{x:l},backend:c});const n=a.zeros(l.shape),t=e({inputs:{x:l},backend:c,attrs:{dtype:"float32"}}),o=(0,r.f)({inputs:{real:t,imag:n},backend:c});return n.dispose(),c.disposeIntermediateTensorInfo(t),o}if("complex64"===l.dtype){const n=(0,i.x)({inputs:{input:l},backend:c}),t=e({inputs:{x:n},backend:c,attrs:{dtype:d}});return c.disposeIntermediateTensorInfo(n),t}if(!a.util.hasEncodingLoss(l.dtype,d)){const e=(0,s.D)({inputs:{x:l},backend:c});return{dataId:e.dataId,shape:e.shape,dtype:d}}if("int32"===d)return(0,u.W)(l,c);if("bool"===d){const e=c.makeTensorInfo([],"bool",a.util.getTypedArrayFromDType("bool",1)),n={a:l,b:e},t=(0,o.E)({inputs:n,backend:c});return c.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${l.dtype} to ${d}`)}}},37053:function(e,n,t){t.d(n,{t:function(){return o}});var a=t(9495),r=t(67282);function s(e,n){return{dataId:n.dataId,dtype:n.dtype,shape:e.shape}}const o={kernelName:a.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{x:a}=n,o=t.texData.get(a.dataId),i=new r.t(a.shape),u=[s(a,o.complexTensorInfos.real),s(a,o.complexTensorInfos.imag)];return t.runWebGLProgram(i,u,u[0].dtype)}}},37664:function(e,n,t){t.d(n,{G:function(){return s},u:function(){return o}});var a=t(9495),r=t(27906);function s(e){const{backend:n,attrs:t}=e,{shape:s,value:o}=t;let{dtype:i}=t;if(i=i||a.util.inferDtype(o),"string"===i){const e=a.util.getArrayFromDType(i,a.util.sizeFromShape(s));return e.fill(o),n.makeTensorInfo(s,i,e)}{const e=new r.w(s,o),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[],i,t)}}const o={kernelName:a.Fill,backendName:"webgl",kernelFunc:s}},38717:function(e,n,t){t.d(n,{l:function(){return s}});var a=t(9495),r=t(80297);const s={kernelName:a.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:n,backend:t})=>{const{x:s}=e,{filterSize:o,strides:i,pad:u,includeBatchInIndex:c}=n,p=t;a.util.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const l=[1,1];a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const d=a.backend_util.computePool2DInfo(s.shape,o,i,l,u),[h,m]=function(e,n,t,a){let s=new r.h(t,"max",!1);const o=a.runWebGLProgram(s,[e],"float32");return s=new r.h(t,"max",!0,!0,n),[o,a.runWebGLProgram(s,[e],"float32")]}(s,c,d,p);return[h,m]}}},39803:function(e,n,t){t.d(n,{l:function(){return o},n:function(){return s}});var a=t(9495),r=t(77723);function s(e){const{inputs:n,backend:t}=e,{input:a}=n,s=t.texData.get(a.dataId);return(0,r.D)({inputs:{x:s.complexTensorInfos.imag},backend:t})}const o={kernelName:a.Imag,backendName:"webgl",kernelFunc:s}},39882:function(e,n,t){t.d(n,{q:function(){return u}});var a=t(9495),r=t(21005),s=t(15411),o=t(53002),i=t(94043);const u={kernelName:a.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{x:c,filter:p,bias:l,preluActivationWeights:d}=n,{strides:h,pad:m,dataFormat:f,dilations:b,dimRoundingMode:k,activation:g,leakyreluAlpha:x}=u,v=a.backend_util.convertConv2DDataFormat(f),I=a.backend_util.computeConv2DInfo(c.shape,p.shape,h,b,m,k,!1,v);let N;const w=[];if(1!==I.filterHeight||1!==I.filterWidth||1!==I.dilationHeight||1!==I.dilationWidth||1!==I.strideHeight||1!==I.strideWidth||"SAME"!==I.padInfo.type&&"VALID"!==I.padInfo.type)if((0,a.env)().getBool("WEBGL_CONV_IM2COL")&&1===c.shape[0])N=(0,o.J)({x:c,filter:p,convInfo:I,backend:t,bias:l,activation:g,preluActivationWeights:d,leakyreluAlpha:x});else{const e=null!=l,n=null!=d,o="leakyrelu"===g,i=g?(0,s.bE)(g,!1):null,u=new r.B(I,e,i,n,o),h=[c,p];if(l&&h.push(l),d&&h.push(d),o){const e=t.makeTensorInfo([],"float32",a.util.createScalarValue(x,"float32"));h.push(e),w.push(e)}N=t.runWebGLProgram(u,h,"float32")}else N=(0,o.K)({x:c,filter:p,convInfo:I,backend:t,bias:l,activation:g,preluActivationWeights:d,leakyreluAlpha:x});const S=(0,i.t)({inputs:{x:N},backend:t,attrs:{shape:I.outShape}});return w.push(N),w.forEach((e=>t.disposeIntermediateTensorInfo(e))),S}}},40279:function(e,n,t){t.d(n,{h:function(){return u}});var a=t(9495),r=t(76905),s=t(68173),o=t(74890);const i="return -x;";const u={kernelName:a.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{x:u}=n;if(t.shouldExecuteOnCPU([u])){const e=t.texData.get(u.dataId),[n,a]=(0,r.rQ)(e.values,u.shape,u.dtype);return t.makeTensorInfo(a,u.dtype,n)}let c;return c=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new o.rf(u.shape,i):new s.hE(u.shape,i),t.runWebGLProgram(c,[u],u.dtype)}}},46321:function(e,n,t){t.d(n,{J:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),s={kernelName:a.Elu,backendName:"webgl",kernelFunc:r}},46355:function(e,n,t){t.d(n,{R:function(){return s}});var a=t(9495),r=t(34673);const s={kernelName:a.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o}=n,{blockSize:i,dataFormat:u}=s;a.util.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const c=o.shape[0],p="NHWC"===u?o.shape[1]:o.shape[2],l="NHWC"===u?o.shape[2]:o.shape[3],d="NHWC"===u?o.shape[3]:o.shape[1],h=p*i,m=l*i,f=d/(i*i),b="NHWC"===u?[c,h,m,f]:[c,f,h,m],k=new r.x(b,i,u);return t.runWebGLProgram(k,[o],o.dtype)}}},47357:function(e,n,t){t.d(n,{F:function(){return o}});var a=t(9495),r=t(80273),s=t(9662);const o={kernelName:a.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{clipValueMin:u,clipValueMax:c}=o;let p;p=(0,a.env)().getBool("WEBGL_PACK_CLIP")?new s.$(i.shape):new r.T(i.shape);const l=p.getCustomSetupFunc(u,c);return t.runWebGLProgram(p,[i],i.dtype,l)}}},48689:function(e,n,t){t.d(n,{V:function(){return s}});var a=t(9495),r=t(52966);const s={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{dy:o,filter:i}=n,{strides:u,dilations:c,pad:p,dimRoundingMode:l,inputShape:d}=s,h=a.backend_util.computeConv2DInfo(d,i.shape,u,c,p,l,!0),m=new r.R(h);return t.runWebGLProgram(m,[o,i],"float32")}}},52132:function(e,n,t){t.d(n,{M:function(){return u}});var a=t(9495),r=t(68754),s=t(94043);var o=t(76905),i=t(95203);const u={kernelName:a.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:n,backend:t})=>{const{x:u}=e,{keepDims:c,axis:p}=n,l=t,d=u.shape.length,h=a.util.parseAxisParam(p,u.shape);let m=h;const f=a.backend_util.getAxesPermutation(m,d),b=null!=f,k=l.shouldExecuteOnCPU([u]),g=[];let x=u;if(b){if(k){const e=l.texData.get(x.dataId).values,n=new Array(d);for(let a=0;a<n.length;a++)n[a]=u.shape[f[a]];const t=(0,o.Q5)(e,u.shape,u.dtype,f,n);x=l.makeTensorInfo(n,u.dtype);l.texData.get(x.dataId).values=t}else x=(0,i._)(u,f,l);g.push(x),m=a.backend_util.getInnerMostAxes(m.length,d)}a.backend_util.assertAxesAreInnerMostDims("sum",m,d);const[v,I]=a.backend_util.computeOutAndReduceShapes(x.shape,m);let N=v;c&&(N=a.backend_util.expandShapeToKeepDim(v,h));const w=function(e,n,t,o){const i=a.util.sizeFromShape(n),u=a.util.sizeFromShape(e.shape)/i,c=(0,s.t)({inputs:{x:e},attrs:{shape:[u,i]},backend:o}),p=(0,r.T)(c,"float32","mean",o),l=(0,s.t)({inputs:{x:p},attrs:{shape:t},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(p),l}(x,I,N,l);for(const a of g)l.disposeIntermediateTensorInfo(a);return w}}},53002:function(e,n,t){t.d(n,{J:function(){return d},K:function(){return l}});var a=t(9495),r=t(58638),s=t(15411),o=t(63288),i=t(88380),u=t(64374),c=t(77723),p=t(94043);function l({x:e,filter:n,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:d=null}){const h=e.shape,m=r.texData.get(e.dataId),f=t.inChannels,b=h[0]*h[1]*h[2],k=t.outChannels,g="channelsLast"===t.dataFormat,x=!1,v=!1;let I;const N=[],w=(1===b||1===k)&&f>u.U,S=h[2]%2!==0&&!!m.isPacked;if(!w&&(0,a.env)().getBool("WEBGL_LAZILY_UNPACK")&&(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&S){const f=g?h[0]*h[1]*(h[2]+1):h[0]*h[2]*(h[3]+1),b={dataId:e.dataId,shape:[1,f,t.inChannels],dtype:e.dtype},k=m.shape;m.shape=m.shape.slice(),m.shape[m.shape.length-2]++,a.util.assert(i.P0(m.shape,b.shape),(()=>`packed reshape ${m.shape} to ${b.shape} isn't free`));const w=(0,p.t)({inputs:{x:n},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});N.push(w);const S=(0,u.L)({a:b,b:w,backend:r,transposeA:x,transposeB:v,bias:s,activation:d,preluActivationWeights:o,leakyreluAlpha:l}),y=r.texData.get(S.dataId);a.util.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),m.shape=k,y.shape=t.outShape,I=(0,c.D)({inputs:{x:S},backend:r}),I.shape=t.outShape,N.push(S)}else{const a=g?h[0]*h[1]*h[2]:h[0]*h[2]*h[3],i=(0,p.t)({inputs:{x:e},backend:r,attrs:{shape:[1,a,t.inChannels]}}),c=(0,p.t)({inputs:{x:n},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),m=(0,u.L)({a:i,b:c,transposeA:x,transposeB:v,backend:r,bias:s,activation:d,preluActivationWeights:o,leakyreluAlpha:l});I=(0,p.t)({inputs:{x:m},backend:r,attrs:{shape:t.outShape}}),N.push(i),N.push(c),N.push(m)}for(const a of N)r.disposeIntermediateTensorInfo(a);return I}function d({x:e,filter:n,convInfo:t,backend:i,bias:u=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const{filterWidth:h,filterHeight:m,inChannels:f,outWidth:b,outHeight:k,dataFormat:g}=t,x="channelsLast"===g,v=h*m*f,I=k*b,N=[v,I],w=[],S=(0,p.t)({inputs:{x:e},backend:i,attrs:{shape:e.shape.slice(1)}}),y=(0,p.t)({inputs:{x:n},backend:i,attrs:{shape:[1,v,a.util.sizeFromShape(n.shape)/v]}});w.push(S),w.push(y);const T=new r.D(N,S.shape,t),F=i.runWebGLProgram(T,[S],"float32"),A=(0,p.t)({inputs:{x:F},backend:i,attrs:{shape:[1,N[0],N[1]]}});w.push(F),w.push(A);const _=null!=u,P=null!=c,E="leakyrelu"===d,C=d?(0,s.bE)(d,!0):null,D=new o.P(A.shape,y.shape,[1,I,t.outChannels],!0,!1,_,C,P,E),L=[A,y];if(u&&L.push(u),P&&L.push(c),E){const e=i.makeTensorInfo([],"float32",a.util.createScalarValue(l,"float32"));L.push(e),w.push(e)}const W=i.runWebGLProgram(D,L,"float32"),G=x?[1,k,b,t.outChannels]:[1,t.outChannels,k,b],O=(0,p.t)({inputs:{x:W},backend:i,attrs:{shape:G}});w.push(W);for(const a of w)i.disposeIntermediateTensorInfo(a);return O}},54087:function(e,n,t){t.d(n,{H:function(){return u}});var a=t(9495),r=t(15411),s=t(76905);const o="return floor(x);",i=(0,r.vi)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:s.CJ}),u={kernelName:a.Floor,backendName:"webgl",kernelFunc:i}},54532:function(e,n,t){t.d(n,{q:function(){return o}});var a=t(9495),r=t(93179),s=t(98134);const o={kernelName:a.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{axis:i}=o;if(1===n.length)return(0,s.U)({inputs:{input:n[0]},backend:t,attrs:{dim:i}});const u=n[0].shape,c=n[0].dtype;n.forEach((e=>{a.util.assertShapesMatch(u,e.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(c===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const p=[],l=n.map((e=>{const n=(0,s.U)({inputs:{input:e},backend:t,attrs:{dim:i}});return p.push(n),n})),d=(0,r.x)({inputs:l,backend:t,attrs:{axis:i}});return p.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}}},57133:function(e,n,t){t.d(n,{V:function(){return s}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),s={kernelName:a.LogicalAnd,backendName:"webgl",kernelFunc:r}},62642:function(e,n,t){t.d(n,{_:function(){return o}});var a=t(9495),r=t(94804),s=t(94043);const o={kernelName:a.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:o}=e,{indices:i}=n,{depth:u,onValue:c,offValue:p}=o,l=a.util.sizeFromShape(i.shape),d=new r.M(l,u,c,p),h=(0,s.t)({inputs:{x:i},backend:t,attrs:{shape:[l]}}),m=t.runWebGLProgram(d,[h],i.dtype);t.disposeIntermediateTensorInfo(h);const f=[...i.shape,u],b=(0,s.t)({inputs:{x:m},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(m),b}}},64374:function(e,n,t){t.d(n,{L:function(){return l},U:function(){return p}});var a=t(9495),r=t(15411),s=t(63288),o=t(26041),i=t(94043),u=t(22853),c=t(58246);const p=1e3;function l({a:e,b:n,transposeA:t,transposeB:l,backend:d,bias:h=null,preluActivationWeights:m=null,leakyreluAlpha:f=0,activation:b=null}){const k=e.shape.length,g=n.shape.length,x=t?e.shape[k-2]:e.shape[k-1],v=l?n.shape[g-1]:n.shape[g-2],I=t?e.shape[k-1]:e.shape[k-2],N=l?n.shape[g-2]:n.shape[g-1],w=e.shape.slice(0,-2),S=n.shape.slice(0,-2),y=a.util.sizeFromShape(w),T=a.util.sizeFromShape(S),F=y===T||1===y||1===T;a.util.assert(k>=2&&g>=2&&F,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${w}) and (${S}).`));const A=(y>T?e.shape.slice(0,-2):n.shape.slice(0,-2)).concat([I,N]);a.util.assert(x===v,(()=>`Error in matMul: inner shapes (${x}) and (${v}) of Tensors with shapes ${e.shape} and ${n.shape} and transposeA=${t} and transposeB=${l} must match.`));const _=t?[y,x,I]:[y,I,x],P=l?[T,N,v]:[T,v,N],E=(0,i.t)({inputs:{x:e},backend:d,attrs:{shape:_}}),C=(0,i.t)({inputs:{x:n},backend:d,attrs:{shape:P}}),D=[E,C],L=Math.max(y,T),W=t?E.shape[1]:E.shape[2],G=null!=h,O=null!=m,M="leakyrelu"===b,R=null!=b?(0,r.bE)(b,!0):null;let B;if((1===I||1===N)&&W>p&&!1===(G||O||M||null!=R)){let e=E,n=C;t&&(e=(0,c.m)({inputs:{x:E},backend:d,attrs:{perm:[0,2,1]}}),D.push(e)),l&&(n=(0,c.m)({inputs:{x:C},backend:d,attrs:{perm:[0,2,1]}}),D.push(n));const a=1===N;let r=e;1!==N&&(r=(0,i.t)({inputs:{x:e},backend:d,attrs:{shape:[L,W,1]}}),D.push(r));const s=1===N?2:1;let p=n;a&&(p=(0,i.t)({inputs:{x:n},backend:d,attrs:{shape:[L,1,W]}}),D.push(p));const h=(0,o.l)({inputs:{a:r,b:p},backend:d});B=(0,u.c)({inputs:{x:h},backend:d,attrs:{axis:s,keepDims:!0}}),D.push(h)}else{const r=(0,a.upcastType)(e.dtype,n.dtype),o=new s.P(_,P,[L,I,N],t,l,G,R,O,M),i=[E,C];if(null!=h&&i.push(h),O&&i.push(m),M){const e=d.makeTensorInfo([],"float32",a.util.createScalarValue(f,"float32"));i.push(e),D.push(e)}B=d.runWebGLProgram(o,i,r)}const z=(0,i.t)({inputs:{x:B},backend:d,attrs:{shape:A}});D.push(B);for(const a of D)d.disposeIntermediateTensorInfo(a);return z}},64635:function(e,n,t){t.d(n,{h:function(){return c}});var a=t(9495),r=t(8993),s=t(37664),o=t(39803),i=t(4313),u=t(30097);const c={kernelName:a.OnesLike,backendName:"webgl",kernelFunc:function e(n){const{inputs:t,backend:a}=n,{x:c}=t;if("string"===c.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===c.dtype){const n=(0,i.x)({inputs:{input:c},backend:a}),t=e({inputs:{x:n},backend:a}),s=(0,o.n)({inputs:{input:c},backend:a}),p=(0,u.P)({inputs:{x:s},backend:a}),l=(0,r.f)({inputs:{real:t,imag:p},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(p),l}return(0,s.G)({attrs:{shape:c.shape,dtype:c.dtype,value:1},backend:a})}}},65057:function(e,n,t){t.d(n,{l:function(){return i}});var a=t(9495),r=t(4999),s=t(10424),o=t(15411);const i={kernelName:a.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u,filter:c,bias:p,preluActivationWeights:l}=n,{strides:d,pad:h,dilations:m,dimRoundingMode:f,activation:b,leakyreluAlpha:k}=i,g=[];let x=m;null==x&&(x=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(d,x),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${d} and dilations '${x}'`));const v=a.backend_util.computeConv2DInfo(u.shape,c.shape,d,x,h,f,!0),I=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&v.strideWidth<=2&&v.outChannels/v.inChannels===1,N=b?(0,o.bE)(b,I):null,w=[u,c],S=null!=p,y=null!=l,T="leakyrelu"===b;if(S&&w.push(p),y&&w.push(l),T){const e=t.makeTensorInfo([],"float32",a.util.createScalarValue(k,"float32"));w.push(e),g.push(e)}let F;F=I?new s.K(v,S,N,y,T):new r.E(v,S,N,y,T);const A=t.runWebGLProgram(F,w,"float32");return g.forEach((e=>t.disposeIntermediateTensorInfo(e))),A}}},65514:function(e,n,t){t.d(n,{e:function(){return i}});var a=t(9495),r=t(94043),s=t(29547),o=t(58246);const i={kernelName:a.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:i}=e,{x:u}=n,{blockShape:c,crops:p}=i;a.util.assert(u.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=c.reduce(((e,n)=>e*n)),d=a.backend_util.getReshaped(u.shape,c,l),h=a.backend_util.getPermuted(d.length,c.length),m=a.backend_util.getReshapedPermuted(u.shape,c,l),f=a.backend_util.getSliceBeginCoords(p,c.length),b=a.backend_util.getSliceSize(m,p,c.length),k=[],g=(0,r.t)({inputs:{x:u},backend:t,attrs:{shape:d}}),x=(0,o.m)({inputs:{x:g},backend:t,attrs:{perm:h}}),v=(0,r.t)({inputs:{x:x},backend:t,attrs:{shape:m}}),I=(0,s.d)({inputs:{x:v},backend:t,attrs:{begin:f,size:b}});return k.push(g),k.push(x),k.push(v),k.forEach((e=>t.disposeIntermediateTensorInfo(e))),I}}},65886:function(e,n,t){t.d(n,{y:function(){return o}});var a=t(9495),r=t(81017),s=t(80297);const o={kernelName:a.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{dy:i,input:u}=n,c=u,{filterSize:p,strides:l,pad:d,dimRoundingMode:h}=o,m=a.backend_util.computePool3DInfo(c.shape,p,l,[1,1,1],d,h),f=new s.U(m,"max",!0),b=t.runWebGLProgram(f,[c],c.dtype),k=new r.Y(m),g=t.runWebGLProgram(k,[i,b],c.dtype);return t.disposeIntermediateTensorInfo(b),g}}},66045:function(e,n,t){t.d(n,{x:function(){return i}});var a=t(9495),r=t(21005),s=t(53002),o=t(94043);const i={kernelName:a.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u,filter:c}=n,{strides:p,pad:l,dataFormat:d,dilations:h,dimRoundingMode:m}=i,f=a.backend_util.convertConv2DDataFormat(d),b=a.backend_util.computeConv2DInfo(u.shape,c.shape,p,h,l,m,!1,f);let k;if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if((0,a.env)().getBool("WEBGL_CONV_IM2COL")&&1===u.shape[0])k=(0,s.J)({x:u,filter:c,convInfo:b,backend:t});else{const e=new r.B(b);k=t.runWebGLProgram(e,[u,c],"float32")}else k=(0,s.K)({x:u,filter:c,convInfo:b,backend:t});const g=(0,o.t)({inputs:{x:k},backend:t,attrs:{shape:b.outShape}});return t.disposeIntermediateTensorInfo(k),g}}},66696:function(e,n,t){t.d(n,{c:function(){return s}});var a=t(9495),r=t(98074);const s={kernelName:a.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:a}=n;return(0,r.J)(a,!0,t)}}},66900:function(e,n,t){t.d(n,{K:function(){return o}});var a=t(9495),r=t(96911),s=t(94043);const o={kernelName:a.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{params:o,indices:i}=n,u=i.shape,c=u[u.length-1],[p,l,d,h]=a.backend_util.prepareAndValidate(o,i),m=(0,s.t)({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),f=(0,s.t)({inputs:{x:o},backend:t,attrs:{shape:[a.util.sizeFromShape(o.shape)/d,d]}}),b=new r.g(c,h,[l,d]),k=t.runWebGLProgram(b,[f,m],f.dtype),g=(0,s.t)({inputs:{x:k},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(k),g}}},66921:function(e,n,t){t.d(n,{B1:function(){return o},aw:function(){return i},zp:function(){return u}});var a=t(9495),r=t(22897),s=t(46334);const o="return (a < 0.) ? b * a : a;",i="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const u={kernelName:a.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{x:c}=n,{alpha:p}=u,l=t.makeTensorInfo([],"float32",a.util.createScalarValue(p,"float32")),d=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new s.VI(i,c.shape,l.shape):new r.x(o,c.shape,l.shape),h=t.runWebGLProgram(d,[c,l],c.dtype);return t.disposeIntermediateTensorInfo(l),h}}},69941:function(e,n,t){t.d(n,{j:function(){return i}});var a=t(9495),r=t(68754),s=t(94043),o=t(58246);const i={kernelName:a.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u}=n,{axis:c,keepDims:p}=i,l=u.shape.length,d=a.util.parseAxisParam(c,u.shape);let h=d;const m=a.backend_util.getAxesPermutation(h,l);let f=u;null!=m&&(f=(0,o.m)({inputs:{x:u},backend:t,attrs:{perm:m}}),h=a.backend_util.getInnerMostAxes(h.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",h,l);const[b,k]=a.backend_util.computeOutAndReduceShapes(f.shape,h),g=a.util.sizeFromShape(k),x=(0,s.t)({inputs:{x:f},backend:t,attrs:{shape:[-1,g]}}),v=(0,r.T)(x,x.dtype,"min",t);let I;if(p){const e=a.backend_util.expandShapeToKeepDim(b,d);I=(0,s.t)({inputs:{x:v},backend:t,attrs:{shape:e}})}else I=(0,s.t)({inputs:{x:v},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(v),null!=m&&t.disposeIntermediateTensorInfo(f),I}}},70318:function(e,n,t){t.d(n,{u:function(){return s}});var a=t(9495);const r=a.kernel_impls.nonMaxSuppressionV5Impl;const s={kernelName:a.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:t,attrs:s}=e,{boxes:o,scores:i}=n,{maxOutputSize:u,iouThreshold:c,scoreThreshold:p,softNmsSigma:l}=s,d=t.readSync(o.dataId),h=t.readSync(i.dataId),m=u,f=c,b=p,k=l,{selectedIndices:g,selectedScores:x}=r(d,h,m,f,b,k);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}}},70324:function(e,n,t){t.d(n,{Y:function(){return u}});var a=t(9495),r=t(15411),s=t(76905);const o="return exp(x) - 1.0;",i=(0,r.vi)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:s.SF}),u={kernelName:a.Expm1,backendName:"webgl",kernelFunc:i}},71739:function(e,n,t){t.d(n,{F:function(){return i}});var a=t(9495),r=t(15411),s=t(76905);const o=(0,r.vi)({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:s.rI}),i={kernelName:a.Log,backendName:"webgl",kernelFunc:o}},72517:function(e,n,t){t.d(n,{l:function(){return s}});var a=t(9495),r=t(76905);const s={kernelName:a.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:s,weights:o}=n,{size:i}=a,u=t.readSync(s.dataId),c=t.readSync(o.dataId),p=(0,r.jm)(u,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,p)}}},72718:function(e,n,t){t.d(n,{_:function(){return u}});var a=t(9495),r=t(26041),s=t(94043),o=t(22853),i=t(58246);const u={kernelName:a.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:u}=e,{equation:c}=u,p=n,{allDims:l,summedDims:d,idDims:h}=a.backend_util.decodeEinsumEquation(c,p.length);a.backend_util.checkEinsumDimSizes(l.length,h,p);const{path:m,steps:f}=a.backend_util.getEinsumComputePath(d,h),b=f.length;let k=null,g=l.length;const x=[];for(let v=0;v<b;++v){for(const e of f[v]){const{permutationIndices:n,expandDims:o}=a.backend_util.getEinsumPermutation(g,h[e]);let u;a.backend_util.isIdentityPermutation(n)?u=p[e]:(u=(0,i.m)({inputs:{x:p[e]},backend:t,attrs:{perm:n}}),x.push(u));const c=u.shape.slice();for(let e=0;e<o.length;++e)c.splice(o[e],0,1);a.util.arraysEqual(u.shape,c)||(u=(0,s.t)({inputs:{x:u},backend:t,attrs:{shape:c}}),x.push(u)),null===k?k=u:(k=(0,r.l)({inputs:{a:u,b:k},backend:t}),x.push(k))}v<b-1&&(m[v]>=0&&(k=(0,o.c)({inputs:{x:k},backend:t,attrs:{axis:m[v]-(l.length-g),keepDims:!1}}),x.push(k)),g--)}for(const a of x)a!==k&&t.disposeIntermediateTensorInfo(a);return k}}},73525:function(e,n,t){t.d(n,{R:function(){return s}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),s={kernelName:a.Equal,backendName:"webgl",kernelFunc:r}},73816:function(e,n,t){t.d(n,{m:function(){return s}});var a=t(9495);const r=a.kernel_impls.nonMaxSuppressionV3Impl;const s={kernelName:a.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:t,attrs:s}=e,{boxes:o,scores:i}=n,{maxOutputSize:u,iouThreshold:c,scoreThreshold:p}=s,l=t.readSync(o.dataId),d=t.readSync(i.dataId),{selectedIndices:h}=r(l,d,u,c,p);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}}},77723:function(e,n,t){function a(e){const{inputs:n,backend:t}=e,{x:a}=n;return t.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}t.d(n,{D:function(){return a},F:function(){return r}});const r={kernelName:t(9495).Identity,backendName:"webgl",kernelFunc:a}},82339:function(e,n,t){t.d(n,{V:function(){return o}});var a=t(9495),r=t(29643),s=t(68616);const o={kernelName:a.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:n,attrs:t})=>{const{x:o,mean:i,variance:u,offset:c,scale:p}=e;a.util.assert(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.util.assert(null==c||i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.util.assert(null==p||i.shape.length===p.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=t;null==l&&(l=.001);const d=[o,i,u];let h=null;null!=c&&(h=c.shape,d.push(c));let m=null;null!=p&&(m=p.shape,d.push(p));const f=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new s.x(o.shape,i.shape,u.shape,h,m,l):new r.f(o.shape,i.shape,u.shape,h,m,l);return n.runWebGLProgram(f,d,d[0].dtype)}}},83834:function(e,n,t){t.d(n,{K:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),s={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:r}},83910:function(e,n,t){t.d(n,{_:function(){return i}});var a=t(9495),r=t(15411);const s=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.backend_util.ERF_P};\n  float a1 = ${a.backend_util.ERF_A1};\n  float a2 = ${a.backend_util.ERF_A2};\n  float a3 = ${a.backend_util.ERF_A3};\n  float a4 = ${a.backend_util.ERF_A4};\n  float a5 = ${a.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,o=(0,r.vi)({opSnippet:s}),i={kernelName:a.Erf,backendName:"webgl",kernelFunc:o}},86099:function(e,n,t){t.d(n,{n:function(){return s}});var a=t(9495),r=t(52966);const s={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o,dy:i}=n,{strides:u,dilations:c,pad:p,dimRoundingMode:l,filterShape:d}=s,h=a.backend_util.computeConv2DInfo(o.shape,d,u,c,p,l,!0),m=new r.f(h);return t.runWebGLProgram(m,[o,i],"float32")}}},86856:function(e,n,t){t.d(n,{k:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),s={kernelName:a.Cosh,backendName:"webgl",kernelFunc:r}},89193:function(e,n,t){t.d(n,{j:function(){return s}});var a=t(9495),r=t(96146);const s={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t,attrs:a}=e,{x:s,y:o,dy:i}=n,{depthRadius:u,bias:c,alpha:p,beta:l}=a,d=new r.j(s.shape,u,c,p,l);return t.runWebGLProgram(d,[s,o,i],s.dtype)}}},89488:function(e,n,t){t.d(n,{a:function(){return o}});var a=t(9495),r=t(26608),s=t(62667);const o={kernelName:a.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{logits:o}=n,{numSamples:i,seed:u,normalized:c}=a,p=c?o:(0,s.V)({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=p.shape[0],d=p.shape[1],h=new r.O(l,d,i),m=h.getCustomSetupFunc(u),f=t.runWebGLProgram(h,[p],"int32",m);return c||t.disposeIntermediateTensorInfo(p),f}}},89805:function(e,n,t){t.d(n,{N:function(){return s}});var a=t(9495),r=t(98074);const s={kernelName:a.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:a}=n;return(0,r.J)(a,!1,t)}}},91241:function(e,n,t){t.d(n,{r:function(){return s}});var a=t(9495),r=t(81223);const s={kernelName:a.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o,dy:i}=n,{strides:u,pad:c,dataFormat:p,dimRoundingMode:l,filterShape:d}=s,h=a.backend_util.convertConv2DDataFormat(p),m=a.backend_util.computeConv2DInfo(o.shape,d,u,1,c,l,!1,h),f=new r.S5(m);return t.runWebGLProgram(f,[o,i],"float32")}}},92616:function(e,n,t){t.d(n,{e:function(){return i},w:function(){return o}});var a=t(9495),r=t(59344),s=t(11601);const o=e=>{const{inputs:n,backend:t,attrs:o}=e,{x:i}=n,{paddings:u,constantValue:c}=o,p=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s._(i.shape,u,c):new r.e(i.shape,u,c),l=p.getCustomSetupFunc(c);return t.runWebGLProgram(p,[i],i.dtype,l)},i={kernelName:a.PadV2,backendName:"webgl",kernelFunc:o}},92914:function(e,n,t){t.d(n,{A:function(){return s}});var a=t(9495),r=t(80297);const s={kernelName:a.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{x:o}=n,{filterSize:i,strides:u,pad:c,dataFormat:p,dimRoundingMode:l}=s,d=a.backend_util.computePool3DInfo(o.shape,i,u,[1,1,1],c,l,p),h=new r.U(d,"max",!1);return t.runWebGLProgram(h,[o],o.dtype)}}},93057:function(e,n,t){t.d(n,{x:function(){return o}});var a=t(9495),r=t(22897),s=t(46334);const o={kernelName:a.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:t}=e,{dy:o,y:i}=n,u=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new s.VI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",o.shape,i.shape):new r.x("return (b >= 1.0) ? a : a * (b + 1.0);",o.shape,i.shape);return t.runWebGLProgram(u,[o,i],o.dtype)}}},93179:function(e,n,t){t.d(n,{x:function(){return h},V:function(){return m}});var a=t(9495),r=t(14151),s=t(82676),o=t(76905),i=t(8993),u=t(39803),c=t(4313),p=t(94043);function l(e,n,t){const d=e[0].dtype;if("complex64"===d){const a=e.map((e=>(0,c.x)({inputs:{input:e},backend:t}))),r=e.map((e=>(0,u.n)({inputs:{input:e},backend:t}))),s=l(a,n,t),o=l(r,n,t),p=(0,i.f)({inputs:{real:s,imag:o},backend:t});return a.forEach((e=>t.disposeIntermediateTensorInfo(e))),r.forEach((e=>t.disposeIntermediateTensorInfo(e))),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),p}let h=t.shouldExecuteOnCPU(e);if("string"===d&&(h=!0),h){const r=e.map((e=>{const r=[-1,a.util.sizeFromShape(e.shape.slice(n))];return(0,p.t)({inputs:{x:e},backend:t,attrs:{shape:r}})})),s=r.map((e=>({vals:t.readSync(e.dataId),shape:e.shape}))),i=a.backend_util.computeOutShape(r.map((e=>e.shape)),1),u=1===r[0].shape[0],c=(0,o.dv)(s,i,d,u),l=a.backend_util.computeOutShape(e.map((e=>e.shape)),n),h=t.makeTensorInfo(l,d,c);return r.forEach((e=>t.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,a.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),r=l(e.slice(0,a),n,t),s=l(e.slice(a),n,t),o=l([r,s],n,t);return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(s),o}if((0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new s.V(e.map((e=>e.shape)),n);return t.runWebGLProgram(a,e,d)}const{tensors2D:m,outShape:f}=function(e,n,t){const r=a.backend_util.computeOutShape(e.map((e=>e.shape)),n),s=e.map((e=>(0,p.t)({inputs:{x:e},attrs:{shape:[-1,a.util.sizeFromShape(e.shape.slice(n))]},backend:t})));return{tensors2D:s,outShape:r}}(e,n,t),b=new r.P(m.map((e=>e.shape))),k=t.runWebGLProgram(b,m,d);m.forEach((e=>t.disposeIntermediateTensorInfo(e)));const g=(0,p.t)({inputs:{x:k},attrs:{shape:f},backend:t});return t.disposeIntermediateTensorInfo(k),g}var d=t(77723);function h(e){const{inputs:n,backend:t,attrs:r}=e,{axis:s}=r,o=a.util.parseAxisParam(s,n[0].shape)[0],i=a.backend_util.computeOutShape(n.map((e=>e.shape)),o);if(0===a.util.sizeFromShape(i))return t.makeTensorInfo(i,n[0].dtype,[]);const u=n.filter((e=>a.util.sizeFromShape(e.shape)>0));if(1===u.length)return(0,d.D)({inputs:{x:u[0]},backend:t});const c=u.map((e=>e.shape));return a.backend_util.assertParamsConsistent(c,o),l(u,o,t)}const m={kernelName:a.Concat,backendName:"webgl",kernelFunc:h}},94449:function(e,n,t){t.d(n,{V:function(){return o}});var a=t(9495),r=t(51554),s=t(2171);const o={kernelName:a.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:n,attrs:t})=>{const{x:o}=e,{paddings:i,mode:u}=t,c=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s.V(o.shape,i,u):new r.X(o.shape,i,u);return n.runWebGLProgram(c,[o],o.dtype)}}},94948:function(e,n,t){t.d(n,{Y:function(){return s}});var a=t(9495),r=t(81223);const s={kernelName:a.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:s}=e,{dy:o,filter:i}=n,{pad:u,strides:c,inputShape:p}=s,l=a.backend_util.computeConv3DInfo(p,i.shape,c,1,u),d=new r.tR(l);return t.runWebGLProgram(d,[o,i],"float32")}}},95171:function(e,n,t){t.d(n,{x:function(){return i}});var a=t(9495),r=t(15411),s=t(76905);const o=(0,r.j0)({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:s.Tm,dtype:"bool"}),i={kernelName:a.Greater,backendName:"webgl",kernelFunc:o}},95442:function(e,n,t){t.d(n,{I:function(){return s}});var a=t(9495);const r=(0,t(15411).vi)({opSnippet:"return float(isinf(x));",dtype:"bool"}),s={kernelName:a.IsInf,backendName:"webgl",kernelFunc:r}},98074:function(e,n,t){t.d(n,{J:function(){return i}});var a=t(9495),r=t(49873),s=t(8993),o=t(94043);function i(e,n,t){const i=t.texData.get(e.dataId),u=a.util.sizeFromShape(e.shape),c=e.shape[e.shape.length-1],p=u/c,l=(0,o.t)({inputs:{x:e},backend:t,attrs:{shape:[p,c]}}),d=l.shape,h=new r.R("real",d,n),m=new r.R("imag",d,n),f=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:d},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:d}],b=t.runWebGLProgram(h,f,"float32"),k=t.runWebGLProgram(m,f,"float32"),g=(0,s.f)({inputs:{real:b,imag:k},backend:t});t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(k);const x=(0,o.t)({inputs:{x:g},backend:t,attrs:{shape:e.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(g),x}},98134:function(e,n,t){t.d(n,{U:function(){return s},a:function(){return o}});var a=t(9495),r=t(94043);function s(e){const{inputs:n,attrs:t,backend:s}=e,{dim:o}=t,{input:i}=n,u=i.shape.length,c=i.shape.slice();let p=o;return o<0&&(a.util.assert(-(u+1)<=o,(()=>`Axis must be in the interval [${-(u+1)}, ${u}]`)),p=u+o+1),c.splice(p,0,1),(0,r.t)({inputs:{x:i},backend:s,attrs:{shape:c}})}const o={kernelName:a.ExpandDims,backendName:"webgl",kernelFunc:s}},98890:function(e,n,t){t.d(n,{A:function(){return s},E:function(){return r}});var a=t(9495);const r=(0,t(15411).j0)({opSnippet:"return float(a != b);",dtype:"bool"}),s={kernelName:a.NotEqual,backendName:"webgl",kernelFunc:r}},99160:function(e,n,t){t.d(n,{T:function(){return u},l:function(){return c}});var a=t(9495),r=t(76905),s=t(68754),o=t(94043);var i=t(95203);function u(e){const{inputs:n,backend:t,attrs:u}=e,{x:c}=n,{reductionIndices:p,keepDims:l}=u,d=c.shape.length,h=a.util.parseAxisParam(p,c.shape);let m=h;const f=a.backend_util.getAxesPermutation(m,d),b=null!=f,k=t.shouldExecuteOnCPU([c]);let g=c;if(b){if(k){const e=t.texData.get(g.dataId).values,n=new Array(d);for(let t=0;t<n.length;t++)n[t]=c.shape[f[t]];const a=(0,r.Q5)(e,c.shape,c.dtype,f,n);g=t.makeTensorInfo(n,c.dtype);t.texData.get(g.dataId).values=a}else g=(0,i._)(c,f,t);m=a.backend_util.getInnerMostAxes(m.length,d)}a.backend_util.assertAxesAreInnerMostDims("max",m,d);const[x,v]=a.backend_util.computeOutAndReduceShapes(g.shape,m);let I,N=x;if(l&&(N=a.backend_util.expandShapeToKeepDim(x,h)),k){const e=t.texData.get(g.dataId).values,n=(0,r.rw)(e,a.util.sizeFromShape(v),N,c.dtype);I=t.makeTensorInfo(N,c.dtype);t.texData.get(I.dataId).values=n}else I=function(e,n,t,r){const i=a.util.sizeFromShape(n),u=a.util.sizeFromShape(e.shape)/i,c=(0,o.t)({inputs:{x:e},attrs:{shape:[u,i]},backend:r}),p=(0,s.T)(c,e.dtype,"max",r),l=(0,o.t)({inputs:{x:p},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(p),l}(g,v,N,t);return b&&t.disposeIntermediateTensorInfo(g),I}const c={kernelName:a.Max,backendName:"webgl",kernelFunc:u}},99590:function(e,n,t){t.d(n,{Y:function(){return s}});var a=t(9495),r=t(76905);const s={kernelName:a.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:s,weights:o}=n,{size:i,binaryOutput:u}=a;if(1===s.shape.length){const e=t.readSync(s.dataId),n=t.readSync(o.dataId),a=(0,r.jm)(e,n,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,a)}if(2===s.shape.length){const e=t.bufferSync(s),n=t.bufferSync(o),a=(0,r.h0)(e,n,i,u);return t.makeTensorInfo(a.shape,o.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}}},99893:function(e,n,t){t.d(n,{D:function(){return s}});var a=t(9495),r=t(54057);const s={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:n})=>{const{image:t}=e,a=n,s=new r.T(t.shape);return a.runWebGLProgram(s,[t],t.dtype)}}}}]);
//# sourceMappingURL=stylist-vendors-477a324d.d31e9f66e37ab809ffec.js.map