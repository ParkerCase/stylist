"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[6394],{11717:function(e,n,t){t.d(n,{a:function(){return i}});var a=t(9495),r=t(97870),o=t(43842),s=t(14590);const i={kernelName:a.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:i}=e,{x:u,indices:c}=n,{axis:d,batchDims:l}=i;(0,r.C)([u,c],"gatherV2");let p=l;null==l&&(p=0);const f=a.util.sizeFromShape(c.shape),k=a.util.parseAxisParam(d,u.shape)[0],m=a.backend_util.segment_util.collectGatherOpShapeInfo(u,c,k,p),h=(0,s.t)({inputs:{x:u},backend:t,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),b=(0,s.t)({inputs:{x:c},backend:t,attrs:{shape:[m.batchSize,f/m.batchSize]}}),I=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],F=t.bufferSync(b),N=t.bufferSync(h),v=(0,o.G)(N,F,I);return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(b),t.makeTensorInfo(m.outputShape,v.dtype,v.values)}}},14346:function(e,n,t){t.d(n,{rq:function(){return s},xp:function(){return u}});var a=t(9495),r=t(8195),o=t(98880);const s=(0,r.Z)(((e,n)=>e>n?1:0)),i=(0,o.j)(a.Greater,s,null,"bool"),u={kernelName:a.Greater,backendName:"cpu",kernelFunc:i}},18944:function(e,n,t){function a(e){const{inputs:n,backend:t}=e,{input:a}=n,r=t.data.get(a.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}t.d(n,{l:function(){return r},n:function(){return a}});const r={kernelName:t(9495).Imag,backendName:"cpu",kernelFunc:a}},27445:function(e,n,t){t.d(n,{I:function(){return o}});var a=t(9495);const r=(0,t(21694).v)(a.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),o={kernelName:a.IsNan,backendName:"cpu",kernelFunc:r}},30307:function(e,n,t){t.d(n,{q:function(){return i}});var a=t(9495),r=t(9949),o=t(95315),s=t(43898);const i={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:i,filter:u,bias:c,preluActivationWeights:d}=n,{strides:l,pad:p,dataFormat:f,dilations:k,dimRoundingMode:m,activation:h,leakyreluAlpha:b}=a;let I=(0,s.J)({inputs:{x:i,filter:u},backend:t,attrs:{strides:l,pad:p,dataFormat:f,dilations:k,dimRoundingMode:m}});if(c){const e=I;I=(0,o.WQ)({inputs:{a:I,b:c},backend:t}),t.disposeIntermediateTensorInfo(e)}if(h){const e=I;I=(0,r.f)(t,I,h,d,b),t.disposeIntermediateTensorInfo(e)}return I}}},34820:function(e,n,t){t.d(n,{t:function(){return o}});var a=t(9495),r=t(97870);const o={kernelName:a.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:s}=n,{depthRadius:i,bias:u,alpha:c,beta:d}=o;(0,r.C)(s,"LRN");const l=s.shape[3],p=l-1,f=t.data.get(s.dataId).values,k=a.util.sizeFromShape(s.shape),m=new Float32Array(k);function h(e){const n=e%l;let t=e-n+Math.max(0,n-i);const a=e-n+Math.min(n+i,p);let r=0;for(;t<=a;t++){const e=f[t];r+=e*e}return r}for(let a=0;a<k;a++){const e=h(a),n=f[a]*Math.pow(u+c*e,-d);m[a]=n}return t.makeTensorInfo(s.shape,s.dtype,m)}}},43842:function(e,n,t){t.d(n,{G:function(){return r}});var a=t(9495);function r(e,n,t){const r=(0,a.buffer)(t,e.dtype);for(let a=0;a<r.size;++a){const t=r.indexToLoc(a).slice(),o=t[0],s=t[2],i=n.locToIndex([o,s]);t[2]=n.values[i];const u=e.locToIndex(t);r.values[a]=e.values[u]}return r}},46936:function(e,n,t){function a(e){const{inputs:n,backend:t}=e,{x:a}=n;return t.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}t.d(n,{D:function(){return a},F:function(){return r}});const r={kernelName:t(9495).Identity,backendName:"cpu",kernelFunc:a}},49608:function(e,n,t){t.d(n,{z:function(){return o}});var a=t(9495),r=t(97870);const o={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:o}=e,{x:s,y:i,dy:u}=n,{depthRadius:c,bias:d,alpha:l,beta:p}=o;(0,r.C)(u,"LRNGrad");const f=a.util.sizeFromShape(u.shape),k=u.shape[3],m=t.data.get(u.dataId).values,h=t.data.get(s.dataId).values,b=t.data.get(i.dataId).values,I=new Float32Array(f),F=f;for(let a=0;a<F;a++){const e=a%k,n=a-e+Math.max(0,e-c),t=a-e+Math.min(k,e+c+1);let r=0;for(let a=n;a<t;a++)r+=Math.pow(h[a],2);r=l*r+d;for(let o=n;o<t;o++){let e=-2*l*p*h[o]*b[a]/r;a===o&&(e+=Math.pow(r,-p)),e*=m[a],I[o]+=e}}return t.makeTensorInfo(u.shape,s.dtype,I)}}},50591:function(e,n,t){t.d(n,{K:function(){return r}});var a=t(9495);const r={kernelName:a.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t}=e,{params:r,indices:o}=n,s=a.util.sizeFromShape(r.shape),i=o.shape,u=i[i.length-1],[c,d,l,p]=a.backend_util.prepareAndValidate(r,o);if(0===d)return t.makeTensorInfo(c,r.dtype,[]);const f=(0,a.buffer)([d,l],r.dtype),k=t.data.get(o.dataId).values,m=t.data.get(r.dataId).values;for(let a=0;a<d;a++){const e=[];let n=0;for(let t=0;t<u;t++){const r=k[a*u+t];n+=r*p[t],e.push(r)}if(n<0||n>=s/l)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let t=0;t<l;t++)f.values[a*l+t]=m[n*l+t]}return t.makeTensorInfo(c,f.dtype,f.values)}}},60251:function(e,n,t){t.d(n,{c:function(){return s}});var a=t(9495),r=t(13041),o=t(14590);const s={kernelName:a.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:s}=n,i=a.util.sizeFromShape(s.shape),u=s.shape[s.shape.length-1],c=i/u,d=(0,o.t)({inputs:{x:s},backend:t,attrs:{shape:[c,u]}}),l=(0,r.f)(d,!0,t),p=(0,o.t)({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),p}}},62684:function(e,n,t){t.d(n,{D:function(){return r}});var a=t(9495);const r={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:n,backend:t})=>{const{image:r}=e,o=t,s=a.util.getTypedArrayFromDType(r.dtype,a.util.sizeFromShape(r.shape)),[i,u,c,d]=r.shape,l=o.data.get(r.dataId).values;for(let a=0;a<i;a++){const e=a*c*u*d;for(let n=0;n<u;n++){const t=n*(c*d);for(let a=0;a<c;a++){const r=a*d;for(let o=0;o<d;o++){const u=[i,n,a,o][2],p=Math.round(c-u),f=e+t+r+o;let k=l[f];if(p>=0&&p<c){k=l[e+t+p*d+o]}s[f]=k}}}}return{dataId:o.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}}},71969:function(e,n,t){t.d(n,{K:function(){return o}});var a=t(9495);const r=(0,t(21694).v)(a.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),o={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:r}},79727:function(e,n,t){t.d(n,{I:function(){return o}});var a=t(9495);const r=(0,t(21694).v)(a.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),o={kernelName:a.IsInf,backendName:"cpu",kernelFunc:r}},80015:function(e,n,t){t.d(n,{G:function(){return r},u:function(){return o}});var a=t(9495);function r(e){const{backend:n,attrs:t}=e,{shape:r,value:o,dtype:s}=t,i=s||a.util.inferDtype(o),u=a.util.getArrayFromDType(i,a.util.sizeFromShape(r));return function(e,n){e.fill(n)}(u,o),n.makeTensorInfo(r,i,u)}const o={kernelName:a.Fill,backendName:"cpu",kernelFunc:r}},85526:function(e,n,t){t.d(n,{Hc:function(){return u},vS:function(){return s}});var a=t(9495),r=t(45705),o=t(21694);const s=(0,r.o)((e=>Math.floor(e))),i=(0,o.F)(a.Floor,s),u={kernelName:a.Floor,backendName:"cpu",kernelFunc:i}},86768:function(e,n,t){t.d(n,{VM:function(){return u}});var a=t(9495),r=t(8195),o=t(98880);const s=(0,r.Z)(((e,n)=>e>=n?1:0)),i=(0,o.j)(a.GreaterEqual,s,null,"bool"),u={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:i}},89792:function(e,n,t){t.d(n,{N:function(){return s}});var a=t(9495),r=t(13041),o=t(14590);const s={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t}=e,{input:s}=n,i=a.util.sizeFromShape(s.shape),u=s.shape[s.shape.length-1],c=i/u,d=(0,o.t)({inputs:{x:s},backend:t,attrs:{shape:[c,u]}}),l=(0,r.f)(d,!1,t),p=(0,o.t)({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),p}}},95071:function(e,n,t){t.d(n,{Uc:function(){return u}});var a=t(9495),r=t(8195),o=t(98880);const s=(0,r.Z)(((e,n)=>Math.floor(e/n))),i=(0,o.j)(a.FloorDiv,s,null,"int32"),u={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:i}},99150:function(e,n,t){t.d(n,{l:function(){return i}});var a=t(9495),r=t(9949),o=t(95315),s=t(87994);const i={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:n,backend:t,attrs:a}=e,{x:i,filter:u,bias:c,preluActivationWeights:d}=n,{strides:l,pad:p,dataFormat:f,dilations:k,dimRoundingMode:m,activation:h,leakyreluAlpha:b}=a;let I=(0,s.n)({inputs:{x:i,filter:u},backend:t,attrs:{strides:l,pad:p,dataFormat:f,dilations:k,dimRoundingMode:m}});if(c){const e=I;I=(0,o.WQ)({inputs:{a:I,b:c},backend:t}),t.disposeIntermediateTensorInfo(e)}if(h){const e=I;I=(0,r.f)(t,I,h,d,b),t.disposeIntermediateTensorInfo(e)}return I}}}}]);
//# sourceMappingURL=stylist-vendors-90af5a2e.d967fcf665ba30957635.js.map