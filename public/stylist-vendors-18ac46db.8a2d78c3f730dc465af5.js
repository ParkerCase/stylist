"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[5778],{28560:function(e,t,r){r.d(t,{BB:function(){return u},EX:function(){return h},EZ:function(){return A},GM:function(){return T},NO:function(){return a},PM:function(){return l},Qn:function(){return o},j:function(){return s},tT:function(){return n}});var u,n,s,i=r(9495);function o(e,t){return[t,e]}function h(e,t){return e*t}function T(e){const t=i.util.sizeFromShape(e),r=Math.ceil(t/4);return i.util.sizeToSquarishShape(r)}function a(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function l(e,t){const[r,u]=a(e,t);return r*u*4}function A(e,t){const r=e;let u,n,s,o,h,T,a,l,A,c;return 2===(0,i.env)().getNumber("WEBGL_VERSION")?(u=r.R32F,n=r.R16F,s=r.RGBA16F,o=r.RGBA32F,h=r.RED,a=4,l=1,A=r.HALF_FLOAT,c=r.FLOAT,T=r.RGBA8):(u=e.RGBA,n=e.RGBA,s=e.RGBA,o=r.RGBA,h=e.RGBA,a=4,l=4,A=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT,T=e.RGBA),{internalFormatFloat:u,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:h,downloadTextureFormat:T,downloadUnpackNumChannels:a,defaultNumChannels:l,textureTypeHalfFloat:A,textureTypeFloat:c}}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(n||(n={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(s||(s={}))},47403:function(e,t,r){r.d(t,{p:function(){return i}});var u=r(9495),n=r(47646),s=r(28560);class i{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const u=h(t,r),n=T(e,u,r);n in this.freeTextures||(this.freeTextures[n]=[]),n in this.usedTextures||(this.usedTextures[n]=[]);const i=o(e,u,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[n].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[n].pop();return this.usedTextures[n].push(e),e}let a;return u===s.j.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):u===s.j.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):u===s.j.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):u===s.j.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):u===s.j.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[n].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,r,n){if(null==this.freeTextures)return;const s=h(r,n),i=T(t,s,n);i in this.freeTextures||(this.freeTextures[i]=[]);const a=o(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=(0,u.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const A=this.usedTextures[i],c=A&&A.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");A[c]=A[A.length-1],A.pop(),this.log()}log(){if(!this.logEnabled)return;this.numFreeTextures,this.numUsedTextures,this._numBytesFree,this._numBytesAllocated}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function o(e,t,r,u,i){const o=function(e,t){switch(e){case s.j.PACKED_2X2_FLOAT32:return(0,n.Ij)(t);case s.j.PACKED_2X2_FLOAT16:return(0,n.z8)(t);case s.j.UNPACKED_FLOAT32:return(0,n.fj)(t);case s.j.UNPACKED_FLOAT16:return(0,n.J$)(t);case s.j.PACKED_4X1_UNSIGNED_BYTE:return(0,n.wM)(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,u);let h;if(i){const[t,r]=(0,s.NO)(e[0],e[1]);h=t*r}else{const[t,r]=(0,s.Qn)(e[0],e[1]);h=t*r}const T=function(e,t){const r=e;if(t===r.R32F)return 4;if(t===r.R16F)return 2;if(t===r.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===r.RGBA16F)return 8;if(t===r.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(r,o);return h*T}function h(e,t){if(e===s.tT.UPLOAD)return s.j.PACKED_2X2_FLOAT32;if(e===s.tT.RENDER||null==e)return function(e){return(0,u.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?s.j.PACKED_2X2_FLOAT32:s.j.UNPACKED_FLOAT32:e?s.j.PACKED_2X2_FLOAT16:s.j.UNPACKED_FLOAT16}(t);if(e===s.tT.DOWNLOAD||e===s.tT.PIXELS)return s.j.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function T(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}}}]);
//# sourceMappingURL=stylist-vendors-18ac46db.8a2d78c3f730dc465af5.js.map