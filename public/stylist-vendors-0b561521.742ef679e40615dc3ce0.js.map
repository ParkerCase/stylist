{"version":3,"file":"stylist-vendors-0b561521.742ef679e40615dc3ce0.js","mappings":"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","sources":["webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseReshape.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transform.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseFillEmptyRows.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, ResizeBilinear } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearProgram } from '../resize_bilinear_gpu';\nimport { ResizeBilinearPackedProgram } from '../resize_bilinear_packed_gpu';\nexport function resizeBilinear(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const program = env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n        new ResizeBilinearPackedProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters) :\n        new ResizeBilinearProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n    return backend.runWebGLProgram(program, [images], 'float32');\n}\nexport const resizeBilinearConfig = {\n    kernelName: ResizeBilinear,\n    backendName: 'webgl',\n    kernelFunc: resizeBilinear\n};\n//# sourceMappingURL=ResizeBilinear.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.texData.get(input.dataId);\n    return identity({ inputs: { x: inputData.complexTensorInfos.real }, backend });\n}\nexport const realConfig = {\n    kernelName: Real,\n    backendName: 'webgl',\n    kernelFunc: real\n};\n//# sourceMappingURL=Real.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\n// Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\nconst DIV = `\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;`;\n// We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\nconst DIV_PACKED = `\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n`;\nexport const realDiv = binaryKernelFunc({ opSnippet: DIV, packedOpSnippet: DIV_PACKED, checkOutOfBounds: true });\nexport const realDivConfig = {\n    kernelName: RealDiv,\n    backendName: 'webgl',\n    kernelFunc: realDiv,\n};\n//# sourceMappingURL=RealDiv.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, slice_util, StridedSlice } from '@tensorflow/tfjs-core';\nimport { stridedSliceImplCPU } from '../kernel_utils/shared';\nimport { StridedSliceProgram } from '../strided_slice_gpu';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function stridedSlice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask } = attrs;\n    const { nonStrided, $begin, $strides, size, newShape, outShape } = slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n    const $x = reshape({ inputs: { x }, backend, attrs: { shape: newShape } });\n    let result;\n    if (nonStrided) {\n        const sliced = slice({ inputs: { x: $x }, backend, attrs: { begin: $begin, size } });\n        result = reshape({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        backend.disposeIntermediateTensorInfo(sliced);\n    }\n    else if (outShape.some(axis => axis === 0)) {\n        result = backend.makeTensorInfo(outShape, x.dtype, []);\n    }\n    else {\n        const shouldExecuteOnCPU = backend.shouldExecuteOnCPU([$x]);\n        if (shouldExecuteOnCPU) {\n            const xTexData = backend.texData.get($x.dataId);\n            const values = xTexData.values;\n            const xBuf = buffer($x.shape, $x.dtype, values);\n            const resultValues = stridedSliceImplCPU(outShape, xBuf, $strides, $begin);\n            result = backend.makeTensorInfo(outShape, $x.dtype, resultValues.values);\n        }\n        else {\n            const program = new StridedSliceProgram($begin, $strides, outShape);\n            result = backend.runWebGLProgram(program, [$x], $x.dtype);\n        }\n    }\n    const resultReshaped = reshape({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo($x);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nexport const stridedSliceConfig = {\n    kernelName: StridedSlice,\n    backendName: 'webgl',\n    kernelFunc: stridedSlice\n};\n//# sourceMappingURL=StridedSlice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SQRT = `return sqrt(x);`;\nexport const sqrt = unaryKernelFunc({ opSnippet: SQRT });\nexport const sqrtConfig = {\n    kernelName: Sqrt,\n    backendName: 'webgl',\n    kernelFunc: sqrt\n};\n//# sourceMappingURL=Sqrt.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SQUARE = `return x * x;`;\nexport const square = unaryKernelFunc({ opSnippet: SQUARE });\nexport const squareConfig = {\n    kernelName: Square,\n    backendName: 'webgl',\n    kernelFunc: square,\n};\n//# sourceMappingURL=Square.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst RELU6 = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\nconst RELU6_PACKED = `\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport const relu6 = unaryKernelFunc({ opSnippet: RELU6, packedOpSnippet: RELU6_PACKED });\nexport const relu6Config = {\n    kernelName: Relu6,\n    backendName: 'webgl',\n    kernelFunc: relu6\n};\n//# sourceMappingURL=Relu6.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Prelu } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nexport const PRELU = `return (a < 0.) ? b * a : a;`;\nexport const PRELU_PACKED = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\nexport function prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    const program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(PRELU_PACKED, x.shape, alpha.shape) :\n        new BinaryOpProgram(PRELU, x.shape, alpha.shape);\n    return backend.runWebGLProgram(program, [x, alpha], x.dtype);\n}\nexport const preluConfig = {\n    kernelName: Prelu,\n    backendName: 'webgl',\n    kernelFunc: prelu\n};\n//# sourceMappingURL=Prelu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '@tensorflow/tfjs-core';\nimport { sumImpl } from './Sum_impl';\nexport function sum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    return sumImpl(x, axis, keepDims, backend);\n}\nexport const sumConfig = {\n    kernelName: Sum,\n    backendName: 'webgl',\n    kernelFunc: sum\n};\n//# sourceMappingURL=Sum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transposeImpl } from './Transpose_impl';\nexport function sumImpl(x, axis, keepDims, backend) {\n    const reductionIndices = axis;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    const sumInputIsTransposed = permutedAxes != null;\n    let sumInput = x;\n    if (sumInputIsTransposed) {\n        sumInput = transposeImpl(x, permutedAxes, backend);\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n    const [sumOutShape, reduceShape] = backend_util.computeOutAndReduceShapes(sumInput.shape, axes);\n    let outShape = sumOutShape;\n    if (keepDims) {\n        // rather than reshape at the end, set the target shape here.\n        outShape = backend_util.expandShapeToKeepDim(sumOutShape, origAxes);\n    }\n    const inSize = util.sizeFromShape(reduceShape);\n    const xSize = util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = reshape({ inputs: { x: sumInput }, attrs: { shape: [batchSize, inSize] }, backend });\n    const outType = sumOutType(x.dtype);\n    const reduced = reduce(reshapedInput, outType, 'sum', backend);\n    const out = reshape({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (sumInputIsTransposed) {\n        backend.disposeIntermediateTensorInfo(sumInput);\n    }\n    return out;\n}\n//# sourceMappingURL=Sum_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SIGMOID = `return 1.0 / (1.0 + exp(-1.0 * x));`;\nexport const sigmoid = unaryKernelFunc({ opSnippet: SIGMOID });\nexport const sigmoidConfig = {\n    kernelName: Sigmoid,\n    backendName: 'webgl',\n    kernelFunc: sigmoid,\n};\n//# sourceMappingURL=Sigmoid.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { RotateProgram } from '../rotate_gpu';\nexport const rotateWithOffsetConfig = {\n    kernelName: RotateWithOffset,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { image } = inputs;\n        const { radians, fillValue, center } = attrs;\n        const webglBackend = backend;\n        const program = new RotateProgram(image.shape, fillValue);\n        const [centerX, centerY] = backend_util.getImageCenter(center, image.shape[1], image.shape[2]);\n        const customSetup = program.getCustomSetupFunc(centerX, centerY, Math.sin(radians), Math.cos(radians));\n        const output = webglBackend.runWebGLProgram(program, [image], image.dtype, customSetup);\n        return output;\n    }\n};\n//# sourceMappingURL=RotateWithOffset.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SparseReshape } from '@tensorflow/tfjs-core';\nimport { sparseReshapeImplCPU } from '../kernel_utils/shared';\nexport function sparseReshape(args) {\n    const { inputs, backend } = args;\n    const { inputIndices, inputShape, newShape } = inputs;\n    if (inputIndices.shape.length !== 2) {\n        throw new Error(`Input indices should be a matrix but received shape ${inputIndices.shape}`);\n    }\n    if (inputShape.shape.length !== 1) {\n        throw new Error(`Input shape should be a vector but received shape ${inputShape.shape}`);\n    }\n    if (newShape.shape.length !== 1) {\n        throw new Error(`Target shape should be a vector but received shape ${newShape.shape}`);\n    }\n    const $inputShape = Array.from(backend.readSync(inputShape.dataId));\n    const $inputIndices = backend.readSync(inputIndices.dataId);\n    const targetShape = Array.from(backend.readSync(newShape.dataId));\n    const [newIndices, indicesShape, outputShape] = sparseReshapeImplCPU($inputIndices, inputIndices.shape, inputIndices.dtype, $inputShape, targetShape);\n    return [\n        backend.makeTensorInfo(indicesShape, inputIndices.dtype, newIndices),\n        backend.makeTensorInfo([outputShape.length], newShape.dtype, new Int32Array(outputShape)),\n    ];\n}\nexport const sparseReshapeConfig = {\n    kernelName: SparseReshape,\n    backendName: 'webgl',\n    kernelFunc: sparseReshape,\n};\n//# sourceMappingURL=SparseReshape.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nimport { assertNotComplex } from '../webgl_util';\nexport function unique(args) {\n    const { inputs, attrs, backend } = args;\n    const { axis } = attrs;\n    const { x } = inputs;\n    assertNotComplex(x, 'unique');\n    // For now, always forward calculation to the CPU backend.\n    console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n    const values = backend.readSync(x.dataId);\n    const { outputValues, outputShape, indices } = uniqueImplCPU(values, axis, x.shape, x.dtype);\n    return [\n        backend.makeTensorInfo(outputShape, x.dtype, outputValues),\n        backend.makeTensorInfo([indices.length], 'int32', indices),\n    ];\n}\nexport const uniqueConfig = {\n    kernelName: Unique,\n    backendName: 'webgl',\n    kernelFunc: unique,\n};\n//# sourceMappingURL=Unique.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { sliceImplCPU } from '../kernel_utils/shared';\nimport { SliceProgram } from '../slice_gpu';\nimport { SlicePackedProgram } from '../slice_packed_gpu';\nfunction shallowSlice(x, begin, size, backend) {\n    const xTexData = backend.texData.get(x.dataId);\n    const t = backend.makeTensorInfo(size, x.dtype);\n    const newTexData = backend.texData.get(t.dataId);\n    // Copy texture data from the original tensor.\n    Object.assign(newTexData, xTexData);\n    newTexData.refCount = 1;\n    newTexData.shape = size;\n    newTexData.dtype = x.dtype;\n    let flatOffset = slice_util.computeFlatOffset(begin, util.computeStrides(x.shape));\n    if (xTexData.slice) {\n        // We are slicing an already sliced tensor, so we have to accumulate\n        // the offset.\n        flatOffset += xTexData.slice.flatOffset;\n    }\n    newTexData.slice = {\n        flatOffset,\n        // Point to the original dataId, which is used to do ref counting.\n        origDataId: xTexData.slice && xTexData.slice.origDataId || x.dataId\n    };\n    // Increase the ref count for that data bucket.\n    const refCount = backend.dataRefCount.get(newTexData.slice.origDataId) || 1;\n    backend.dataRefCount.set(newTexData.slice.origDataId, refCount + 1);\n    return t;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    if (util.sizeFromShape($size) === 0) {\n        return backend.makeTensorInfo($size, x.dtype, []);\n    }\n    // Run on cpu if dtype is string. For string, the backend represents it\n    // as Uint8Array[], where each Uint8Array is a character. Given that the\n    // computation is only on the outer array, uploading the whole data onto\n    // gpu is wasteful. Also, currently webgl doesn't have a design to\n    // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n    // just run the kernel on cpu if dtype is string.\n    if (backend.shouldExecuteOnCPU([x]) || x.dtype === 'string') {\n        const xTexData = backend.texData.get(x.dataId);\n        const outValues = sliceImplCPU(xTexData.values, $begin, $size, x.shape, x.dtype);\n        return backend.makeTensorInfo($size, x.dtype, outValues);\n    }\n    const { isPacked } = backend.texData.get(x.dataId);\n    const isContinous = slice_util.isSliceContinous(x.shape, $begin, $size);\n    if (isPacked || !isContinous) {\n        const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n            new SlicePackedProgram($size) :\n            new SliceProgram($size);\n        const customSetup = program.getCustomSetupFunc($begin);\n        return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n    }\n    backend.uploadToGPU(x.dataId);\n    return shallowSlice(x, $begin, $size, backend);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'webgl',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return fill({\n            attrs: {\n                shape: x.shape,\n                dtype: x.dtype,\n                value: x.dtype === 'string' ? '' : 0\n            },\n            backend\n        });\n    }\n}\nexport const zerosLikeConfig = {\n    kernelName: ZerosLike,\n    backendName: 'webgl',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=ZerosLike.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform } from '@tensorflow/tfjs-core';\nimport { TransformProgram } from '../transform_gpu';\nexport function transform(args) {\n    const { inputs, backend, attrs } = args;\n    const { image, transforms } = inputs;\n    const { interpolation, fillMode, fillValue, outputShape } = attrs;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n    const outShape = [batch, outHeight, outWidth,\n        numChannels];\n    const program = new TransformProgram(imageHeight, imageWidth, interpolation, fillMode, fillValue, outShape);\n    return backend.runWebGLProgram(program, [image, transforms], 'float32');\n}\nexport const transformConfig = {\n    kernelName: Transform,\n    backendName: 'webgl',\n    kernelFunc: transform\n};\n//# sourceMappingURL=Transform.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { rsqrtImplCPU } from '../kernel_utils/shared';\nconst RSQRT = `return inversesqrt(x);`;\nexport const rsqrt = unaryKernelFunc({ opSnippet: RSQRT, cpuKernelImpl: rsqrtImplCPU });\nexport const rsqrtConfig = {\n    kernelName: Rsqrt,\n    backendName: 'webgl',\n    kernelFunc: rsqrt\n};\n//# sourceMappingURL=Rsqrt.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\nconst RELU_PACKED = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport const relu = unaryKernelFunc({ opSnippet: RELU, packedOpSnippet: RELU_PACKED });\nexport const reluConfig = {\n    kernelName: Relu,\n    backendName: 'webgl',\n    kernelFunc: relu\n};\n//# sourceMappingURL=Relu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { subImplCPU as cpuSub } from '../kernel_utils/shared';\nconst SUB = 'return a - b;';\nexport const sub = binaryKernelFunc({\n    opSnippet: SUB,\n    packedOpSnippet: SUB,\n    supportsComplex: true,\n    cpuKernelImpl: cpuSub\n});\nexport const subConfig = {\n    kernelName: Sub,\n    backendName: 'webgl',\n    kernelFunc: sub\n};\n//# sourceMappingURL=Sub.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = (args) => {\n    const { backend, attrs } = args;\n    const { start, stop, step, dtype } = attrs;\n    const values = rangeImplCPU(start, stop, step, dtype);\n    return backend.makeTensorInfo([values.length], dtype, values);\n};\nexport const rangeConfig = {\n    kernelName: Range,\n    backendName: 'webgl',\n    kernelFunc: range\n};\n//# sourceMappingURL=Range.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const x = value;\n    const xRank = x.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(xRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < xRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = x.shape[i];\n        }\n    }\n    const toDispose = [];\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const sliced = slice({ inputs: { x }, backend, attrs: { begin, size } });\n        const reshaped = reshape({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        res[i] = reshaped;\n        toDispose.push(sliced);\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nexport const unpackConfig = {\n    kernelName: Unpack,\n    backendName: 'webgl',\n    kernelFunc: unpack\n};\n//# sourceMappingURL=Unpack.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, ResizeNearestNeighbor } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeighborProgram } from '../resize_nearest_neighbor_gpu';\nimport { ResizeNearestNeighborPackedProgram } from '../resize_nearest_neighbor_packed_gpu';\nexport function resizeNearestNeighbor(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const program = env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n        new ResizeNearestNeighborPackedProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters) :\n        new ResizeNearestNeighborProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n    return backend.runWebGLProgram(program, [images], images.dtype);\n}\nexport const resizeNearestNeighborConfig = {\n    kernelName: ResizeNearestNeighbor,\n    backendName: 'webgl',\n    kernelFunc: resizeNearestNeighbor\n};\n//# sourceMappingURL=ResizeNearestNeighbor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\n// Sign does not propagate NANs.\nconst SIGN = `\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n`;\nexport const sign = unaryKernelFunc({ opSnippet: SIGN });\nexport const signConfig = {\n    kernelName: Sign,\n    backendName: 'webgl',\n    kernelFunc: sign,\n};\n//# sourceMappingURL=Sign.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst TAN = `return tan(x);`;\nexport const tan = unaryKernelFunc({ opSnippet: TAN });\nexport const tanConfig = {\n    kernelName: Tan,\n    backendName: 'webgl',\n    kernelFunc: tan,\n};\n//# sourceMappingURL=Tan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function _fusedMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    return batchMatMulImpl({\n        a,\n        b,\n        transposeA,\n        transposeB,\n        backend,\n        bias,\n        preluActivationWeights,\n        leakyreluAlpha,\n        activation\n    });\n}\nexport const _fusedMatMulConfig = {\n    kernelName: _FusedMatMul,\n    backendName: 'webgl',\n    kernelFunc: _fusedMatMul,\n};\n//# sourceMappingURL=_FusedMatMul.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst POW = `\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n`;\nconst POW_PACKED = `\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\nexport const pow = binaryKernelFunc({ opSnippet: POW, packedOpSnippet: POW_PACKED });\nexport const powConfig = {\n    kernelName: Pow,\n    backendName: 'webgl',\n    kernelFunc: pow\n};\n//# sourceMappingURL=Pow.js.map","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SparseFillEmptyRows } from '@tensorflow/tfjs-core';\nimport { sparseFillEmptyRowsImplCPU } from '../kernel_utils/shared';\nexport function sparseFillEmptyRows(args) {\n    const { inputs, backend } = args;\n    const { indices, values, denseShape, defaultValue } = inputs;\n    if (denseShape.shape.length !== 1) {\n        throw new Error(`Dense shape must be a vector, saw:\n         ${denseShape.shape}`);\n    }\n    if (indices.shape.length !== 2) {\n        throw new Error(`Indices must be a matrix, saw:\n         ${indices.shape}`);\n    }\n    if (values.shape.length !== 1) {\n        throw new Error(`Values must be a vector, saw:\n         ${values.shape}`);\n    }\n    if (defaultValue.shape.length !== 0) {\n        throw new Error(`Default value must be a scalar, saw:\n        ${defaultValue.shape}`);\n    }\n    const $indices = backend.readSync(indices.dataId);\n    const $values = backend.readSync(values.dataId);\n    const $denseShape = backend.readSync(denseShape.dataId);\n    const $defaultValue = backend.readSync(defaultValue.dataId)[0];\n    const [outputIndices, outputIndicesShape, outputValues, emptyRowIndicator, reverseIndexMap] = sparseFillEmptyRowsImplCPU($indices, indices.shape, indices.dtype, $values, values.dtype, $denseShape, $defaultValue);\n    return [\n        backend.makeTensorInfo(outputIndicesShape, indices.dtype, outputIndices),\n        backend.makeTensorInfo([outputIndicesShape[0]], values.dtype, outputValues),\n        backend.makeTensorInfo([emptyRowIndicator.length], 'bool', new Uint8Array(emptyRowIndicator.map((value) => Number(value)))),\n        backend.makeTensorInfo([reverseIndexMap.length], indices.dtype, new Int32Array(reverseIndexMap)),\n    ];\n}\nexport const sparseFillEmptyRowsConfig = {\n    kernelName: SparseFillEmptyRows,\n    backendName: 'webgl',\n    kernelFunc: sparseFillEmptyRows,\n};\n//# sourceMappingURL=SparseFillEmptyRows.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SINH = `\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n`;\nexport const sinh = unaryKernelFunc({ opSnippet: SINH });\nexport const sinhConfig = {\n    kernelName: Sinh,\n    backendName: 'webgl',\n    kernelFunc: sinh,\n};\n//# sourceMappingURL=Sinh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst RECIPROCAL = `return 1.0 / x;`;\nexport const reciprocal = unaryKernelFunc({ opSnippet: RECIPROCAL });\nexport const reciprocalConfig = {\n    kernelName: Reciprocal,\n    backendName: 'webgl',\n    kernelFunc: reciprocal,\n};\n//# sourceMappingURL=Reciprocal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, UnsortedSegmentSum, util } from '@tensorflow/tfjs-core';\nimport { SegmentOpProgram } from '../segment_gpu';\nimport { range } from './Range';\nimport { reshape } from './Reshape';\nimport { tile } from './Tile';\nimport { transpose } from './Transpose';\nexport function unsortedSegmentSum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, segmentIds } = inputs;\n    const { numSegments } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    let axis = 0;\n    const permutation = backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutation } });\n        toDispose.push(permutedX);\n        axis = backend_util.getInnerMostAxes(1, xRank)[0];\n    }\n    const outShape = backend_util.segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n    const inSize = util.sizeFromShape([permutedX.shape[axis]]);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    toDispose.push(a2D);\n    const outputDType = sumOutType(x.dtype);\n    const segOpCompute = (x, segOpType, segmentIds, dtype, numSegments) => {\n        const batchSize = x.shape[0];\n        const inSize = x.shape[1];\n        const windowSize = backend_util.segment_util.segOpComputeOptimalWindowSize(inSize, numSegments);\n        const segOpInfo = { windowSize, inSize, batchSize, numSegments };\n        const program = new SegmentOpProgram(segOpInfo, segOpType);\n        const output = backend.compileAndRun(program, [x, segmentIds], dtype);\n        toDispose.push(output);\n        // No need to run another GPGPU program.\n        if (output.shape[1] === numSegments) {\n            return output;\n        }\n        const rangeInfo = range({\n            backend,\n            attrs: { start: 0, stop: numSegments, step: 1, dtype: 'float32' }\n        });\n        const tileInfo = tile({\n            inputs: { x: rangeInfo },\n            backend,\n            attrs: { reps: [inSize / windowSize] }\n        });\n        toDispose.push(rangeInfo);\n        toDispose.push(tileInfo);\n        const result = segOpCompute(output, segOpType, tileInfo, dtype, numSegments);\n        return result;\n    };\n    const segOpResult = segOpCompute(a2D, 'unsortedSegmentSum', segmentIds, outputDType, numSegments);\n    const reshaped = reshape({ inputs: { x: segOpResult }, backend, attrs: { shape: outShape } });\n    let result = reshaped;\n    if (permutation != null) {\n        toDispose.push(reshaped);\n        const perm = backend_util.getUndoAxesPermutation(permutation);\n        result = transpose({ inputs: { x: result }, backend, attrs: { perm } });\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nexport const unsortedSegmentSumConfig = {\n    kernelName: UnsortedSegmentSum,\n    backendName: 'webgl',\n    kernelFunc: unsortedSegmentSum\n};\n//# sourceMappingURL=UnsortedSegmentSum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2 } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport const spaceToBatchND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    util.assert(x.shape.length <= 4, () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const toDispose = [];\n    const paddedX = padV2({\n        inputs: { x },\n        backend,\n        attrs: { paddings: completePaddings, constantValue: 0 }\n    });\n    const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n    const reshapedPaddedX = reshape({ inputs: { x: paddedX }, backend, attrs: { shape: reshapedPaddedShape } });\n    const paddedXT = transpose({\n        inputs: { x: reshapedPaddedX },\n        backend,\n        attrs: { perm: permutedReshapedPaddedPermutation }\n    });\n    const result = reshape({ inputs: { x: paddedXT }, backend, attrs: { shape: flattenShape } });\n    toDispose.push(paddedX);\n    toDispose.push(reshapedPaddedX);\n    toDispose.push(paddedXT);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n};\nexport const spaceToBatchNDConfig = {\n    kernelName: SpaceToBatchND,\n    backendName: 'webgl',\n    kernelFunc: spaceToBatchND\n};\n//# sourceMappingURL=SpaceToBatchND.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, upcastType } from '@tensorflow/tfjs-core';\nimport { SelectProgram } from '../select_gpu';\nexport function select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    const program = new SelectProgram(condition.shape.length, t.shape, t.shape.length);\n    return backend.runWebGLProgram(program, [condition, t, e], upcastType(t.dtype, e.dtype));\n}\nexport const selectConfig = {\n    kernelName: Select,\n    backendName: 'webgl',\n    kernelFunc: select\n};\n//# sourceMappingURL=Select.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport const squaredDifference = binaryKernelFunc({ opSnippet: SQUARED_DIFFERENCE, packedOpSnippet: SQUARED_DIFFERENCE });\nexport const squaredDifferenceConfig = {\n    kernelName: SquaredDifference,\n    backendName: 'webgl',\n    kernelFunc: squaredDifference,\n};\n//# sourceMappingURL=SquaredDifference.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, ScatterNd } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function scatterNd(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = backend_util.calculateShapes(updates, indices, shape);\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    if (outputSize === 0) {\n        return backend.makeTensorInfo(shape, indices.dtype);\n    }\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numUpdates, sliceRank] } });\n    const flattenX = reshape({ inputs: { x: updates }, backend, attrs: { shape: [numUpdates, sliceSize] } });\n    const defaultValue = backend.makeTensorInfo([], 'float32', new Float32Array([0])); // scalar(0)\n    const program = new ScatterProgram(numUpdates, sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndices, defaultValue], flattenX.dtype);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape } });\n    backend.disposeIntermediateTensorInfo(flattenIndices);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(res);\n    backend.disposeIntermediateTensorInfo(defaultValue);\n    return reshaped;\n}\nexport const scatterNdConfig = {\n    kernelName: ScatterNd,\n    backendName: 'webgl',\n    kernelFunc: scatterNd\n};\n//# sourceMappingURL=ScatterNd.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { transposeImpl } from './Transpose_impl';\nimport { transposeImplCPU as cpuTranspose } from './Transpose_impl';\nexport function transpose(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    const webglBackend = backend;\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    let out;\n    if (webglBackend.shouldExecuteOnCPU([x])) {\n        const xTexData = webglBackend.texData.get(x.dataId);\n        const values = xTexData.values;\n        const outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n        out = webglBackend.makeTensorInfo(newShape, x.dtype);\n        const outData = webglBackend.texData.get(out.dataId);\n        outData.values = outValues;\n    }\n    else {\n        out = transposeImpl(x, perm, webglBackend);\n    }\n    return out;\n}\nexport const transposeConfig = {\n    kernelName: Transpose,\n    backendName: 'webgl',\n    kernelFunc: transpose\n};\n//# sourceMappingURL=Transpose.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SIN = CHECK_NAN_SNIPPET_UNARY + `\n  return sin(x);\n`;\nexport const sin = unaryKernelFunc({ opSnippet: SIN });\nexport const sinConfig = {\n    kernelName: Sin,\n    backendName: 'webgl',\n    kernelFunc: sin,\n};\n//# sourceMappingURL=Sin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Softmax, util } from '@tensorflow/tfjs-core';\nimport { exp } from './Exp';\nimport { max } from './Max';\nimport { realDiv } from './RealDiv';\nimport { reshape } from './Reshape';\nimport { sub } from './Sub';\nimport { sum } from './Sum';\nexport function softmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { dim } = attrs;\n    const axes = util.parseAxisParam([dim], logits.shape);\n    const maxLogit = max({\n        inputs: { x: logits },\n        backend,\n        attrs: { reductionIndices: axes, keepDims: false }\n    });\n    const expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n    const maxLogitsReshaped = reshape({ inputs: { x: maxLogit }, backend, attrs: { shape: expandedShape } });\n    const a = sub({ inputs: { a: logits, b: maxLogitsReshaped }, backend });\n    const b = exp({ inputs: { x: a }, backend });\n    const sumExp = sum({ inputs: { x: b }, backend, attrs: { axis: axes, keepDims: false } });\n    const sumExpReshaped = reshape({ inputs: { x: sumExp }, backend, attrs: { shape: expandedShape } });\n    const res = realDiv({ inputs: { a: b, b: sumExpReshaped }, backend });\n    backend.disposeIntermediateTensorInfo(maxLogit);\n    backend.disposeIntermediateTensorInfo(maxLogitsReshaped);\n    backend.disposeIntermediateTensorInfo(a);\n    backend.disposeIntermediateTensorInfo(b);\n    backend.disposeIntermediateTensorInfo(sumExp);\n    backend.disposeIntermediateTensorInfo(sumExpReshaped);\n    return res;\n}\nexport const softmaxConfig = {\n    kernelName: Softmax,\n    backendName: 'webgl',\n    kernelFunc: softmax\n};\n//# sourceMappingURL=Softmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const xRank = x.shape.length;\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const sliceSize = [...size];\n        sliceSize[$axis] = s;\n        const sliceT = slice({ inputs: { x }, backend, attrs: { begin, size: sliceSize } });\n        begin[$axis] += s;\n        return sliceT;\n    });\n}\nexport const splitVConfig = {\n    kernelName: SplitV,\n    backendName: 'webgl',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=SplitV.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SELU = `\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${backend_util.SELU_SCALEALPHA};\n  float scale = ${backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;\nexport const selu = unaryKernelFunc({ opSnippet: SELU });\nexport const seluConfig = {\n    kernelName: Selu,\n    backendName: 'webgl',\n    kernelFunc: selu,\n};\n//# sourceMappingURL=Selu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SOFTPLUS = `\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n`;\nexport const softplus = unaryKernelFunc({ opSnippet: SOFTPLUS });\nexport const softplusConfig = {\n    kernelName: Softplus,\n    backendName: 'webgl',\n    kernelFunc: softplus,\n};\n//# sourceMappingURL=Softplus.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinearGrad } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearBackpropProgram } from '../resize_bilinear_backprop_gpu';\nexport function resizeBilinearGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const program = new ResizeBilinearBackpropProgram(dy.shape, images.shape, alignCorners);\n    return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nexport const resizeBilinearGradConfig = {\n    kernelName: ResizeBilinearGrad,\n    backendName: 'webgl',\n    kernelFunc: resizeBilinearGrad\n};\n//# sourceMappingURL=ResizeBilinearGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { topKImplCPU } from '../kernel_utils/shared';\nexport function topK(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    const xVals = backend.readSync(x.dataId);\n    const [allTopKVals, allTopKIndices] = topKImplCPU(xVals, x.shape, x.dtype, k, sorted);\n    return [\n        backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n        backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n    ];\n}\nexport const topKConfig = {\n    kernelName: TopK,\n    backendName: 'webgl',\n    kernelFunc: topK\n};\n//# sourceMappingURL=TopK.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, Tile, util } from '@tensorflow/tfjs-core';\nimport { tileImplCPU } from '../kernel_utils/shared';\nimport { TileProgram } from '../tile_gpu';\nexport function tile(params) {\n    const { inputs, backend, attrs } = params;\n    const { x } = inputs;\n    const { reps } = attrs;\n    // tile gpu program cannot handle rank > 5 case.\n    if (x.dtype === 'string' || x.shape.length > 5) {\n        // Even thought string tensor is always on CPU, just to be consistent on how\n        // to access tensor data.\n        const data = backend.readSync(x.dataId);\n        const value = x.dtype === 'string' ?\n            data.map(d => util.decodeString(d)) :\n            data;\n        const buf = buffer(x.shape, x.dtype, value);\n        const outBuf = tileImplCPU(buf, reps);\n        return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n    }\n    const program = new TileProgram(x.shape, reps);\n    const output = backend.runWebGLProgram(program, [x], x.dtype);\n    return output;\n}\nexport const tileConfig = {\n    kernelName: Tile,\n    backendName: 'webgl',\n    kernelFunc: tile,\n};\n//# sourceMappingURL=Tile.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { prodImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n        toDispose.push(permutedX);\n    }\n    backend_util.assertAxesAreInnerMostDims('prod', axes, xRank);\n    let res;\n    if (backend.shouldExecuteOnCPU([permutedX])) {\n        const xVals = backend.texData.get(permutedX.dataId).values;\n        const { outVals, outShape, outDtype } = prodImplCPU(permutedX.shape, permutedX.dtype, xVals, axes);\n        res = backend.makeTensorInfo(outShape, outDtype, outVals);\n    }\n    else {\n        const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n        const inSize = util.sizeFromShape(reduceShape);\n        const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n        const outputDType = sumOutType(x.dtype);\n        const reduced = reduce(a2D, outputDType, 'prod', backend);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n        toDispose.push(a2D);\n        toDispose.push(reduced);\n    }\n    if (keepDims) {\n        toDispose.push(res);\n        const newShape = backend_util.expandShapeToKeepDim(res.shape, origAxes);\n        res = reshape({ inputs: { x: res }, backend, attrs: { shape: newShape } });\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nexport const prodConfig = {\n    kernelName: Prod,\n    backendName: 'webgl',\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function sparseToDense(args) {\n    const { inputs, backend, attrs } = args;\n    const { sparseIndices, sparseValues, defaultValue } = inputs;\n    const { outputShape } = attrs;\n    const { sliceRank, numUpdates, strides, outputSize } = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    const program = new ScatterProgram(numUpdates, sliceRank, sparseIndices.shape.length, sparseValues.shape.length, strides, [outputSize, 1], sumDupeIndices);\n    const res = backend.runWebGLProgram(program, [sparseValues, sparseIndices, defaultValue], sparseValues.dtype);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: outputShape } });\n    backend.disposeIntermediateTensorInfo(res);\n    return reshaped;\n}\nexport const sparseToDenseConfig = {\n    kernelName: SparseToDense,\n    backendName: 'webgl',\n    kernelFunc: sparseToDense\n};\n//# sourceMappingURL=SparseToDense.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst ROUND = `\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n`;\nexport const round = unaryKernelFunc({ opSnippet: ROUND });\nexport const roundConfig = {\n    kernelName: Round,\n    backendName: 'webgl',\n    kernelFunc: round,\n};\n//# sourceMappingURL=Round.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst TANH = `\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n`;\nexport const tanh = unaryKernelFunc({ opSnippet: TANH });\nexport const tanhConfig = {\n    kernelName: Tanh,\n    backendName: 'webgl',\n    kernelFunc: tanh,\n};\n//# sourceMappingURL=Tanh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Reverse, util } from '@tensorflow/tfjs-core';\nimport { ReverseProgram } from '../reverse_gpu';\nimport { ReversePackedProgram } from '../reverse_packed_gpu';\nimport { identity } from './Identity';\nexport function reverse(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dims } = attrs;\n    const xRank = x.shape.length;\n    const $dims = util.parseAxisParam(dims, x.shape);\n    if (xRank === 0) {\n        return identity({ inputs: { x }, backend });\n    }\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new ReversePackedProgram(x.shape, $dims) :\n        new ReverseProgram(x.shape, $dims);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const reverseConfig = {\n    kernelName: Reverse,\n    backendName: 'webgl',\n    kernelFunc: reverse\n};\n//# sourceMappingURL=Reverse.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nimport { packedReshape } from '../kernel_utils/reshape';\nimport { isReshapeFree } from '../webgl_util';\nexport function reshape(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const webglBackend = backend;\n    const xSize = util.sizeFromShape(x.shape);\n    const $shape = util.inferFromImplicitShape(shape, xSize);\n    const $xSize = util.sizeFromShape($shape);\n    util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n        `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n        `shape must have the same number of elements.`);\n    const xTexData = webglBackend.texData.get(x.dataId);\n    if (xTexData.isPacked && !isReshapeFree(x.shape, $shape) &&\n        !(xTexData.texture !== null && isReshapeFree(xTexData.shape, $shape))) {\n        return packedReshape(x, $shape, webglBackend);\n    }\n    webglBackend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nexport const reshapeConfig = {\n    kernelName: Reshape,\n    backendName: 'webgl',\n    kernelFunc: reshape\n};\n//# sourceMappingURL=Reshape.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { transposeImplCPU } from '../kernel_utils/shared';\nimport { TransposeProgram } from '../transpose_gpu';\nimport { TransposePackedProgram } from '../transpose_packed_gpu';\nexport function transposeImpl(x, perm, backend) {\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new TransposePackedProgram(x.shape, perm) :\n        new TransposeProgram(x.shape, perm);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport { transposeImplCPU };\n//# sourceMappingURL=Transpose_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighborGrad } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeigborBackpropProgram } from '../resize_nearest_neighbor_backprop_gpu';\nexport function resizeNearestNeighborGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const program = new ResizeNearestNeigborBackpropProgram(dy.shape, images.shape, alignCorners);\n    return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nexport const resizeNearestNeighborGradConfig = {\n    kernelName: ResizeNearestNeighborGrad,\n    backendName: 'webgl',\n    kernelFunc: resizeNearestNeighborGrad\n};\n//# sourceMappingURL=ResizeNearestNeighborGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step({ inputs, attrs, backend }) {\n    const { x } = inputs;\n    const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n    const program = new UnaryOpProgram(x.shape, opSnippet);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const stepConfig = {\n    kernelName: Step,\n    backendName: 'webgl',\n    kernelFunc: step,\n};\n//# sourceMappingURL=Step.js.map"],"names":["resizeBilinearConfig","kernelName","ResizeBilinear","backendName","kernelFunc","args","inputs","backend","attrs","images","alignCorners","halfPixelCenters","size","newHeight","newWidth","program","env","getBool","shape","runWebGLProgram","real","input","inputData","texData","get","dataId","x","complexTensorInfos","realConfig","Real","realDiv","opSnippet","packedOpSnippet","checkOutOfBounds","realDivConfig","RealDiv","stridedSliceConfig","StridedSlice","begin","end","strides","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","nonStrided","$begin","$strides","newShape","outShape","slice_util","$x","result","sliced","disposeIntermediateTensorInfo","some","axis","makeTensorInfo","dtype","shouldExecuteOnCPU","values","xBuf","buffer","resultValues","resultReshaped","sqrt","sqrtConfig","Sqrt","square","squareConfig","Square","RELU6","relu6","relu6Config","Relu6","PRELU","PRELU_PACKED","preluConfig","Prelu","alpha","sum","keepDims","reductionIndices","xRank","length","origAxes","util","axes","permutedAxes","backend_util","sumInputIsTransposed","sumInput","sumOutShape","reduceShape","inSize","batchSize","reshapedInput","outType","sumOutType","reduced","reduce","out","sumImpl","sumConfig","Sum","sigmoid","sigmoidConfig","Sigmoid","rotateWithOffsetConfig","RotateWithOffset","image","radians","fillValue","center","webglBackend","centerX","centerY","customSetup","getCustomSetupFunc","Math","sin","cos","sparseReshapeConfig","SparseReshape","inputIndices","inputShape","Error","$inputShape","Array","from","readSync","$inputIndices","targetShape","newIndices","indicesShape","outputShape","Int32Array","uniqueConfig","Unique","outputValues","indices","slice","$size","xTexData","outValues","isPacked","isContinous","uploadToGPU","t","newTexData","Object","assign","refCount","flatOffset","origDataId","dataRefCount","set","shallowSlice","sliceConfig","Slice","zerosLike","realPart","r","imagPart","i","imag","value","zerosLikeConfig","ZerosLike","transformConfig","Transform","transforms","interpolation","fillMode","batch","imageHeight","imageWidth","numChannels","outHeight","outWidth","rsqrt","cpuKernelImpl","rsqrtConfig","Rsqrt","RELU","relu","reluConfig","Relu","SUB","sub","supportsComplex","subConfig","Sub","range","start","stop","step","rangeConfig","Range","unpackConfig","Unpack","num","outIndex","toDispose","fill","res","reshaped","push","forEach","resizeNearestNeighborConfig","ResizeNearestNeighbor","sign","signConfig","Sign","tan","tanConfig","Tan","_fusedMatMulConfig","_FusedMatMul","a","b","bias","preluActivationWeights","transposeA","transposeB","activation","leakyreluAlpha","POW_PACKED","pow","powConfig","Pow","sparseFillEmptyRowsConfig","SparseFillEmptyRows","denseShape","defaultValue","$indices","$values","$denseShape","$defaultValue","outputIndices","outputIndicesShape","emptyRowIndicator","reverseIndexMap","Uint8Array","map","Number","sinh","sinhConfig","Sinh","reciprocal","reciprocalConfig","Reciprocal","unsortedSegmentSumConfig","UnsortedSegmentSum","segmentIds","numSegments","permutation","permutedX","perm","a2D","outputDType","segOpCompute","segOpType","windowSize","segOpInfo","output","compileAndRun","rangeInfo","tileInfo","reps","segOpResult","spaceToBatchNDConfig","SpaceToBatchND","blockShape","paddings","prod","completePaddings","paddedX","constantValue","reshapedPaddedShape","permutedReshapedPaddedPermutation","flattenShape","reshapedPaddedX","paddedXT","selectConfig","Select","condition","e","upcastType","SQUARED_DIFFERENCE","squaredDifference","squaredDifferenceConfig","SquaredDifference","scatterNdConfig","ScatterNd","updates","sliceRank","numUpdates","sliceSize","outputSize","flattenIndices","flattenX","Float32Array","transpose","transposeConfig","Transpose","SIN","sinConfig","Sin","softmax","logits","dim","maxLogit","expandedShape","maxLogitsReshaped","sumExp","sumExpReshaped","softmaxConfig","Softmax","splitVConfig","SplitV","numOrSizeSplits","$axis","splitSizes","s","sliceT","SELU","selu","seluConfig","Selu","softplus","softplusConfig","Softplus","resizeBilinearGradConfig","ResizeBilinearGrad","dy","topKConfig","TopK","k","sorted","xVals","allTopKVals","allTopKIndices","tile","params","data","d","buf","outBuf","tileConfig","Tile","prodConfig","Prod","outVals","outDtype","sparseToDenseConfig","SparseToDense","sparseIndices","sparseValues","round","roundConfig","Round","tanh","tanhConfig","Tanh","reverseConfig","Reverse","dims","$dims","reshape","xSize","$shape","$xSize","texture","incRef","p","reshapeConfig","Reshape","transposeImpl","resizeNearestNeighborGradConfig","ResizeNearestNeighborGrad","stepConfig","Step"],"sourceRoot":""}