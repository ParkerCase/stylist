"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[4275],{4652:function(t,e,n){n.d(e,{x:function(){return r}});var a=n(9495),i=n(97870);const r={kernelName:a.EluGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:o}=e;(0,i.C)([r,o],"eluGrad");const u=new Float32Array(a.util.sizeFromShape(o.shape)),s=n.data.get(o.dataId).values,d=n.data.get(r.dataId).values;for(let a=0;a<s.length;++a){const t=s[a];u[a]=t>=0?d[a]:d[a]*(t+1)}return n.makeTensorInfo(o.shape,"float32",u)}}},19910:function(t,e,n){n.d(e,{b:function(){return i}});var a=n(9495);const i={kernelName:a.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:i,filter:r,dy:o}=t,{strides:u,pad:s,dilations:d}=n,l=e,c=a.util.toNestedArray(i.shape,l.data.get(i.dataId).values),p=a.util.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:h,inHeight:f,inWidth:k,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:N,strideWidth:v,filterHeight:E,filterWidth:I,dilationHeight:F,dilationWidth:x,outShape:D}=a.backend_util.computeDilation2DInfo(i.shape,r.shape,u,s,"NHWC",d);a.util.assert(o.rank===D.length,(()=>`Error in ${a.Dilation2DBackpropInput}, dy must have the same rank as output ${D.length}, but got ${o.rank}`));const _=a.util.toNestedArray(D,l.data.get(o.dataId).values),A=a.util.makeZerosNestedTypedArray(i.shape,i.dtype);for(let a=0;a<h;++a)for(let t=0;t<b;++t){const e=t*N-y.top;for(let n=0;n<g;++n){const i=n*v-y.left;for(let r=0;r<m;++r){let o=Number.MIN_SAFE_INTEGER,u=e<0?0:e,s=i<0?0:i;for(let t=0;t<E;++t){const n=e+t*F;if(n>=0&&n<f)for(let e=0;e<I;++e){const d=i+e*x;if(d>=0&&d<k){const i=c[a][n][d][r]+p[t][e][r];i>o&&(o=i,u=n,s=d)}}}A[a][u][s][r]+=_[a][t][n][r]}}}return{dataId:l.write(a.util.toTypedArray(A,i.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}}},24856:function(t,e,n){n.d(e,{J:function(){return r},P:function(){return i}});var a=n(9495);const i=(0,n(21694).v)(a.Elu,(t=>t>=0?t:Math.exp(t)-1)),r={kernelName:a.Elu,backendName:"cpu",kernelFunc:i}},25242:function(t,e,n){n.d(e,{N:function(){return i}});var a=n(9495);const i={kernelName:a.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:i,filter:r,dy:o}=t,{strides:u,pad:s,dilations:d}=n,l=e,c=a.util.toNestedArray(i.shape,l.data.get(i.dataId).values),p=a.util.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:h,inHeight:f,inWidth:k,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:N,strideWidth:v,filterHeight:E,filterWidth:I,dilationHeight:F,dilationWidth:x,outShape:D}=a.backend_util.computeDilation2DInfo(i.shape,r.shape,u,s,"NHWC",d);a.util.assert(o.rank===D.length,(()=>`Error in ${a.Dilation2DBackpropFilter}, dy must have the same rank as output ${D.length}, but got ${o.rank}`));const _=a.util.toNestedArray(D,l.data.get(o.dataId).values),A=a.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let a=0;a<h;++a)for(let t=0;t<b;++t){const e=t*N-y.top;for(let n=0;n<g;++n){const i=n*v-y.left;for(let r=0;r<m;++r){let o=Number.MIN_SAFE_INTEGER,u=0,s=0;for(let t=0;t<E;++t){const n=e+t*F;if(n>=0&&n<f)for(let e=0;e<I;++e){const d=i+e*x;if(d>=0&&d<k){const i=c[a][n][d][r]+p[t][e][r];i>o&&(o=i,u=t,s=e)}}}A[u][s][r]+=_[a][t][n][r]}}}return{dataId:l.write(a.util.toTypedArray(A,i.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}}},26789:function(t,e,n){n.d(e,{Yp:function(){return s},uM:function(){return o}});var a=n(9495),i=n(45705),r=n(21694);const o=(0,i.o)((t=>Math.expm1(t))),u=(0,r.F)(a.Expm1,o),s={kernelName:a.Expm1,backendName:"cpu",kernelFunc:u}},36085:function(t,e,n){n.d(e,{U:function(){return r},a:function(){return o}});var a=n(9495),i=n(14590);function r(t){const{inputs:e,backend:n,attrs:r}=t,{input:o}=e,{dim:u}=r,s=o.shape.length,d=o.shape.slice();let l=u;return u<0&&(a.util.assert(-(s+1)<=u,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),l=s+u+1),d.splice(l,0,1),(0,i.t)({inputs:{x:o},backend:n,attrs:{shape:d}})}const o={kernelName:a.ExpandDims,backendName:"cpu",kernelFunc:r}},36813:function(t,e,n){n.d(e,{_:function(){return s}});var a=n(9495),i=n(65646),r=n(14590),o=n(25231),u=n(85655);const s={kernelName:a.Einsum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{equation:d}=s,l=e,{allDims:c,summedDims:p,idDims:h}=a.backend_util.decodeEinsumEquation(d,l.length);a.backend_util.checkEinsumDimSizes(c.length,h,l);const{path:f,steps:k}=a.backend_util.getEinsumComputePath(p,h),m=k.length;let b=null,g=c.length;const y=[];for(let N=0;N<m;++N){for(const t of k[N]){const{permutationIndices:e,expandDims:o}=a.backend_util.getEinsumPermutation(g,h[t]);let s;a.backend_util.isIdentityPermutation(e)?s=l[t]:(s=(0,u.m)({inputs:{x:l[t]},backend:n,attrs:{perm:e}}),y.push(s));const d=s.shape.slice();for(let t=0;t<o.length;++t)d.splice(o[t],0,1);a.util.arraysEqual(s.shape,d)||(s=(0,r.t)({inputs:{x:s},backend:n,attrs:{shape:d}}),y.push(s)),null===b?b=s:(b=(0,i.lw)({inputs:{a:s,b:b},backend:n}),y.push(b))}N<m-1&&(f[N]>=0&&(b=(0,o.c)({inputs:{x:b},backend:n,attrs:{axis:f[N]-(c.length-g),keepDims:!1}}),y.push(b)),g--)}for(const a of y)a!==b&&n.disposeIntermediateTensorInfo(a);return b}}},38168:function(t,e,n){n.d(e,{b:function(){return a}});const a={kernelName:n(9495).Draw,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:i}=e,{canvas:r,options:o}=a,{contextOptions:u,imageOptions:s}=o||{},d=(null===s||void 0===s?void 0:s.alpha)||1,l=(null===u||void 0===u?void 0:u.contextType)||"2d";if("2d"!==l)throw new Error(`Context type ${u.contextType} is not supported by the CPU backend.`);const c=r.getContext(l,(null===u||void 0===u?void 0:u.contextAttributes)||{});if(null==c)throw new Error(`Could not get the context with ${l} type.`);const[p,h]=i.shape.slice(0,2),f=2===i.shape.length?1:i.shape[2],k=n.data.get(i.dataId).values,m="float32"===i.dtype?255:1,b=new Uint8ClampedArray(h*p*4);for(let y=0;y<p*h;++y){const t=[0,0,0,255*d];for(let n=0;n<f;n++){const e=k[y*f+n];if("float32"===i.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===i.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===f?(t[0]=e*m,t[1]=e*m,t[2]=e*m):t[n]=e*m}const e=4*y;b[e+0]=Math.round(t[0]),b[e+1]=Math.round(t[1]),b[e+2]=Math.round(t[2]),b[e+3]=Math.round(t[3])}r.width=h,r.height=p;const g=new ImageData(b,h,p);return c.putImageData(g,0,0),i}}},52999:function(t,e,n){n.d(e,{_:function(){return p}});var a=n(9495),i=n(21694);const r=a.backend_util.ERF_P,o=a.backend_util.ERF_A1,u=a.backend_util.ERF_A2,s=a.backend_util.ERF_A3,d=a.backend_util.ERF_A4,l=a.backend_util.ERF_A5,c=(0,i.v)(a.Erf,(t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+r*n);return e*(1-((((l*a+d)*a+s)*a+u)*a+o)*a*Math.exp(-n*n))})),p={kernelName:a.Erf,backendName:"cpu",kernelFunc:c}},66423:function(t,e,n){n.d(e,{AC:function(){return s},oN:function(){return u},sG:function(){return o}});var a=n(9495),i=n(45705),r=n(21694);const o=(0,i.o)((t=>Math.exp(t))),u=(0,r.F)(a.Exp,o,"float32"),s={kernelName:a.Exp,backendName:"cpu",kernelFunc:u}},69034:function(t,e,n){n.d(e,{F:function(){return i}});var a=n(9495);const i={kernelName:a.Dilation2D,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:i,filter:r}=t,{strides:o,pad:u,dilations:s}=n,d=e,l=d.data.get(i.dataId).values,c=i.shape.length,p=d.data.get(r.dataId).values,h=r.shape.length,{batchSize:f,inHeight:k,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:N,strideHeight:v,strideWidth:E,filterHeight:I,filterWidth:F,dilationHeight:x,dilationWidth:D,outShape:_}=a.backend_util.computeDilation2DInfo(i.shape,r.shape,o,u,"NHWC",s),A=a.util.sizeFromShape(_),T=_.length,w=a.util.getArrayFromDType(i.dtype,A);for(let W=0;W<f;++W)for(let t=0;t<g;++t){const e=t*v-N.top;for(let n=0;n<y;++n){const o=n*E-N.left;for(let u=0;u<b;++u){let s=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const n=e+t*x;if(n>=0&&n<k)for(let e=0;e<F;++e){const d=o+e*D;if(d>=0&&d<m){const o=a.util.locToIndex([W,n,d,u],c,a.util.computeStrides(i.shape)),f=a.util.locToIndex([t,e,u],h,a.util.computeStrides(r.shape)),k=l[o]+p[f];k>s&&(s=k)}}}w[a.util.locToIndex([W,t,n,u],T,a.util.computeStrides(_))]=s}}}return{dataId:d.write(a.util.toTypedArray(w,i.dtype),_,i.dtype),shape:_,dtype:i.dtype}}}},94505:function(t,e,n){n.d(e,{O:function(){return i}});var a=n(9495);const i={kernelName:a.Diag,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:i}=e,r=a.util.sizeFromShape(i.shape),o=n.data.get(i.dataId).values,u=(0,a.buffer)([r,r],i.dtype),s=u.values;for(let a=0;a<o.length;a++)s[a*r+a]=o[a];const d=[...i.shape,...i.shape];return n.makeTensorInfo(d,u.dtype,u.values)}}},99292:function(t,e,n){n.d(e,{LC:function(){return u},RY:function(){return s},z3:function(){return o}});var a=n(9495),i=n(8195),r=n(98880);const o=(0,i.Z)(((t,e)=>t===e?1:0)),u=(0,r.j)(a.Equal,o,null,"bool"),s={kernelName:a.Equal,backendName:"cpu",kernelFunc:u}}}]);
//# sourceMappingURL=stylist-vendors-9266cd64.563d4e17e5123ede9485.js.map