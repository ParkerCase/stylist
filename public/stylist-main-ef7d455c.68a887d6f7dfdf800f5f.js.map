{"version":3,"file":"stylist-main-ef7d455c.68a887d6f7dfdf800f5f.js","mappings":"cAAA,SAA2CA,EAAMC,GAC1B,kBAAZC,SAA0C,kBAAXC,OACxCA,OAAOD,QAAUD,IACQ,oBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,kBAAZC,QACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,GACzB,CATD,CASGK,MAAM,WACT,O,sLCJA,MAAMC,EAAmB,CACrBC,iCAAkC,KAAwBC,WAC1DC,+BAA+B,EAC/BC,gBAAgB,EAChBC,sBAAsB,EACtBC,oBAAqB,CACjB,CAAC,KAAYC,KAAM,GACnB,CAAC,KAAYC,QAAS,GACtB,CAAC,KAAYC,OAAQ,GACrB,CAAC,KAAYC,WAAY,IACzB,CAAC,KAAYC,OAAQ,GACrB,CAAC,KAAYC,WAAY,IAE7BC,qBAAsB,CAClB,CAAC,KAAYN,KAAM,CAAEO,EAAG,EAAGC,GAAI,IAC/B,CAAC,KAAYP,QAAS,CAAEM,EAAG,EAAGC,EAAG,KACjC,CAAC,KAAYN,OAAQ,CAAEK,EAAG,EAAGC,EAAG,GAChC,CAAC,KAAYL,WAAY,CAAEI,EAAG,EAAGC,GAAI,IACrC,CAAC,KAAYJ,OAAQ,CAAEG,EAAG,EAAGC,EAAG,KAChC,CAAC,KAAYH,WAAY,CAAEE,EAAG,EAAGC,GAAI,OAGhCC,GAAgB,WAAS,SAAS,SAAQ,CAACC,EAAKC,KAAQ,CAEjEC,cAAe,KACfC,UAAW,KACXC,WAAW,EACXC,MAAO,KAEPC,SAAUvB,EAEVwB,aAAc,GAEdC,YAAa,IACbC,aAAc,IAEdC,kBAAkB,EAClBC,mBAAmB,EAEnBC,iBAAmBC,IACfb,EAAI,CAAEE,cAAeW,GAAS,EAElCC,mBAAqBC,IACjB,MAAM,cAAEb,GAAkBD,IAC1B,GAAKC,EASA,CAED,MAAMc,EAAmBd,EAAce,SAASC,QAAQC,KAAQA,EAAEC,OAASL,EAAQK,MAAQD,EAAEE,eAAiBN,EAAQM,gBAEtHrB,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB,CAAEe,SAAU,IAAID,EAAkBD,MAEzG,KAhBoB,CAEhB,MAAMS,EAAY,CACdC,GAAI,UAAUC,KAAKC,QACnBV,SAAU,CAACF,GACXa,UAAW,IAAIF,MAEnB1B,EAAI,CAAEE,cAAesB,GACzB,CAQA,EAEJK,wBAA0BC,IACtB,MAAM,cAAE5B,GAAkBD,IAC1B,GAAIC,EAAe,CACf,MAAM6B,EAAkB7B,EAAce,SAASC,QAAQC,GAAMA,EAAEM,KAAOK,IACtE9B,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB,CAAEe,SAAUc,KAEnF,GAEJC,cAAe,CAACF,EAAWG,KACvB,MAAM,cAAE/B,GAAkBD,IAC1B,GAAIC,EAAe,CACf,MAAM6B,EAAkB7B,EAAce,SAASiB,KAAKf,GAAMA,EAAEM,KAAOK,EAAYR,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGJ,GAAIc,GAAWd,IAC9HnB,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB,CAAEe,SAAUc,KAEnF,GAEJI,aAAeC,IACXpC,EAAI,CAAEG,UAAWiC,IAEjB,MAAM,cAAElC,GAAkBD,IAC1B,GAAIC,EAAe,CAEf,MAAMmC,EAAqBD,EAC3BpC,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB,CAAEC,UAAWkC,KAEpF,GAEJC,gBAAkBL,IACd,MAAM,UAAE9B,GAAcF,IACtB,GAAIE,EAAW,CACX,MAAMoC,EAAejB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGpB,GAAY8B,GACjEjC,EAAI,CAAEG,UAAWoC,IAEjB,MAAM,cAAErC,GAAkBD,IACtBC,GACAF,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB,CAAEC,UAAWoC,KAGxF,GAEJC,eAAgB,KACZxC,EAAI,CAAEG,UAAW,OAEjB,MAAM,cAAED,GAAkBD,IAC1B,GAAIC,EAAe,CAEf,MAAMuC,EAAgBnB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB,CAAEC,eAAWuC,IACnF1C,EAAI,CAAEE,cAAeuC,GACzB,GAEJE,aAAeV,IACX,MAAM,cAAE/B,GAAkBD,IACtBC,GACAF,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGrB,GAAgB+B,IAEvE,EAEJW,YAActC,IACVN,EAAI,CACAM,SAAUgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtB,IAAMK,UAAWA,IAC7D,EAENuC,WAAazC,IACTJ,EAAI,CAAEI,aAAY,EAEtB0C,SAAWzC,IACPL,EAAI,CAAEK,SAAQ,EAElB0C,WAAaC,IACT,MAAMC,EAAU,IAAIhD,IAAMM,cAEpB2C,EAAgBD,EAAQE,WAAWC,GAAMA,EAAE3B,KAAOuB,EAAOvB,KAC3DyB,GAAiB,EAEjBD,EAAQC,GAAiBF,EAIzBC,EAAQI,KAAKL,GAEjBhD,EAAI,CAAEO,aAAc0C,GAAU,EAElCK,kBAAoBC,IAChB,MAAMC,EAAkBvD,IAAMM,aAAaW,QAAQkC,GAAMA,EAAE3B,KAAO8B,IAClEvD,EAAI,CAAEO,aAAciD,GAAkB,EAE1CC,oBAAqB,CAACC,EAAOC,KACzB3D,EAAI,CAAEQ,YAAakD,EAAOjD,aAAckD,GAAS,EAErDC,eAAgB,KACZ5D,EAAI,CAAEU,kBAAkB,GAAO,EAEnCmD,gBAAiB,KACb7D,EAAI,CAAEU,kBAAkB,GAAQ,EAEpCoD,gBAAiB,KACb9D,EAAI,CAAEW,mBAAmB,GAAO,EAEpCoD,iBAAkB,KACd/D,EAAI,CAAEW,mBAAmB,GAAQ,EAErCqD,MAAO,KACHhE,EAAI,CACAE,cAAe,KACfC,UAAW,KACXC,WAAW,EACXC,MAAO,MACT,EAGN4D,cAAe,CAACC,EAAcC,KAC1B,MAAM,SAAE7D,GAAaL,IAGfY,EAFQZ,IAEOC,eAAiB,CAClCuB,GAAI2C,OAAOC,aACXpD,SAAU,GACVW,UAAW,IAAIF,MAGb4C,EAAa,CACf7C,GAAI2C,OAAOC,aACXjD,KAAM+C,EACNI,IAA6B,kBAAjBL,EAA4BA,EAAeM,IAAIC,gBAAgBP,GAC3E7C,cAAc,QAAuB8C,GACrCO,OAAQ7D,EAAOI,SAAS0D,OAAS,EACjCC,WAAY/D,EAAOI,SAAS0D,OAC5BE,MAAOvE,EAASjB,oBAAoB8E,IAAgB,EACpDW,OAAQxE,EAASV,qBAAqBuE,IAAgB,CAAEtE,EAAG,EAAGC,EAAG,GACjEiF,SAAU,EACVC,mBAAmB,GAGjBjD,EAAkB,IAAKlB,EAAOI,UAAY,GAAKqD,GACrDtE,EAAI,CACAE,cAAeoB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGV,GAAS,CAAEI,SAAUc,KACtE,EAENkD,YAAcpE,IACVb,EAAI,CAAEE,cAAeW,GAAS,KAElC,CACAqE,KAAM,yBAENC,WAAaC,IAAU,CACnB9E,SAAU8E,EAAM9E,SAChBC,aAAc6E,EAAM7E,iBAExB,CAAE2E,KAAM,iB,gIC5NZ,MAAMG,EAAa,CACfC,KAAM,OACNC,QAAS,UACTC,QAAS,UACT/F,UAAW,YACXgG,YAAa,cACbC,SAAU,WACVC,KAAM,OACNC,QAAS,WAGPC,EAAS,CACX,CAAEX,KAAM,QAASY,IAAK,WACtB,CAAEZ,KAAM,QAASY,IAAK,WACtB,CAAEZ,KAAM,OAAQY,IAAK,WACrB,CAAEZ,KAAM,OAAQY,IAAK,WACrB,CAAEZ,KAAM,QAASY,IAAK,WACtB,CAAEZ,KAAM,QAASY,IAAK,WACtB,CAAEZ,KAAM,MAAOY,IAAK,WACpB,CAAEZ,KAAM,SAAUY,IAAK,WACvB,CAAEZ,KAAM,OAAQY,IAAK,WACrB,CAAEZ,KAAM,SAAUY,IAAK,WACvB,CAAEZ,KAAM,OAAQY,IAAK,WACrB,CAAEZ,KAAM,aAAcY,IAAK,WAC3B,CAAEZ,KAAM,QAASY,IAAK,WACtB,CAAEZ,KAAM,QAASY,IAAK,WACtB,CAAEZ,KAAM,SAAUY,IAAK,WACvB,CAAEZ,KAAM,SAAUY,IAAK,WACvB,CAAEZ,KAAM,OAAQY,IAAK,WACrB,CAAEZ,KAAM,OAAQY,IAAK,YAGnBC,EAAQ,CACVC,aAAc,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,OAC1CC,YAAa,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,OACzCC,cAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACpGC,cAAe,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MACvEX,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MACrDY,SAAU,CAAC,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,KAAM,KAAM,OAGjFC,EAAW,CACb,QAAS,UAAW,UAAW,QAAS,SAAU,YAClD,YAAa,eAAgB,WAAY,aAAc,UACvD,cAAe,cAAe,UAAW,UAEvCC,EAAY,CACd,SAAU,YAAa,QAAS,OAAQ,UAAW,OACnD,WAAY,QAAS,QAAS,SAAU,QAAS,QACjD,UAAW,SAAU,QAAS,QAAS,YAGrCC,EAAS,CACX,YAAa,aAAc,UAAW,mBAAoB,gBAC1D,gBAAiB,iBAAkB,YAAa,iBAAkB,gBAClE,eAAgB,iBAAkB,gBAAiB,cAAe,qBAClE,gBAAiB,eAAgB,kBAAmB,qBAAsB,kBAGxEC,EAAY,CACd,WAAY,eAAgB,kBAAmB,cAAe,gBAG5DC,EAAe,CACjBC,OAAQ,CAAEC,IAAK,MAAOC,IAAK,OAC3BC,SAAU,CAAEF,IAAK,MAAOC,IAAK,QAC7BE,QAAS,CAAEH,IAAK,OAAQC,IAAK,QAC7BG,OAAQ,CAAEJ,IAAK,OAAQC,IAAK,UAqB1BI,EAAuB,CAACC,EAAUC,KACpC,MAgBMC,EAAkB,CACpB,CAAC9B,EAAWC,MAAO,CACf,yCACA,kBACA,4BACA,iBAEJ,CAACD,EAAWE,SAAU,CAClB,oCACA,wBACA,4BACA,kBAEJ,CAACF,EAAWG,SAAU,CAClB,wBACA,0BACA,kBACA,0BAEJ,CAACH,EAAW5F,WAAY,CACpB,8BACA,2BACA,6CACA,uBAEJ,CAAC4F,EAAWI,aAAc,CACtB,2BACA,uBACA,qBACA,6BAEJ,CAACJ,EAAWK,UAAW,CACnB,+BACA,2BACA,iCACA,qBAEJ,CAACL,EAAWM,MAAO,CACf,4BACA,oBACA,6BACA,wBAEJ,CAACN,EAAWO,SAAU,CAClB,6BACA,4BACA,iCACA,sBAIFwB,EAAoB,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UAExCC,EADkB,CAnEpB,6BACA,4BACA,uBACA,sCACA,gBACA,4CACA,sCACA,sCACA,uCACA,gCACA,iCACA,yBACA,+BACA,0BAsDoCC,MAAK,IAAM,GAAMJ,KAAKE,WACtBG,MAAM,EAAGN,GAE3CO,EAAkBR,EAAgBF,IAAa,GAC/CW,EAAqBP,KAAKV,IAAI,EAAIU,KAAKC,MAAsB,EAAhBD,KAAKE,UAAeI,EAAgBhD,QAIjFkD,EAAU,IAAIL,KAHK,IAAIG,GAAiBF,MAAK,IAAM,GAAMJ,KAAKE,WAC1BG,MAAM,EAAGE,IASnD,OANIV,EAAQ,GACRW,EAAQC,QAAQ,gCAEXZ,EAAQ,KACbW,EAAQC,QAAQ,8BAEbD,CAAO,EAGZE,EAAcC,GACT,GAAGA,KAAUX,KAAKE,SAASU,SAAS,IAAIC,UAAU,EAAG,MAoE1DC,EAAiB,CAAClB,EAAUxF,KAG9B,MAGM2G,EAAO,GACPC,EAAU,4CAHKpB,EAASqB,cAAcC,QAAQ,OAAQ,QAGT9G,EAAG+G,MAAM,KAAK,KAUjE,OATAJ,EAAK/E,KAAKgF,GAENhB,KAAKE,SAAW,KAChBa,EAAK/E,KAAK,GAAGgF,WACbD,EAAK/E,KAAK,GAAGgF,UACThB,KAAKE,SAAW,IAChBa,EAAK/E,KAAK,GAAGgF,aAGdD,CAAI,EAGTK,EAAqB,CAAChH,EAAIiH,EAAYxD,IAEjC,4BAA4BwD,cADtBxD,EAAKoD,cAAcC,QAAQ,cAAe,QACW9G,IAGhEkH,EAAmB1B,IACrB,MAAM2B,EAAkB3B,GAAY3F,OAAOuH,OAAOxD,GAAYgC,KAAKC,MAAMD,KAAKE,SAAWjG,OAAOuH,OAAOxD,GAAYV,SAC7GlD,EAAKsG,EAAW,QAChBe,EAAQvC,EAAOc,KAAKC,MAAMD,KAAKE,SAAWhB,EAAO5B,SACjDO,EA9FkB,CAAC+B,IACzB,MAAM8B,EAAa,CACf,UAAW,SAAU,OAAQ,UAAW,UAAW,eACnD,YAAa,UAAW,YAAa,SAAU,WAAY,SAC3D,SAAU,UAAW,SAAU,WAAY,UAAW,gBAEpDC,EAAgB,CAClB,CAAC3D,EAAWC,MAAO,CACf,UAAW,oBAAqB,SAAU,UAAW,WACrD,WAAY,aAAc,aAAc,QAAS,WACjD,SAAU,aAAc,SAAU,aAAc,YAEpD,CAACD,EAAWE,SAAU,CAClB,QAAS,WAAY,QAAS,SAAU,QAAS,SACjD,WAAY,UAAW,cAAe,WAAY,cAClD,SAAU,gBAAiB,SAAU,YAEzC,CAACF,EAAWG,SAAU,CAClB,aAAc,aAAc,cAAe,aAAc,eACzD,gBAAiB,aAAc,cAAe,iBAAkB,WAChE,gBAAiB,eAAgB,eAAgB,sBAAuB,eAE5E,CAACH,EAAW5F,WAAY,CACpB,SAAU,OAAQ,SAAU,cAAe,QAAS,cACpD,UAAW,WAAY,eAAgB,iBAAkB,gBACzD,gBAAiB,WAAY,cAAe,iBAEhD,CAAC4F,EAAWI,aAAc,CACtB,QAAS,MAAO,OAAQ,SAAU,aAAc,MAAO,WACvD,QAAS,SAAU,YAAa,SAAU,QAAS,SACnD,UAAW,cAEf,CAACJ,EAAWK,UAAW,CACnB,WAAY,QAAS,UAAW,UAAW,QAAS,QACpD,eAAgB,cAAe,cAAe,QAAS,QACvD,WAAY,iBAAkB,SAAU,cAE5C,CAACL,EAAWM,MAAO,CACf,WAAY,gBAAiB,WAAY,UAAW,SACpD,eAAgB,SAAU,gBAAiB,gBAAiB,UAC5D,aAAc,WAAY,YAAa,aAAc,YAEzD,CAACN,EAAWO,SAAU,CAClB,WAAY,WAAY,WAAY,OAAQ,UAAW,SACvD,SAAU,YAAa,QAAS,QAAS,SAAU,SACnD,gBAAiB,gBAAiB,uBAGpCqD,EAAc,CAChB,cAAe,qBAAsB,cAAe,kBACpD,cAAe,eAAgB,eAAgB,YAAa,cAC5D,UAAW,WAAY,UAAW,YAAa,UAAW,aAC1D,eAAgB,UAAW,YAAa,SAAU,WAAY,eAE5DC,EAAkBH,EAAW1B,KAAKC,MAAMD,KAAKE,SAAWwB,EAAWpE,SACnEwE,EAAQH,EAAc/B,IAAa,CAAC,QAO1C,MAAO,GAAGiC,KANSC,EAAM9B,KAAKC,MAAMD,KAAKE,SAAW4B,EAAMxE,WAEhC0C,KAAKE,SAAW,GAEpC,IAAM0B,EAAY5B,KAAKC,MAAMD,KAAKE,SAAW0B,EAAYtE,SACzD,IACsD,EAgC/CyE,CAAoBR,GAEjC,IAAIS,EAAa,WACbT,IAAoBvD,EAAWI,aAAemD,IAAoBvD,EAAWC,KAC7E+D,EAAahC,KAAKE,SAAW,GAAM,WAAa,SAE3CqB,IAAoBvD,EAAW5F,WAAamJ,IAAoBvD,EAAWG,QAChF6D,EAAahC,KAAKE,SAAW,GAAM,UAAY,WAE1CqB,IAAoBvD,EAAWK,UAAYkD,IAAoBvD,EAAWM,OAC/E0D,EAAahC,KAAKE,SAAW,GAAM,UAAYF,KAAKE,SAAW,GAAM,WAAa,UAEtF,MAAM+B,EAvNY,CAACC,IACnB,MAAM,IAAE5C,EAAG,IAAEC,GAAQH,EAAa8C,GAC5BD,EAAQ3C,EAAMU,KAAKE,UAAYX,EAAMD,GAC3C,OAAOU,KAAKmC,MAAc,IAARF,GAAe,GAAG,EAoNtBG,CAAcJ,GACtBK,EAlNgB,CAACC,IACvB,GAAItC,KAAKE,SAAW,GAAK,CACrB,MAAMqC,EAAkB,GAAsB,GAAhBvC,KAAKE,SACnC,OAAOF,KAAKmC,MAAOG,GAAiB,EAAIC,GAAoB,KAAO,GACvE,CACgB,EA6MEC,CAAkBP,GAC9BZ,EAAalC,EAAUa,KAAKC,MAAMD,KAAKE,SAAWf,EAAU7B,SAE5DmF,EAAiB,EAAIzC,KAAKC,MAAsB,EAAhBD,KAAKE,UAErCwC,EADiB,IAAIlE,GAAQ4B,MAAK,IAAM,GAAMJ,KAAKE,WACnBG,MAAM,EAAGoC,GAAgB5H,KAAI8H,GAAKA,EAAE9E,OAE1E,IAAI+E,EAAY,GAChB,OAAQrB,GACJ,KAAKvD,EAAWC,KACZ2E,EAAYlE,EAAME,YAClB,MACJ,KAAKZ,EAAWE,QACZ0E,EAAY5C,KAAKE,SAAW,GAAMxB,EAAMG,cAAgBH,EAAMI,cAC9D,MACJ,KAAKd,EAAWG,QACZyE,EAAYlE,EAAMP,QAClB,MACJ,KAAKH,EAAWK,SACZuE,EAAYlE,EAAMK,SAClB,MACJ,QACI6D,EAAYlE,EAAME,YAG1B,MAAMiE,EAAgB7C,KAAKT,IAAI,EAAGS,KAAKC,MAAMD,KAAKE,SAAW0C,EAAUtF,SAEjEwF,EADgB,IAAIF,GAAWxC,MAAK,IAAM,GAAMJ,KAAKE,WACvBG,MAAM,EAAGwC,GAEvCE,EAtOC,GAAsB,GAAhB/C,KAAKE,SAwOlB,MAAO,CACH9F,KACAyD,OACA4D,QACA7B,SAAU2B,EACVU,QACAI,YACAhB,aACA2B,OAAQN,EACRO,MAAOH,EACPI,UAAWpC,EAAeS,EAAiBnH,GAC3C8C,IAAKkE,EAAmBhH,EAAIiH,EAAYxD,GACxCkF,aACAI,aAAcxD,EAAqB4B,EAAiBwB,GACpDK,QAASpD,KAAKE,SAAW,GACzBmD,UAAW,CAACpE,EAAUe,KAAKC,MAAMD,KAAKE,SAAWjB,EAAU3B,UAC3DgG,SAAUtD,KAAKE,SAAW,GACpB,CAAClB,EAASgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAS1B,UAC9C,CAAC,SACV,EA8BCiG,EAAsBC,IACxB,MAAMC,EAAW,CACb,UAAW,SAAU,UAAW,SAAU,SAAU,OAAQ,QAC5D,eAAgB,UAAW,OAAQ,aAAc,gBACjD,aAAc,eAAgB,UAAW,aAAc,WAErDC,EAAc,CAChB,OAAQ,WAAY,SAAU,QAAS,SAAU,cAAe,OAE9DC,EAAsB,CACxB,OAAU,CAAC,UAAW,WAAY,UAAW,UAAW,SAAU,cAClE,KAAQ,CAAC,SAAU,WAAY,eAAgB,YAAa,WAC5D,QAAW,CAAC,SAAU,aAAc,WAAY,UAAW,SAC3D,OAAU,CAAC,SAAU,UAAW,UAAW,YAAa,QACxD,SAAY,CAAC,WAAY,SAAU,QAAS,UAAW,UACvD,OAAU,CAAC,SAAU,UAAW,aAAc,SAAU,YAEtDhD,EAAS8C,EAASzD,KAAKC,MAAMD,KAAKE,SAAWuD,EAASnG,SACtDsG,EAAaF,EAAY1D,KAAKC,MAAMD,KAAKE,SAAWwD,EAAYpG,SACtE,GAAIkG,GAAYG,EAAoBH,EAASvC,eAAgB,CAEzD,MAAO,GAAGN,KADagD,EAAoBH,EAASvC,eAAejB,KAAKC,MAAMD,KAAKE,SAAWyD,EAAoBH,EAASvC,eAAe3D,YACpGsG,GAC1C,CACA,MAAO,GAAGjD,KAAUiD,GAAY,EAG9BC,EAAY,CACd,SAAU,OAAQ,UAAW,SAAU,WAAY,UAGjDC,EAAiB,CAACC,EAAUP,KAC9B,IAAIQ,EAAIC,EACR,MAAMC,EAAiBV,GAAYK,EAAU7D,KAAKC,MAAMD,KAAKE,SAAW2D,EAAUvG,SAC5ElD,EAAKsG,EAAW,UAKhByD,EAAWJ,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWC,OAC1DoG,EAAcN,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWE,UAC7DoG,EAAaP,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWG,UAC5DoG,EAAgBR,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWK,WAC/DmG,EAAiBT,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAW5F,YAChEqM,EAAiBV,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWI,cAChEsG,EAAWX,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWM,OAC1DqG,EAAeZ,EAASlK,QAAOuK,GAAKA,EAAExE,WAAa5B,EAAWO,UAC9DqG,EAAgB,GAED5E,KAAKE,SAAW,IACjBoE,EAAWhH,OAAS,EAEpCsH,EAAc5I,KAAKsI,EAAWtE,KAAKC,MAAMD,KAAKE,SAAWoE,EAAWhH,WAIhE6G,EAAS7G,OAAS,GAClBsH,EAAc5I,KAAKmI,EAASnE,KAAKC,MAAMD,KAAKE,SAAWiE,EAAS7G,UAGhE+G,EAAY/G,OAAS,GACrBsH,EAAc5I,KAAKqI,EAAYrE,KAAKC,MAAMD,KAAKE,SAAWmE,EAAY/G,WAI1EiH,EAAcjH,OAAS,GACvBsH,EAAc5I,KAAKuI,EAAcvE,KAAKC,MAAMD,KAAKE,SAAWqE,EAAcjH,UAG1EkH,EAAelH,OAAS,GAAK0C,KAAKE,SAAW,IAC7C0E,EAAc5I,KAAKwI,EAAexE,KAAKC,MAAMD,KAAKE,SAAWsE,EAAelH,UAG5EmH,EAAenH,OAAS,GAAK0C,KAAKE,SAAW,IAC7C0E,EAAc5I,KAAKyI,EAAezE,KAAKC,MAAMD,KAAKE,SAAWuE,EAAenH,UAG5EoH,EAASpH,OAAS,GAAK0C,KAAKE,SAAW,IACvC0E,EAAc5I,KAAK0I,EAAS1E,KAAKC,MAAMD,KAAKE,SAAWwE,EAASpH,UAGhEqH,EAAarH,OAAS,GAAK0C,KAAKE,SAAW,IAC3C0E,EAAc5I,KAAK2I,EAAa3E,KAAKC,MAAMD,KAAKE,SAAWyE,EAAarH,UAG5E,MACMuH,EADkBD,EAAcE,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAKjC,YAAY,GAC3C6B,EAActH,OAEhD2H,EAAqB,CACvB,OAAU,CAAC,UAAW,cAAe,YAAa,cAClD,KAAQ,CAAC,eAAgB,WAAY,gBAAiB,cACtD,QAAW,CAAC,UAAW,UAAW,OAAQ,YAC1C,OAAU,CAAC,SAAU,YAAa,SAAU,WAC5C,SAAY,CAAC,UAAW,UAAW,UAAW,QAC9C,OAAU,CAAC,aAAc,cAAe,YAAa,WAGnDC,EAAqB,CACvB,YAF6D,QAA7ClB,EAAKiB,EAAmBf,UAAoC,IAAPF,OAAgB,EAASA,EAAGhE,KAAKC,MAAMD,KAAKE,WAA2D,QAA7C+D,EAAKgB,EAAmBf,UAAoC,IAAPD,OAAgB,EAASA,EAAG3G,SAAW,OAAS,6BAE5L4G,cACxC,uCACA,2CASJ,OANIW,EAAgB,GAChBK,EAAmBzE,QAAQ,+CAEtBoE,EAAgB,KACrBK,EAAmBzE,QAAQ,2CAExB,CACHrG,KACAyD,KAAM0F,EAAmBW,GACzBV,SAAUU,EACVpC,MAAO8C,EACP7B,WAAY8B,EACZ1B,aAAc+B,EACjB,EAwBCC,EAAc,CAChB,cAAe,UAAW,uBAAqB,eAAgB,UAC/D,aAAW,eAAgB,MAAO,gBAAiB,WACnD,YAAa,cAAe,cAAe,gBAAiB,gBAC5D,eAAgB,iBAAkB,gBAAiB,QAAS,YAC5D,UAAW,aAAc,iBAAkB,iBAAkB,iBAC7D,mBAAoB,kBAAmB,kBAAmB,cAAe,gBAGvEC,EAAS,CACX,WAAY,eAAgB,aAAc,iBAAkB,uBAC5D,uBAAwB,cAAe,eAAgB,mBAAoB,eAC3E,iBAAkB,iBAAkB,oBAAqB,kBAAmB,UAC5E,iBAAkB,YAAa,aAAc,yBAA0B,sBAGrEC,EAAqB,KACvB,MAAM/K,EAAM,IAAID,KACViL,EAAW,IAAIjL,KAErB,OADAiL,EAASC,YAAYjL,EAAIkL,cAAgB,GAClC,IAAInL,KAAKiL,EAASG,UAAYzF,KAAKE,UAAY5F,EAAImL,UAAYH,EAASG,WAAW,EAGxFC,EAA2B3B,IAC7B,MAAM3J,EAAKsG,EAAW,UAChBiF,EAAYR,EAAYnF,KAAKC,MAAMD,KAAKE,SAAWiF,EAAY7H,SAG/DsI,EAAgB,GAFRR,EAAOpF,KAAKC,MAAMD,KAAKE,SAAWkF,EAAO9H,aAC1C,IAAIjD,MAAOmL,gBAUlBK,EAAY,CACd,QAAS,QAAS,gBAAiB,OAAQ,SAAU,UACrD,aAAc,YAAa,QAAS,eAAgB,MAAO,WAGzDC,EAAU,EAAI9F,KAAKC,MAAsB,EAAhBD,KAAKE,UAE9B6F,EADe,CAZjB,OAAQ,OAAQ,QAAS,SAAU,aAAc,SAAU,aAC3D,UAAW,aAAc,WAAY,YAAa,OAAQ,SAC1D,aAAc,WAAY,UAAW,YAAa,SAAU,WAC5D,cAAe,SAAU,YASK3F,MAAK,IAAM,GAAMJ,KAAKE,WACxBG,MAAM,EAAGyF,GAEzC,GAAI9F,KAAKE,SAAW,GAAK,CACrB,MAAM8F,EAAWH,EAAU7F,KAAKC,MAAMD,KAAKE,SAAW2F,EAAUvI,SAChEyI,EAAW/J,KAAKgK,EACpB,CAEA,MAAMC,EAAc,EAAIjG,KAAKC,MAAsB,EAAhBD,KAAKE,UAElCoD,EADmB,IAAItE,GAAUoB,MAAK,IAAM,GAAMJ,KAAKE,WAC3BG,MAAM,EAAG4F,GAErCC,EAAY,EAAIlG,KAAKC,MAAsB,EAAhBD,KAAKE,UAEhC8C,EADiB,IAAIxE,GAAQ4B,MAAK,IAAM,GAAMJ,KAAKE,WAC3BG,MAAM,EAAG6F,GAAWrL,KAAI8H,GAAKA,EAAE9E,OAEvDsI,EAAc,EAAInG,KAAKC,MAAsB,EAAhBD,KAAKE,UAElCkG,EADmB,IAAIrC,GAAU3D,MAAK,IAAM,GAAMJ,KAAKE,WACpBG,MAAM,EAAG8F,GAAatL,KAAIwL,IAC/D,IAAIrC,EAEJ,MAAMjB,EAAa,GAAsB,IAAhB/C,KAAKE,SAExBiD,EAAe,CACjB,oBAAoBwC,OAAeI,EAAWO,KAAK,aACnD,eAAetD,EAAOsD,KAAK,qBAC3B,GAAGD,EAAQzG,uBAAuB+F,KAGtC,GAAIrC,EAASiD,SAAS,WAAyC,QAA3BvC,EAAKqC,EAAQ/C,gBAA6B,IAAPU,OAAgB,EAASA,EAAGuC,SAAS,UACxGpD,EAAanH,KAAK,8CAEjB,GAAIsH,EAASkD,MAAKpC,IAAO,IAAIJ,EAAI,OAAmC,QAA3BA,EAAKqC,EAAQ/C,gBAA6B,IAAPU,OAAgB,EAASA,EAAGuC,SAASnC,EAAE,IAAM,CAC1H,MAAMqC,EAAUnD,EAASoD,MAAKtC,IAAO,IAAIJ,EAAI,OAAmC,QAA3BA,EAAKqC,EAAQ/C,gBAA6B,IAAPU,OAAgB,EAASA,EAAGuC,SAASnC,EAAE,IAC/HjB,EAAanH,KAAK,GAAGyK,qCACzB,CACA,MAAO,CACHrM,GAAIiM,EAAQjM,GACZyD,KAAMwI,EAAQxI,KACd8I,YAAa,GAAGN,EAAQ5E,SAAS4E,EAAQxI,OACzCoE,MAAOoE,EAAQpE,MACfR,MAAO4E,EAAQ5E,MACf7B,SAAUyG,EAAQzG,SAClBgH,SAAUP,EAAQnD,UAAU,GAC5BH,aACAI,aAAcA,EAAa9C,MAAM,EAAG,GACvC,IAEL,MAAO,CACHjG,KACAuL,YACAkB,MAAOjB,EACPG,aACAzC,WACAN,SACA8D,UAAWzB,IAAqB0B,cAChCX,kBACH,EA4FQY,EAzBmB,EAACC,EAAe,IAAKC,EAAc,GAAIC,EAAmB,MAEtF,MAAMpD,EA/Ue,CAACqD,IACtB,MAAMrD,EAAW,GAEXsD,EAAuB,CACzB,CAACrJ,EAAWC,MAAO+B,KAAKsH,KAAa,IAARF,GAC7B,CAACpJ,EAAWE,SAAU8B,KAAKsH,KAAa,GAARF,GAChC,CAACpJ,EAAWG,SAAU6B,KAAKsH,KAAa,GAARF,GAChC,CAACpJ,EAAW5F,WAAY4H,KAAKsH,KAAa,GAARF,GAClC,CAACpJ,EAAWI,aAAc4B,KAAKsH,KAAa,GAARF,GACpC,CAACpJ,EAAWK,UAAW2B,KAAKsH,KAAa,GAARF,GACjC,CAACpJ,EAAWM,MAAO0B,KAAKsH,KAAa,GAARF,GAC7B,CAACpJ,EAAWO,SAAUyB,KAAKsH,KAAa,IAARF,IAGpCnN,OAAOsN,QAAQF,GAAsBG,SAAQ,EAAE5H,EAAU6H,MACrD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAeC,IAC/B3D,EAAS/H,KAAKsF,EAAgB1B,GAClC,IAGJ,MAAM+H,EAAYP,EAAQrD,EAASzG,OACnC,IAAK,IAAIoK,EAAI,EAAGA,EAAIC,EAAWD,IAC3B3D,EAAS/H,KAAKsF,KAElB,OAAOyC,CAAQ,EAuTE6D,CAAiBX,GAE5BY,EAhMc,EAAC9D,EAAUqD,KAC/B,MAAMS,EAAU,GAEVC,EAAuBjE,EAAUiB,QAAO,CAACiD,EAAKvE,KAChDuE,EAAIvE,GAAYxD,KAAKT,IAAI,EAAGS,KAAKC,MAAMmH,EAAQvD,EAAUvG,SAClDyK,IACR,CAAC,GAEJ9N,OAAOsN,QAAQO,GAAsBN,SAAQ,EAAEhE,EAAUwE,MACrD,IAAK,IAAIN,EAAI,EAAGA,EAAIM,EAAeN,IAC/BG,EAAQ7L,KAAK8H,EAAeC,EAAUP,GAC1C,IAGJ,MAAMmE,EAAYP,EAAQS,EAAQvK,OAClC,IAAK,IAAIoK,EAAI,EAAGA,EAAIC,EAAWD,IAC3BG,EAAQ7L,KAAK8H,EAAeC,IAEhC,OAAO8D,CAAO,EA8KEI,CAAgBlE,EAAUmD,GAEpCgB,EAtEuB,EAACnE,EAAUqD,KACxC,MAAMtF,EAAQ,GACd,IAAK,IAAI4F,EAAI,EAAGA,EAAIN,EAAOM,IACvB5F,EAAM9F,KAAK0J,EAAwB3B,IAEvC,OAAOjC,CAAK,EAiEaqG,CAAyBpE,EAAUoD,GAG5D,MAAO,CACHpD,WACA8D,UACAK,mBACAE,YAhDG,CACHC,OA0CoC,YAzCpCC,aAAa,EACbC,YAAa,CACTC,iBAvBW,CAAC,SAAU,aAAc,gBAAgB3N,KAAI4N,IAAS,CACrEA,QACAC,OAAQ,GAAsB,GAAhB1I,KAAKE,aAsBfyI,iBAnBWnK,EAAO6B,MAAM,EAAG,EAAIL,KAAKC,MAAsB,EAAhBD,KAAKE,WAClDrF,KAAI8H,IAAK,CACViG,MAAOjG,EAAE9E,KACT6K,OAAQ,GAAsB,GAAhB1I,KAAKE,aAiBf2I,gBAdU,CACd,CAAEjJ,SAAU,OAAQkJ,KAAM,KAC1B,CAAElJ,SAAU,OAAQkJ,KAAM,KAC1B,CAAElJ,SAAU,UAAWkJ,KAAM,MAC7B,CAAElJ,SAAU,UAAWkJ,KAAM,MAC7B,CAAElJ,SAAU,UAAWkJ,KAAM,MAC7B,CAAElJ,SAAU,QAASkJ,KAAM,MASvBC,kBAAmB5J,EAAUkB,MAAM,EAAG,GACtC2I,oBAAqB,CAAC,SAAU,OAAQ,WAExC/F,MAAO,CACHgG,IAAK,CAAC,IAAK,KACXC,OAAQ,CAAC,KAAM,MACfC,MAAO,CAAC,MACRC,KAAM,CAAC,MAEXpG,OAAQxE,EAAO6B,MAAM,EAAG,EAAIL,KAAKC,MAAsB,EAAhBD,KAAKE,WAAerF,KAAI8H,GAAKA,EAAE9E,OACtEwL,OAAQ,CAAC,SAAU,aAAc,gBACjCC,OAAQpK,EAAOmB,MAAM,EAAG,EAAIL,KAAKC,MAAsB,EAAhBD,KAAKE,WAC5CqJ,UAAW,CAAC,SAAU,OAAQ,WAC9BC,YAAa,CAAC,SAAU,aAE5BC,OAAQ,GACRC,SAAU,CACNC,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,YAAa,GACbC,gBAAiB,IAAI1P,MAEzBE,UAAW,IAAIF,KACf2P,WAAY,IAAI3P,MAmBhB4P,WAAYjM,EACZgF,OAAQxE,EACRyE,MAAOvE,EACP4E,SAAUtE,EACVqE,UAAWpE,EACXqK,OAAQpK,EACRqK,UAAW1F,EACd,EAGmBqG,GAEXC,EAAY,CACrBC,KAAM,OACNC,WAAY,cAGHC,EAAoB,KAE7B,IAEI,OADmBC,aAAaC,QAAQ,uBAClBL,EAAUC,IACpC,CACA,MAAOK,GAEH,OAAO,CACX,GAESC,EAAeC,IACxB,IAEI,OADAJ,aAAaK,QAAQ,oBAAqBD,IACnC,CACX,CACA,MAAOF,GAEH,OAAO,CACX,E,uDCltBG,MAAMI,GAAyB,E,SAAA,KAAO,CAAClS,EAAKC,KAAQ,CACvDkS,iBAAkB,GAClBC,mBAAoB,GACpBlB,aAAc,GACdmB,cAAe,GACfC,UAAW,GACXnB,YAAa,GACboB,QAAS,KACTC,SAAS,EACTnS,MAAO,KACPoS,oBAAsBtJ,IAClBnJ,EAAI,CAAEmS,iBAAkBhJ,GAAQ,EAEpCuJ,sBAAwBxD,IACpBlP,EAAI,CAAEoS,mBAAoBlD,GAAU,EAExCyD,gBAAkBzD,IACdlP,EAAI,CAAEkR,aAAchC,GAAU,EAElC0D,mBAAqBvG,IACjBrM,GAAKoF,IAAU,CACX+M,iBAAkB,IAAI/M,EAAM+M,iBAAkB9F,MAC/C,EAEPwG,qBAAuBhS,IACnBb,GAAKoF,IAAU,CACXgN,mBAAoB,IAAIhN,EAAMgN,mBAAoBvR,MACnD,EAEPiS,cAAgBzG,IAEGpM,IAAMoS,cAAcxE,MAAMkF,GAAiBA,EAAaC,SAAW3G,EAAK2G,UAEnFhT,GAAKoF,IAAU,CACXiN,cAAe,IAAIjN,EAAMiN,cAAehG,MAEhD,EAEJ4G,mBAAqBD,IACjBhT,GAAKoF,IAAU,CACXiN,cAAejN,EAAMiN,cAAcnR,QAAQmL,GAASA,EAAK2G,SAAWA,OACrE,EAEPE,UAAY7G,IAER,MAAM8G,EAAoBlT,IAAMqS,UAAUnP,WAAWiQ,GAAaA,EAASJ,SAAW3G,EAAK2G,SAGvFhT,EAFAmT,GAAqB,EAEhB/N,IACD,MAAMiO,EAAmB,IAAIjO,EAAMkN,WAEnC,OADAe,EAAiBF,GAAmBG,UAAYjH,EAAKiH,SAC9C,CAAEhB,UAAWe,EAAkB,EAKrCjO,IAAU,CACXkN,UAAW,IAAIlN,EAAMkN,UAAWjG,KAExC,EAEJkH,eAAiBP,IACbhT,GAAKoF,IAAU,CACXkN,UAAWlN,EAAMkN,UAAUpR,QAAQmL,GAASA,EAAK2G,SAAWA,OAC7D,EAEPQ,uBAAwB,CAACR,EAAQM,KAC7BtT,GAAKoF,IAAU,CACXkN,UAAWlN,EAAMkN,UAAUpQ,KAAKmK,GAASA,EAAK2G,SAAWA,EAAS1R,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG8K,GAAO,CAAEiH,aAAcjH,OAC1H,EAEPoH,cAAgBT,IACP/S,IAAMkR,YAAYvD,SAASoF,IAC5BhT,GAAKoF,IAAU,CACX+L,YAAa,IAAI/L,EAAM+L,YAAa6B,MAE5C,EAEJU,WAAa7S,IAEMZ,IAAMiR,aAAarD,MAAM8F,GAAgBA,EAAYC,WAAa/S,EAAO+S,YAEpF5T,GAAKoF,IAAU,CACX8L,aAAc,IAAI9L,EAAM8L,aAAcrQ,MAE9C,EAEJgT,kBAAoBD,IAChB5T,GAAKoF,IAAU,CACX8L,aAAc9L,EAAM8L,aAAahQ,QAAQL,GAAWA,EAAO+S,WAAaA,OACzE,EAEPE,WAAavB,IACTvS,EAAI,CAAEuS,WAAU,EAEpBwB,qBAAsB,KAClB/T,EAAI,CACAmS,iBAAkB,GAClBC,mBAAoB,GACpBG,QAAS,MACX,EAEN1P,WAAa2P,IACTxS,EAAI,CAAEwS,WAAU,EAEpB1P,SAAWzC,IACPL,EAAI,CAAEK,SAAQ,EAElB2T,mBAAqB/M,GACVhH,IAAMkS,iBAAiBjR,QAAOmL,GAAQA,EAAKpF,WAAaA,IAEnEgN,2BAA4B,IACjB,IAAIhU,IAAMkS,kBAAkB1K,MAAK,CAACyM,EAAGC,IAAMA,EAAE/J,WAAa8J,EAAE9J,aAEvEgK,cAAgB3S,GACLxB,IAAMmS,mBAAmBrE,MAAKlN,GAAUA,EAAOY,KAAOA,IAEjE4S,YAAc5S,GACHxB,IAAMkS,iBAAiBpE,MAAK1B,GAAQA,EAAK5K,KAAOA,IAE3D6S,WAAY,CAAC7S,EAAIQ,KACbjC,GAAKoF,IAAU,CACX+M,iBAAkB/M,EAAM+M,iBAAiBjQ,KAAImK,GAAQA,EAAK5K,KAAOA,EAAKH,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG8K,GAAOpK,GAAWoK,OACzH,MAGX,K,wEC1HO,SAASkI,EAAqBC,EAAWC,GAU5C,OARA,QAASD,EAAW,OAAQ,uBAAuBA,WAG/CC,GAAoC,oBAApBA,EAAMC,WACtBD,EAAMC,WAAWtP,KACb,QAASoP,EAAW,SAAU,GAAGA,YAAqB,CAAEG,SAAUvP,GAAQ,IAG3EqP,CACX,C,wBChBO,IAAIG,EASAC,E,yDARX,SAAWD,GACPA,EAAkB,KAAI,OACtBA,EAA4B,eAAI,iBAChCA,EAAoB,OAAI,SACxBA,EAAkB,KAAI,OACtBA,EAAqB,QAAI,UACzBA,EAAmB,MAAI,OAC1B,CAPD,CAOGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAoB,KAAI,OACxBA,EAAyB,UAAI,YAC7BA,EAAsB,OAAI,QAC7B,CAJD,CAIGA,IAAkBA,EAAgB,CAAC,G,iRCV/B,MAAMC,EAAqB,EAGrBC,EAAU,+BACVC,EAAc,KAIdC,EAAoB,8kHAAYC,6BAA+B,GAC/DC,EAAiB,8kHAAYC,6BAA+B,4BAC5DC,EAAe,8kHAAYC,2BAA6B,0BAExDC,EAA4D,SAA1C,8kHAAYC,0BAE9BC,EAA4D,SAA1C,8kHAAYC,0BAI9BC,EAAoB,8kHAAYC,6BAA+B,GAkB/DC,EAAgE,UAA5C,8kHAAYC,8BAA2C,C,+ECxCxF,IAUWC,EAVPC,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAO3E,GAAKyE,EAAOzE,EAAI,CAAE,CAC1F,SAAS8E,EAASH,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAO3E,GAAKyE,EAAOzE,EAAI,CAAE,CAC7F,SAAS4E,EAAK1T,GAJlB,IAAeyT,EAIazT,EAAO6T,KAAOP,EAAQtT,EAAOyT,QAJ1CA,EAIyDzT,EAAOyT,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBK,KAAKN,EAAWI,EAAW,CAC7GF,GAAMN,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKS,OAClE,GACJ,GAGA,SAAWZ,GACPA,EAAgC,YAAI,cACpCA,EAAiC,aAAI,eACrCA,EAAoC,gBAAI,kBACxCA,EAAiC,aAAI,eACrCA,EAA8B,UAAI,YAClCA,EAA8B,UAAI,YAClCA,EAAiC,aAAI,eACrCA,EAAgC,YAAI,cACpCA,EAAgC,YAAI,cACpCA,EAAmC,eAAI,iBACvCA,EAAgC,YAAI,cACpCA,EAAoC,gBAAI,kBACxCA,EAAgC,YAAI,cACpCA,EAAqC,iBAAI,mBACzCA,EAAwC,oBAAI,sBAC5CA,EAAuC,mBAAI,qBAC3CA,EAAuC,mBAAI,qBAC3CA,EAAiC,aAAI,eACrCA,EAAoC,gBAAI,kBACxCA,EAAiC,aAAI,eACrCA,EAAkC,cAAI,gBACtCA,EAA0B,MAAI,QAE9BA,EAAsC,kBAAI,oBAC1CA,EAA6C,yBAAI,2BACjDA,EAAoC,gBAAI,kBAExCA,EAAiC,aAAI,eACrCA,EAA8B,UAAI,YAClCA,EAAgC,YAAI,cAEpCA,EAAmC,eAAI,iBACvCA,EAAwC,oBAAI,sBAC5CA,EAAsC,kBAAI,oBAC1CA,EAAwC,oBAAI,qBAC/C,CApCD,CAoCGA,IAAuBA,EAAqB,CAAC,IAEhD,MAIMiB,EAAe,KACjB,IAAIC,EAAYC,eAAerF,QAAQ,sBAKvC,OAJKoF,IACDA,EANG,WAAWvV,KAAKC,SAAS0F,KAAKE,SAASU,SAAS,IAAIC,UAAU,EAAG,KAOpEgP,eAAejF,QAAQ,qBAAsBgF,IAE1CA,CAAS,EAGPE,EAAa,CAAC/V,EAAMsO,EAAQ0H,KACrC,MAAMlJ,EAAQ,CACV9M,OACA+M,UAAW,IAAIzM,KACfgO,SACAuH,UAAWD,IACXI,QAQJC,EAAWnJ,EAAM,EAGrB,IAAIoJ,EAAa,GACbC,GAAY,EAEhB,MAAMF,EAAcnJ,IAChBoJ,EAAWjU,KAAK6K,GAEXqJ,GACDC,GACJ,EAGEA,EAAmB,IAAMxB,OAAU,OAAQ,OAAQ,GAAQ,YAC7D,GAA0B,IAAtBsB,EAAW3S,OAEX,YADA4S,GAAY,GAGhBA,GAAY,EAEZ,MAAME,EAAQH,EAAW5P,MAAM,EAAG,IAClC,WAE2BgQ,MAAM,oDAAqD,CAC9EC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQP,OAGHQ,GAETX,EAAaA,EAAW5P,MAAM+P,EAAM9S,cAI9B,IAAI0R,SAAQC,GAAW4B,WAAW5B,EAAS,MAEzD,CACA,MAAO6B,GAEC,QAIE,IAAI9B,SAAQC,GAAW4B,WAAW5B,EAAS,MACrD,CAEAkB,GACJ,G,6FC7HO,MAAMY,EAAiB,KAC1B,MAAMC,GAAU,UAAsB,KAAU3G,WAAa,KAAUD,KACjE6G,GAAU,QAAYD,GAE5B,GAAIC,EAAS,CAETC,OAAOC,oBAAsBH,IAAY,KAAU5G,KAEnD,MAAMvD,EAAQ,IAAIuK,YAAY,2BAA4B,CACtDC,OAAQ,CAAE1G,KAAMqG,KAEpBE,OAAOI,cAAczK,EACzB,CACA,OAAOoK,CAAO,EAGLM,EAAc,KACvB,MAAOC,EAAYC,IAAiB,IAAAC,WAAS,YAE7C,IAAAC,YAAU,KACN,MAAMC,EAAoB/K,IAEtB4K,EADoB5K,EACMwK,OAAO1G,OAAS,KAAUP,KAAK,EAG7D,OADA8G,OAAOW,iBAAiB,2BAA4BD,GAC7C,KACHV,OAAOY,oBAAoB,2BAA4BF,EAAiB,CAC3E,GACF,IAKH,MAAO,CAACJ,EAJO,KACXT,IACAU,GAAeD,EAAW,EAEH,EAGlBO,EAAiB,EAAGC,YAAY,GAAIvJ,QAAQ,CAAC,MACtD,MAAO+I,EAAYS,GAAUV,IAC7B,OAAQ,UAAM,MAAOtX,OAAOC,OAAO,CAAE8X,UAAW,4BAA4BA,IAAavJ,MAAOA,GAAS,CAAEyJ,SAAU,EAAC,UAAM,QAASjY,OAAOC,OAAO,CAAE8X,UAAW,8BAAgC,CAAEE,SAAU,EAAC,SAAK,QAAS,CAAEnY,KAAM,WAAYoY,QAASX,EAAYY,SAAUH,EAAQ,aAAc,sBAAuB,SAAK,OAAQ,CAAED,UAAW,oCAAsC,SAAK,OAAQ/X,OAAOC,OAAO,CAAE8X,UAAW,6BAA+B,CAAEE,SAAUV,EAAa,YAAc,sBAAuB,SAAK,QAAS,CAAEU,SAAU,88CAyD9gB,C,yDCrFT,MA6WMG,EAAY,CACrBC,QA9WuB,CACvBlY,GAAI,WACJyD,KAAM,sBACN8I,YAAa,iIACb4L,SAAU,cACVC,eAAgB,0DAChBC,MAAO,CACH,kDACA,kEACA,4DAEJC,MAAO,CACH,CACItY,GAAI,OACJuY,MAAO,oBACPhM,YAAa,sDACbiM,OAAQ,mFACRC,gBAAiB,kEACjBC,KAAM,0EAEV,CACI1Y,GAAI,OACJuY,MAAO,qBACPhM,YAAa,2CACbiM,OAAQ,iDACRC,gBAAiB,oEACjBC,KAAM,wDAEV,CACI1Y,GAAI,OACJuY,MAAO,oBACPhM,YAAa,4CACbiM,OAAQ,4DACRC,gBAAiB,6EACjBC,KAAM,oFAEV,CACI1Y,GAAI,OACJuY,MAAO,0BACPhM,YAAa,mCACbiM,OAAQ,4DACRC,gBAAiB,6DACjBC,KAAM,4FAEV,CACI1Y,GAAI,OACJuY,MAAO,wBACPhM,YAAa,mDACbiM,OAAQ,uEACRC,gBAAiB,iFACjBC,KAAM,4GAEV,CACI1Y,GAAI,OACJuY,MAAO,wBACPhM,YAAa,0CACbiM,OAAQ,iDACRC,gBAAiB,4EACjBC,KAAM,uEAEV,CACI1Y,GAAI,OACJuY,MAAO,0BACPhM,YAAa,8CACbiM,OAAQ,4DACRC,gBAAiB,6EACjBC,KAAM,4EAEV,CACI1Y,GAAI,OACJuY,MAAO,sBACPhM,YAAa,oDACbiM,OAAQ,0DACRC,gBAAiB,qFACjBC,KAAM,8CAEV,CACI1Y,GAAI,OACJuY,MAAO,iBACPhM,YAAa,6BACbiM,OAAQ,yCACRC,gBAAiB,kEACjBC,KAAM,gGAGdC,gBAAiB,CACb,+CACA,uCACA,uDACA,gDAsRJC,UA5Q6B,CAC7B5Y,GAAI,YACJyD,KAAM,4BACN8I,YAAa,uHACb4L,SAAU,cACVC,eAAgB,+DAChBC,MAAO,CACH,wDACA,yDACA,gDAEJC,MAAO,CACH,CACItY,GAAI,OACJuY,MAAO,6BACPhM,YAAa,iDACbiM,OAAQ,sCACRC,gBAAiB,yEACjBC,KAAM,oFAEV,CACI1Y,GAAI,OACJuY,MAAO,mBACPhM,YAAa,wDACbiM,OAAQ,oCACRC,gBAAiB,oEACjBC,KAAM,gFAEV,CACI1Y,GAAI,OACJuY,MAAO,sBACPhM,YAAa,iEACbiM,OAAQ,8CACRC,gBAAiB,oDACjBC,KAAM,qEAEV,CACI1Y,GAAI,OACJuY,MAAO,2BACPhM,YAAa,sCACbiM,OAAQ,yCACRC,gBAAiB,yEACjBC,KAAM,kFAEV,CACI1Y,GAAI,OACJuY,MAAO,6BACPhM,YAAa,oCACbiM,OAAQ,yDACRC,gBAAiB,kEACjBC,KAAM,6DAEV,CACI1Y,GAAI,OACJuY,MAAO,yBACPhM,YAAa,0CACbiM,OAAQ,gEACRC,gBAAiB,oEACjBC,KAAM,iFAEV,CACI1Y,GAAI,OACJuY,MAAO,2BACPhM,YAAa,0CACbiM,OAAQ,0CACRC,gBAAiB,wDACjBC,KAAM,sEAEV,CACI1Y,GAAI,OACJuY,MAAO,gBACPhM,YAAa,+CACbiM,OAAQ,qCACRC,gBAAiB,yDACjBC,KAAM,uFAGdC,gBAAiB,CACb,gDACA,0CACA,wDACA,8CA4LJE,WAlL0B,CAC1B7Y,GAAI,aACJyD,KAAM,kCACN8I,YAAa,6FACb4L,SAAU,cACVC,eAAgB,8EAChBC,MAAO,CACH,2DACA,+CACA,6CAEJC,MAAO,CACH,CACItY,GAAI,OACJuY,MAAO,sBACPhM,YAAa,8CACbiM,OAAQ,oDACRC,gBAAiB,kEACjBC,KAAM,qEAEV,CACI1Y,GAAI,OACJuY,MAAO,4BACPhM,YAAa,8CACbiM,OAAQ,yDACRC,gBAAiB,6DACjBC,KAAM,kFAEV,CACI1Y,GAAI,OACJuY,MAAO,qBACPhM,YAAa,+CACbiM,OAAQ,8CACRC,gBAAiB,iEACjBC,KAAM,iFAEV,CACI1Y,GAAI,OACJuY,MAAO,mBACPhM,YAAa,sDACbiM,OAAQ,6CACRC,gBAAiB,wDACjBC,KAAM,2FAEV,CACI1Y,GAAI,OACJuY,MAAO,gBACPhM,YAAa,oEACbiM,OAAQ,0CACRC,gBAAiB,mEACjBC,KAAM,4FAEV,CACI1Y,GAAI,OACJuY,MAAO,eACPhM,YAAa,sCACbiM,OAAQ,wCACRC,gBAAiB,iEACjBC,KAAM,qEAEV,CACI1Y,GAAI,OACJuY,MAAO,iBACPhM,YAAa,2CACbiM,OAAQ,2CACRC,gBAAiB,2DACjBC,KAAM,sFAGdC,gBAAiB,CACb,+CACA,oDACA,4CACA,6DA0GJG,UAjGyB,CACzB9Y,GAAI,aACJyD,KAAM,wCACN8I,YAAa,qHACb4L,SAAU,cACVC,eAAgB,8DAChBC,MAAO,CACH,4CACA,mDACA,8CAEJC,MAAO,CACH,CACItY,GAAI,OACJuY,MAAO,wBACPhM,YAAa,gEACbiM,OAAQ,oEACRC,gBAAiB,yEACjBC,KAAM,wEAEV,CACI1Y,GAAI,OACJuY,MAAO,qBACPhM,YAAa,gDACbiM,OAAQ,oFACRC,gBAAiB,yDACjBC,KAAM,6FAEV,CACI1Y,GAAI,OACJuY,MAAO,uBACPhM,YAAa,2CACbiM,OAAQ,kEACRC,gBAAiB,6EACjBC,KAAM,+EAEV,CACI1Y,GAAI,OACJuY,MAAO,yBACPhM,YAAa,oDACbiM,OAAQ,2CACRC,gBAAiB,mEACjBC,KAAM,uEAEV,CACI1Y,GAAI,OACJuY,MAAO,0BACPhM,YAAa,4CACbiM,OAAQ,wDACRC,gBAAiB,sFACjBC,KAAM,mEAEV,CACI1Y,GAAI,OACJuY,MAAO,oBACPhM,YAAa,iCACbiM,OAAQ,2CACRC,gBAAiB,uDACjBC,KAAM,gEAEV,CACI1Y,GAAI,OACJuY,MAAO,0BACPhM,YAAa,6CACbiM,OAAQ,2DACRC,gBAAiB,yDACjBC,KAAM,uEAEV,CACI1Y,GAAI,OACJuY,MAAO,eACPhM,YAAa,4CACbiM,OAAQ,oDACRC,gBAAiB,sEACjBC,KAAM,mDAEV,CACI1Y,GAAI,OACJuY,MAAO,iBACPhM,YAAa,gCACbiM,OAAQ,uDACRC,gBAAiB,iEACjBC,KAAM,gEAGdC,gBAAiB,CACb,2CACA,gDACA,wCACA,6C,wBCtXD,IAAII,EASAC,EAWAC,EASAC,E,yGA5BX,SAAWH,GACPA,EAAiB,IAAI,MACrBA,EAAoB,OAAI,SACxBA,EAAmB,MAAI,QACvBA,EAAuB,UAAI,YAC3BA,EAAmB,MAAI,QACvBA,EAAuB,UAAI,WAC9B,CAPD,CAOGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAyB,WAAI,aAC7BA,EAAyB,WAAI,aAC7BA,EAAwB,UAAI,YAC5BA,EAAmB,KAAI,OACvBA,EAAmB,KAAI,OACvBA,EAAoB,MAAI,QACxBA,EAAmB,KAAI,OACvBA,EAAoB,MAAI,OAC3B,CATD,CASGA,IAAiBA,EAAe,CAAC,IAEpC,SAAWC,GACPA,EAAuB,KAAI,OAC3BA,EAA4B,UAAI,YAChCA,EAA6B,WAAI,aACjCA,EAAsC,oBAAI,sBAC1CA,EAA4B,UAAI,YAChCA,EAAyB,OAAI,QAChC,CAPD,CAOGA,IAAqBA,EAAmB,CAAC,IAE5C,SAAWC,GACPA,EAAuC,cAAI,gBAC3CA,EAAoC,WAAI,aACxCA,EAAgC,OAAI,QACvC,CAJD,CAIGA,IAA4BA,EAA0B,CAAC,G,uEC9BnD,MAAMC,EAA+BzW,IACxC,MAAM0W,EAAS1W,EAAYmE,cAC3B,OAAIuS,EAAOjN,SAAS,UAAYiN,EAAOjN,SAAS,QAAUiN,EAAOjN,SAAS,QAAUiN,EAAOjN,SAAS,UACzF,KAAYtO,IAEnBub,EAAOjN,SAAS,SAAWiN,EAAOjN,SAAS,SAAWiN,EAAOjN,SAAS,WAAaiN,EAAOjN,SAAS,UAAYiN,EAAOjN,SAAS,SACxH,KAAYrO,OAEnBsb,EAAOjN,SAAS,SACT,KAAYpO,MAEnBqb,EAAOjN,SAAS,WAAaiN,EAAOjN,SAAS,SAAWiN,EAAOjN,SAAS,YAAciN,EAAOjN,SAAS,aAAeiN,EAAOjN,SAAS,UAC9H,KAAYnO,UAEnBob,EAAOjN,SAAS,SAAWiN,EAAOjN,SAAS,YAAciN,EAAOjN,SAAS,SAAWiN,EAAOjN,SAAS,UAC7F,KAAYlO,MAEnBmb,EAAOjN,SAAS,cAAgBiN,EAAOjN,SAAS,QAAUiN,EAAOjN,SAAS,QAAUiN,EAAOjN,SAAS,YAAciN,EAAOjN,SAAS,UAAYiN,EAAOjN,SAAS,SACvJ,KAAYjO,UAGhB,KAAYL,GAAG,C,iFCrB1B,MAAMwb,EACF,WAAAC,GA8BI,GA7BAC,KAAKC,UAAW,EAChBD,KAAKE,aAAc,EACnBF,KAAKG,UAAY,GACjBH,KAAKI,cAAgB,EACrBJ,KAAKK,aAAe,EACpBL,KAAKM,iBAAmB,KACxBN,KAAKO,sBAAwB,GAC7BP,KAAKQ,WAAa,CACdC,IAAK,GACLC,OAAQ,GACRC,SAAU,IACVC,WAAY,IACZC,eAAgB,IAChBC,SAAU,IAEdd,KAAKe,UAAY,GACjBf,KAAKgB,oBAAqB,EAE1BhB,KAAKiB,QAAU,CACXR,IAAK,EACLC,OAAQ,KACRC,SAAU,EACVC,WAAY,EACZM,gBAAiB,GACjBC,aAAc,GACdC,qBAAsB,CAAC,EACvBC,UAAW,IAGX9D,OAAO+D,aAAe/D,OAAO+D,YAAYC,OAAQ,CACjD,MAAMA,EAAShE,OAAO+D,YAAYC,OAClCvB,KAAKiB,QAAQN,SAAWY,EAAOC,aAAeD,EAAOE,eACzD,CAEAzB,KAAK0B,gBACT,CACA,kBAAOC,GAIH,OAHK7B,EAAmB8B,WACpB9B,EAAmB8B,SAAW,IAAI9B,GAE/BA,EAAmB8B,QAC9B,CAIA,cAAAF,GAEI,GAAInE,OAAOsE,oBACP,IAWI,GATwB,IAAIA,qBAAqBjO,IAC7CA,EAAQkO,aAAajO,SAASkO,IACF,aAApBA,EAAMC,WACNhC,KAAKiC,qBAAqBF,EAC9B,GACF,IAEUG,QAAQ,CAAEC,WAAY,CAAC,cAEnC,8BAA+B5E,OAAQ,CACd,IAAIsE,qBAAqBjO,IAC9CA,EAAQkO,aAAajO,SAASkO,IAC1B/B,KAAKoC,eAAeL,EAAM,GAC5B,IAEWG,QAAQ,CAAEC,WAAY,CAAC,aAC5C,CACJ,CACA,MAAO9c,GAEP,CAGJgd,SAASnE,iBAAiB,QAAS8B,KAAKsC,iBAAiBC,KAAKvC,OAC9DqC,SAASnE,iBAAiB,UAAW8B,KAAKsC,iBAAiBC,KAAKvC,OAChEqC,SAASnE,iBAAiB,QAAS8B,KAAKwC,SAASxC,KAAKsC,iBAAiBC,KAAKvC,MAAO,MACnFqC,SAASnE,iBAAiB,SAAU8B,KAAKwC,SAASxC,KAAKsC,iBAAiBC,KAAKvC,MAAO,KACxF,CAIA,KAAAyC,CAAMC,GAAQ,GACN1C,KAAKC,WAETD,KAAKC,UAAW,EAChBD,KAAKE,YAAcwC,EAEnB1C,KAAK2C,qBAEL3C,KAAK4C,wBACD5C,KAAKE,YAGb,CAIA,IAAA2C,GACS7C,KAAKC,WAEVD,KAAKC,UAAW,EAEc,OAA1BD,KAAKM,mBACLwC,qBAAqB9C,KAAKM,kBAC1BN,KAAKM,iBAAmB,MAExBN,KAAKE,YAGb,CAIA,qBAAA6C,CAAsBC,EAAepE,GAC5BoB,KAAKC,WAEVD,KAAKiB,QAAQG,qBAAqB4B,GAAiBpE,EAE/CA,EAAWoB,KAAKQ,WAAWI,YAC3BZ,KAAKiD,SAAS,cAAe,gBAAgBD,UAAsBpE,MAAc,CAC7EoE,gBACApE,aAGZ,CAIA,kBAAA+D,GACI,MAAMO,EAAc/P,IAChB,IAAK6M,KAAKC,SACN,OACuB,IAAvBD,KAAKI,gBACLJ,KAAKI,cAAgBjN,GAEzB,MAAMgQ,EAAUhQ,EAAY6M,KAAKI,cAGjC,GAFAJ,KAAKK,eAED8C,GAAW,IAAM,CACjB,MAAMC,EAAa/W,KAAKmC,MAA2B,IAApBwR,KAAKK,aAAuB8C,GAE3DnD,KAAKG,UAAU9X,KAAK+a,GAChBpD,KAAKG,UAAUxW,OAAS,GACxBqW,KAAKG,UAAUkD,QAEnBrD,KAAKiB,QAAQR,IAAMpU,KAAKmC,MAAMwR,KAAKG,UAAUhP,QAAO,CAACC,EAAKqP,IAAQrP,EAAMqP,GAAK,GAAKT,KAAKG,UAAUxW,QAE7FqW,KAAKiB,QAAQR,IAAMT,KAAKQ,WAAWC,KACnCT,KAAKiD,SAAS,UAAW,qBAAqBjD,KAAKiB,QAAQR,MAAO,CAAEA,IAAKT,KAAKiB,QAAQR,MAG1FT,KAAKK,aAAe,EACpBL,KAAKI,cAAgBjN,EAErB6M,KAAKsD,qBACT,CACAtD,KAAKM,iBAAmBiD,sBAAsBL,EAAW,EAE7DlD,KAAKM,iBAAmBiD,sBAAsBL,EAClD,CAIA,qBAAAN,GAEI,IAAKtB,YAAYZ,OAIb,YAHIV,KAAKE,YAMb,MAAMsD,EAAiBC,aAAY,KAC/B,GAAKzD,KAAKC,SAIV,IACI,MAAMyD,EAAapC,YAAYZ,OACzBiD,EAAWD,EAAWE,eACtBC,EAAYH,EAAWI,gBAEvBC,EAAc1X,KAAKmC,MAAOmV,EAAWE,EAAa,KACxD7D,KAAKiB,QAAQP,OAASqD,EACtB/D,KAAKiB,QAAQ+C,WAAaL,EAEtBI,EAAc/D,KAAKQ,WAAWE,SAAWV,KAAKgB,oBAC9ChB,KAAKgB,oBAAqB,EAC1BhB,KAAKiD,SAAS,cAAe,sBAAsBc,KAAgB,CAC/DJ,WACAE,YACAE,iBAGCA,GAAe/D,KAAKQ,WAAWE,SACpCV,KAAKgB,oBAAqB,EAElC,CACA,MAAO3b,GAEP,MA1BI4e,cAAcT,EA0BlB,GACD,IACP,CAIA,oBAAAvB,CAAqBF,GACjB,MAAMxY,EAAMwY,EAAM7X,KACZ0U,EAAWmD,EAAMnD,SAIjBsF,EAAS,CACX3a,MACAqV,WACAzJ,KANS4M,EAAMoC,cAAgB,EAO/BC,OANW,IAOXhe,KANS2b,EAAMsC,cAOflR,UAAWzM,KAAKC,OAEpBqZ,KAAKiB,QAAQC,gBAAgB7Y,KAAK6b,GAE9BlE,KAAKiB,QAAQC,gBAAgBvX,OAAS,KACtCqW,KAAKiB,QAAQC,gBAAgBmC,QAG7BzE,EAAWoB,KAAKQ,WAAWK,gBAC3Bb,KAAKiD,SAAS,eAAgB,yBAAyB1Z,UAAY8C,KAAKmC,MAAMoQ,OAAesF,EAErG,CAIA,cAAA9B,CAAeL,GACX,MAAM,UAAEuC,EAAS,SAAE1F,GAAamD,EAC1BwC,EAAWxC,EAAM7X,MAAQ,UACzB4W,EAAW,CACblC,WACA0F,YACAC,YAEJvE,KAAKiB,QAAQI,UAAUhZ,KAAKyY,GAExBd,KAAKiB,QAAQI,UAAU1X,OAAS,IAChCqW,KAAKiB,QAAQI,UAAUgC,QAE3BrD,KAAKiD,SAAS,YAAa,uBAAuBsB,UAAiBlY,KAAKmC,MAAMoQ,OAAekC,EACjG,CAIA,gBAAAwB,CAAiBpP,GACb,IAAK8M,KAAKC,SACN,OACJ,MAAMqE,EAAYhD,YAAY3a,MACxBP,EAAO8M,EAAM9M,KACboe,EAAStR,EAAMsR,QACjBtR,EAAMsR,OAAOC,SACb,UAEJlB,uBAAsB,KAClB,MACM3E,EADU0C,YAAY3a,MACD2d,EACrBJ,EAAS,CACX9d,OACAoe,SACA5F,WACAzL,UAAWzM,KAAKC,OAEpBqZ,KAAKiB,QAAQE,aAAa9Y,KAAK6b,GAE3BlE,KAAKiB,QAAQE,aAAaxX,OAAS,IACnCqW,KAAKiB,QAAQE,aAAakC,QAG1BzE,EAAWoB,KAAKQ,WAAWM,UAC3Bd,KAAKiD,SAAS,mBAAoB,qBAAqB7c,QAAWoe,UAAenY,KAAKmC,MAAMoQ,OAAesF,EAC/G,GAER,CAIA,UAAAQ,GACI,OAAOpe,OAAOC,OAAO,CAAC,EAAGyZ,KAAKiB,QAClC,CAIA,kBAAA0D,CAAmBC,GACf5E,KAAKO,sBAAsBlY,KAAKuc,EACpC,CAIA,qBAAAC,CAAsBD,GAClB5E,KAAKO,sBAAwBP,KAAKO,sBAAsBra,QAAO4e,GAAYA,IAAaF,GAC5F,CAIA,mBAAAtB,GACI,MAAMrC,EAAUjB,KAAK0E,aACrB1E,KAAKO,sBAAsB1M,SAAQiR,IAC/B,IACIA,EAAS7D,EACb,CACA,MAAO5b,GAEP,IAER,CAIA,QAAA4d,CAAS7c,EAAM2e,EAAS3I,GACpB,MAAM4I,EAAQ,CACV5e,OACA2e,UACA5R,UAAWzM,KAAKC,MAChByV,QAEJ4D,KAAKe,UAAU1Y,KAAK2c,GAEhBhF,KAAKe,UAAUpX,OAAS,KACxBqW,KAAKe,UAAUsC,QAEfrD,KAAKE,WAGb,CAIA,SAAA+E,GACI,MAAO,IAAIjF,KAAKe,UACpB,CAIA,WAAAmE,GACIlF,KAAKe,UAAY,EACrB,CAIA,aAAAoE,CAAc3E,GACVR,KAAKQ,WAAala,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGyZ,KAAKQ,YAAala,OAAO8e,YAAY9e,OAAOsN,QAAQ4M,GAAYtZ,KAAI,EAAEme,EAAK5J,MAAa,IAAIpL,EAAI,MAAO,CAACgV,EAAkF,QAA5EhV,EAAe,OAAVoL,QAA4B,IAAVA,EAAmBA,EAAQuE,KAAKQ,WAAW6E,UAAyB,IAAPhV,EAAgBA,EAAK,EAAE,KAC/Q,CAIA,QAAAmS,CAAS8C,EAAMC,GACX,IAAIC,GAAa,EACjB,OAAO,YAAaC,GACXD,IACDF,EAAKvJ,MAAMiE,KAAMyF,GACjBD,GAAa,EACbtI,YAAW,KACPsI,GAAa,CAAK,GACnBD,GAEX,CACJ,CAIA,YAAAG,GACI,MAAMzE,EAAUjB,KAAK0E,aACfiB,EAAS3F,KAAKiF,YACdW,GAAqB,UAC3B,OAAO9I,KAAKC,UAAU,CAClB5J,WAAW,IAAIzM,MAAO0M,cACtB6N,UACA0E,SACAE,OAAQD,GACT,KAAM,EACb,EAGG,MAAME,EAAqB,CAC9BrD,MAAO,CAACC,GAAQ,IAAU5C,EAAmB6B,cAAcc,MAAMC,GACjEG,KAAM,IAAM/C,EAAmB6B,cAAckB,OAC7C6B,WAAY,IAAM5E,EAAmB6B,cAAc+C,aACnD3B,sBAAuB,CAACC,EAAepE,IAAakB,EAAmB6B,cAAcoB,sBAAsBC,EAAepE,GAC1H+F,mBAAqBC,GAAa9E,EAAmB6B,cAAcgD,mBAAmBC,GACtFC,sBAAwBD,GAAa9E,EAAmB6B,cAAckD,sBAAsBD,GAC5FK,UAAW,IAAMnF,EAAmB6B,cAAcsD,YAClDC,YAAa,IAAMpF,EAAmB6B,cAAcuD,cACpDC,cAAgB3E,GAAeV,EAAmB6B,cAAcwD,cAAc3E,GAC9EkF,aAAc,IAAM5F,EAAmB6B,cAAc+D,e,wECpYlD,MAsCMK,EAA0BC,GAC9B,KAAuC,aAAc,OAGrD,KAAuC,aAAc,UAGrD,KAAuC,aAAc,QAGnDA,EAAQC,KAFJD,EAAQE,OAHRF,EAAQG,IAHRH,EAAQI,KAyBU,MAC7B,IAAIC,EAAY,IAYnB,EAbgC,E,kFCvE1B,MAAMC,GAAe,WAAS,SAAQ,CAACthB,EAAKC,KAAQ,CACvDshB,KAAM,KACNC,gBAAiB,KACjBphB,WAAW,EACXC,MAAO,KACPohB,QAAUF,IACNvhB,EAAI,CAAEuhB,QAAO,EAEjBG,WAAazf,IACT,MAAM0f,EAAc1hB,IAAMshB,KACrBI,GAEL3hB,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc1f,IACtD,EAEN2f,mBAAqB5e,IACjBhD,EAAI,CAAEwhB,gBAAiBxe,GAAS,EAEpC6e,YAAcxV,IACV,MAAMsV,EAAc1hB,IAAMshB,KACrBI,GAEL3hB,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE7Q,OAAQ,IAAI6Q,EAAY7Q,OAAQzE,MACxF,EAENyV,iBAAmB9O,IACf,MAAM2O,EAAc1hB,IAAMshB,KACrBI,GAEL3hB,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE7Q,OAAQ6Q,EAAY7Q,OAAO5P,QAAQmL,GAASA,EAAK5K,KAAOuR,OAChH,EAEN+O,mBAAoB,CAAC/O,EAAQgP,KACzB,MAAML,EAAc1hB,IAAMshB,KACrBI,GAEL3hB,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE7Q,OAAQ6Q,EAAY7Q,OAAO5O,KAAKmK,GAASA,EAAK5K,KAAOuR,EAAS1R,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG8K,GAAO,CAAE2V,aAAc3V,OAC7K,EAEN4V,aAAejP,IACX,MAAM2O,EAAc1hB,IAAMshB,KACrBI,IAGAA,EAAY5Q,SAASC,WAAWpD,SAASoF,IAC1ChT,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE5Q,SAAUzP,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,EAAY5Q,UAAW,CAAEC,WAAY,IAAI2Q,EAAY5Q,SAASC,WAAYgC,GAElK/B,cAAe0Q,EAAY5Q,SAASE,cAAc/P,QAAQO,GAAOA,IAAOuR,IAAS5B,gBAAiB,IAAI1P,WAEtH,EAEJwgB,gBAAkBlP,IACd,MAAM2O,EAAc1hB,IAAMshB,KACrBI,IAGAA,EAAY5Q,SAASE,cAAcrD,SAASoF,IAC7ChT,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE5Q,SAAUzP,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,EAAY5Q,UAAW,CAAEE,cAAe,IAAI0Q,EAAY5Q,SAASE,cAAe+B,GAExKhC,WAAY2Q,EAAY5Q,SAASC,WAAW9P,QAAQO,GAAOA,IAAOuR,IAAS5B,gBAAiB,IAAI1P,WAEhH,EAEJygB,gBAAkBnP,IACd,MAAM2O,EAAc1hB,IAAMshB,KACrBI,GAEL3hB,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE5Q,SAAUzP,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,EAAY5Q,UAAW,CAAEC,WAAY2Q,EAAY5Q,SAASC,WAAW9P,QAAQO,GAAOA,IAAOuR,IAAS5B,gBAAiB,IAAI1P,UAC3N,EAEN0gB,mBAAqBpP,IACjB,MAAM2O,EAAc1hB,IAAMshB,KACrBI,GAEL3hB,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE5Q,SAAUzP,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,EAAY5Q,UAAW,CAAEE,cAAe0Q,EAAY5Q,SAASE,cAAc/P,QAAQO,GAAOA,IAAOuR,IAAS5B,gBAAiB,IAAI1P,UACjO,EAEN+R,cAAgBT,IACZ,MAAM2O,EAAc1hB,IAAMshB,KACrBI,IAGAA,EAAY5Q,SAASI,YAAYvD,SAASoF,IAC3ChT,EAAI,CACAuhB,KAAMjgB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAc,CAAE5Q,SAAUzP,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,EAAY5Q,UAAW,CAAEI,YAAa,IAAIwQ,EAAY5Q,SAASI,YAAa6B,GAAS5B,gBAAiB,IAAI1P,WAElN,EAEJmB,WAAazC,IACTJ,EAAI,CAAEI,aAAY,EAEtB0C,SAAWzC,IACPL,EAAI,CAAEK,SAAQ,EAElBgiB,OAAQ,KACJriB,EAAI,CACAuhB,KAAM,KACNC,gBAAiB,MACnB,KAEN,CACAtc,KAAM,uBACNC,WAAaC,IAAU,CACnBmc,KAAMnc,EAAMmc,KACZC,gBAAiBpc,EAAMoc,oB,gIC1G/B,IAAIc,GAAY,EAIhB,MAAMC,EAA0B,4BAKnBC,EAAkB,KAC3BF,GAAaA,EAEb,IACI1Q,aAAaK,QAAQ,qBAAsBwQ,OAAOH,GACtD,CACA,MAAOjiB,GAEP,CAEA,MAAM6N,EAAQ,IAAIuK,YAAY8J,EAAyB,CAAE7J,OAAQ,CAAE4J,eAEnE,OADA/J,OAAOI,cAAczK,GACdoU,CAAS,EAMPI,EAAe,IACjBJ,EAoBEK,EAAwB/C,IACjC,MAAMgD,EAAyB1U,IAE3B0R,EADoB1R,EACCwK,OAAO4J,UAAU,EAI1C,OAFA/J,OAAOW,iBAAiBqJ,EAAyBK,GAE1C,KACHrK,OAAOY,oBAAoBoJ,EAAyBK,EAAsB,CAC7E,EAOQC,EAAW,CAAC9C,KAAYU,KAGjC,EAlCyB,MACzB,IACI,MAAMqC,EAAkBlR,aAAaC,QAAQ,sBACrB,OAApBiR,IACAR,EAAgC,SAApBQ,EAEpB,CACA,MAAOziB,GAEP,GAsCJ0iB,E,gGCtFO,MAAMC,EAAc,CAAC1Z,EAAO2Z,EAAW,MAAOC,EAAS,UACnD,IAAIC,KAAKC,aAAaF,EAAQ,CACjCpT,MAAO,WACPmT,SAAUA,IACXI,OAAO/Z,GAGDga,EAAa,CAACC,EAAMC,EAAe,iBAC5C,MAAMC,EAA0B,kBAATF,EAAoB,IAAI7hB,KAAK6hB,GAAQA,EAC5D,OAAO,OAAOE,EAASD,EAAa,C,yDCVjC,MAAME,EAA0B,KACnC,MAAMC,EAAO,OACb,IAGI,OAFA/R,aAAaK,QAAQ0R,EAAMA,GAC3B/R,aAAagS,WAAWD,IACjB,CACX,CACA,MAAOtY,GACH,OAAO,CACX,GAuCSwY,EAAY,KACrB,IAAKH,IACD,MAAO,aAAahiB,KAAKC,QAE7B,IAAI+N,EAASkC,aAAaC,QAAQ,mBAKlC,OAJKnC,IACDA,EAAS,QAAQhO,KAAKC,SAAS0F,KAAKE,SAASU,SAAS,IAAIC,UAAU,EAAG,KACvE0J,aAAaK,QAAQ,kBAAmBvC,IAErCA,CAAM,C,6FCtDjB,MAAMoU,EAAc9jB,GAAQ+jB,MAAMC,KAAKhkB,GACjCikB,EAAcC,GAAU,IAAIC,IAAID,GACzBE,GAAmB,WAAS,SAAQ,CAACpkB,EAAKC,KAAQ,CAC3D+Q,WAAY,IAAImT,IAChBlT,cAAe,IAAIkT,IACnBE,aAAc,IAAIF,IAClBG,gBAAiB,IAAIH,IACrBI,iBAAkB,IAAIJ,IACtBK,gBAAiB,GACjBC,YAAa,GACbC,WAAW,EACXC,aAAc,KACdC,gBAAiB,CAAC5R,EAAQ5R,KACtB,MAAMsO,GAAS,UACTvB,EAAY,IAAIzM,KAChBmjB,EAAe,CACjBpjB,GAAI,QAAQL,KAAQ4R,KAAU7E,EAAUrB,YACxC1L,OACA+M,YACA2W,WAAY,OACZC,SAAU,CAAE/R,SAAQtD,WAGpB1P,EADS,SAAToB,EACKgE,IAAU,CACX4L,WAAY,IAAImT,IAAI/e,EAAM4L,YAAYgU,IAAIhS,GAC1C/B,cAAe,IAAIkT,IAAI/e,EAAM6L,eAAegU,OAAOjS,GAC/C,IAAImR,IAAI/e,EAAM6L,eAAiB7L,EAAM6L,cACzCuT,gBAAiB,IAAIpf,EAAMof,gBAAiBK,GAC5CJ,YAAa,IAAIrf,EAAMqf,YAAaI,KAInCzf,IAAU,CACX6L,cAAe,IAAIkT,IAAI/e,EAAM6L,eAAe+T,IAAIhS,GAChDhC,WAAY,IAAImT,IAAI/e,EAAM4L,YAAYiU,OAAOjS,GACzC,IAAImR,IAAI/e,EAAM4L,YAAc5L,EAAM4L,WACtCwT,gBAAiB,IAAIpf,EAAMof,gBAAiBK,GAC5CJ,YAAa,IAAIrf,EAAMqf,YAAaI,KAE5C,EAEJK,kBAAmB,CAACtR,EAAUxS,KAC1B,MAAMsO,GAAS,UACTvB,EAAY,IAAIzM,KAChBmjB,EAAe,CACjBpjB,GAAI,UAAUL,KAAQwS,KAAYzF,EAAUrB,YAC5C1L,OACA+M,YACA2W,WAAY,SACZC,SAAU,CAAEnR,WAAUlE,WAGtB1P,EADS,SAAToB,EACKgE,IAAU,CACXif,aAAc,IAAIF,IAAI/e,EAAMif,cAAcW,IAAIpR,GAC9C0Q,gBAAiB,IAAIH,IAAI/e,EAAMkf,iBAAiBW,OAAOrR,GACnD,IAAIuQ,IAAI/e,EAAMkf,iBAAmBlf,EAAMkf,gBAC3CE,gBAAiB,IAAIpf,EAAMof,gBAAiBK,GAC5CJ,YAAa,IAAIrf,EAAMqf,YAAaI,KAInCzf,IAAU,CACXkf,gBAAiB,IAAIH,IAAI/e,EAAMkf,iBAAiBU,IAAIpR,GACpDyQ,aAAc,IAAIF,IAAI/e,EAAMif,cAAcY,OAAOrR,GAC7C,IAAIuQ,IAAI/e,EAAMif,cAAgBjf,EAAMif,aACxCG,gBAAiB,IAAIpf,EAAMof,gBAAiBK,GAC5CJ,YAAa,IAAIrf,EAAMqf,YAAaI,KAE5C,EAEJM,mBAAqBC,IACjB,MAAM1V,GAAS,UACTvB,EAAY,IAAIzM,KAChBmjB,EAAe,CACjBpjB,GAAI,oBAAoB2jB,KAAajX,EAAUrB,YAC/C1L,KAAM,WACN+M,YACA2W,WAAY,iBACZC,SAAU,CAAEK,YAAW1V,WAE3B1P,GAAKoF,IAAU,CACXmf,iBAAkB,IAAIJ,IAAI/e,EAAMmf,kBAAkBS,IAAII,GACtDZ,gBAAiB,IAAIpf,EAAMof,gBAAiBK,GAC5CJ,YAAa,IAAIrf,EAAMqf,YAAaI,MACrC,EAEPQ,mBAAqBrS,IACjBhT,GAAKoF,IAAU,CACX4L,WAAY,IAAImT,IAAI/e,EAAM4L,YAAYiU,OAAOjS,GACzC,IAAImR,IAAI/e,EAAM4L,YAAc5L,EAAM4L,WACtCC,cAAe,IAAIkT,IAAI/e,EAAM6L,eAAegU,OAAOjS,GAC/C,IAAImR,IAAI/e,EAAM6L,eAAiB7L,EAAM6L,iBAC1C,EAEPqU,qBAAuB1R,IACnB5T,GAAKoF,IAAU,CACXif,aAAc,IAAIF,IAAI/e,EAAMif,cAAcY,OAAOrR,GAC7C,IAAIuQ,IAAI/e,EAAMif,cAAgBjf,EAAMif,aACxCC,gBAAiB,IAAIH,IAAI/e,EAAMkf,iBAAiBW,OAAOrR,GACnD,IAAIuQ,IAAI/e,EAAMkf,iBAAmBlf,EAAMkf,mBAC5C,EAEPiB,sBAAwBH,IACpBplB,GAAKoF,IAAU,CACXmf,iBAAkB,IAAIJ,IAAI/e,EAAMmf,kBAAkBU,OAAOG,GACrD,IAAIjB,IAAI/e,EAAMmf,kBAAoBnf,EAAMmf,oBAC7C,EAEPiB,aAAeC,IACXzlB,GAAKoF,IAAU,CACXqf,YAAarf,EAAMqf,YAAYvjB,QAAOmL,IAASoZ,EAAY7X,SAASvB,EAAK5K,MACzEkjB,aAAc,IAAIjjB,QACnB,EAEPgkB,aAAehB,IACX1kB,EAAI,CAAE0kB,aAAY,EAEtBiB,sBAAwB3S,IACpB,MAAM5N,EAAQnF,IACd,MAAO,CACH2lB,MAAOxgB,EAAM4L,WAAW6U,IAAI7S,GAC5B8S,SAAU1gB,EAAM6L,cAAc4U,IAAI7S,GACrC,EAEL+S,wBAA0BnS,IACtB,MAAMxO,EAAQnF,IACd,MAAO,CACH2lB,MAAOxgB,EAAMif,aAAawB,IAAIjS,GAC9BkS,SAAU1gB,EAAMkf,gBAAgBuB,IAAIjS,GACvC,EAELoS,mBAAqBZ,GACVnlB,IAAMskB,iBAAiBsB,IAAIT,GAEtCa,oBAAqB,IACVhmB,IAAMwkB,YAEjByB,iBAAkB,KACdlmB,EAAI,CACAykB,YAAa,GACbE,aAAc,IAAIjjB,MACpB,KAEN,CACAwD,KAAM,2BAENC,WAAaC,IAAU,CACnB4L,WAAY8S,EAAW1e,EAAM4L,YAC7BC,cAAe6S,EAAW1e,EAAM6L,eAChCoT,aAAcP,EAAW1e,EAAMif,cAC/BC,gBAAiBR,EAAW1e,EAAMkf,iBAClCC,iBAAkBT,EAAW1e,EAAMmf,kBACnCC,gBAAiBpf,EAAMof,gBACvBC,YAAarf,EAAMqf,YACnBE,aAAcvf,EAAMuf,eAGxBwB,mBAAoB,IAAO/gB,IACnBA,IACAA,EAAM4L,WAAaiT,EAAW7e,EAAM4L,YACpC5L,EAAM6L,cAAgBgT,EAAW7e,EAAM6L,eACvC7L,EAAMif,aAAeJ,EAAW7e,EAAMif,cACtCjf,EAAMkf,gBAAkBL,EAAW7e,EAAMkf,iBACzClf,EAAMmf,iBAAmBN,EAAW7e,EAAMmf,kBAC9C,I,yGCvKR,IAAIvO,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAO3E,GAAKyE,EAAOzE,EAAI,CAAE,CAC1F,SAAS8E,EAASH,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAO3E,GAAKyE,EAAOzE,EAAI,CAAE,CAC7F,SAAS4E,EAAK1T,GAJlB,IAAeyT,EAIazT,EAAO6T,KAAOP,EAAQtT,EAAOyT,QAJ1CA,EAIyDzT,EAAOyT,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBK,KAAKN,EAAWI,EAAW,CAC7GF,GAAMN,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKS,OAClE,GACJ,EAEA,IAAIyP,EAAqB,KAIzB,SAASC,IAEL,MAAMC,EAAOC,UAAUC,WACvB,IAAKF,EACD,MAAO,SAEX,GAAIA,EAAKG,cACL,OAAQH,EAAKG,eACT,IAAK,UACL,IAAK,KACD,MAAO,OACX,IAAK,KAKL,QACI,MAAO,SAJX,IAAK,KACL,IAAK,KACD,MAAO,OAMnB,OAAIH,EAAKI,SACDJ,EAAKI,SAAW,EACT,OACPJ,EAAKI,SAAW,EACT,SACJ,OAEJ,QACX,CA6BA,SAASC,IACL,IACI,MAAMC,EAASvJ,SAASwJ,cAAc,UAChCC,EAAKF,EAAOG,WAAW,UAAYH,EAAOG,WAAW,sBAC3D,IAAKD,EACD,MAAO,MAEX,MAAME,EAAeF,EACfG,EAAYD,EAAaE,aAAa,6BAC5C,IAAKD,EACD,MAAO,SACX,MAAME,EAAWH,EAAaI,aAAaH,EAAUI,0BAA4B,GAC3EC,EAAYN,EAAaI,aAAaH,EAAUM,wBAA0B,GAE1EC,EAAiBL,EAASlf,WAAWK,cACrCmf,EAAeH,EAAUrf,WAAWK,cAE1C,OAAIkf,EAAe5Z,SAAS,WACxB4Z,EAAe5Z,SAAS,YACxB4Z,EAAe5Z,SAAS,WACxB4Z,EAAe5Z,SAAS,eACxB4Z,EAAe5Z,SAAS,aACjB,OAGP4Z,EAAe5Z,SAAS,UACxB6Z,EAAa7Z,SAAS,UACtB4Z,EAAe5Z,SAAS,WACxB4Z,EAAe5Z,SAAS,UACjB,SAEJ,KACX,CACA,MAAOvN,GAEH,MAAO,KACX,CACJ,CAIA,SAASqnB,IAEL,MAAMhM,EAAS6K,UAAUoB,cAAgB,EAEnCC,EAAWrB,UAAUsB,qBAAuB,EAIlD,MAFiB,iEAAiElE,KAAK4C,UAAUuB,WAGzFpM,GAAU,GAAKkM,GAAY,EACpB,MACPlM,GAAU,GAAKkM,GAAY,EACpB,SACJ,OAGHlM,GAAU,GAAKkM,GAAY,EACpB,MACPlM,GAAU,GAAKkM,GAAY,EACpB,SACJ,MAEf,CAIA,SAASG,IACL,MAAMrkB,EAAQ6U,OAAOyP,WACrB,OAAItkB,EAAQ,IACD,QACPA,EAAQ,KACD,SACJ,OACX,CAcO,SAASukB,EAAsBC,GAAe,GACjD,OAAOlS,EAAUgF,UAAM,OAAQ,GAAQ,YAEnC,GAAIoL,IAAuB8B,EACvB,OAAO9B,EAEX,MAAM+B,EAhBd,WACI,MAAMC,EAAK7B,UAAUuB,UAAUxf,cACzB+f,EAAQ,mBAAmB1E,KAAKyE,GAChCE,EAAY,UAAU3E,KAAKyE,GAEjC,MAAO,CAAEC,QAAOC,YAAWC,WADRF,IAAUC,EAEjC,CAU2BE,GACbC,QAxHd,WACI,OAAOzS,EAAUgF,UAAM,OAAQ,GAAQ,YACnC,IAEI,GAAI,eAAgBuL,UAAW,CAC3B,MAAMmC,QAAgBnC,UAAUoC,aAChC,OAAID,EAAQE,SACD,OAEPF,EAAQG,MAAQ,GACT,MACPH,EAAQG,MAAQ,GACT,SACJ,MACX,CACJ,CACA,MAAOxoB,GAEP,CACA,MAAO,SACX,GACJ,CAmGoCyoB,GAO5B,OANA1C,EAAqB9kB,OAAOC,OAAO,CAAE+a,YAAaoL,IAAwBhM,OAAQ6K,UAAUoB,aACnFpB,UAAUoB,cAAgB,EAAI,MAC3BpB,UAAUoB,cAAgB,EAAI,SAAW,OAC7C,SAAUoB,IAAKpC,IAA4BqC,QAAS3C,IAAyB4C,WAAYlB,IAAoBW,QAASD,EAAeS,MAAO,iBAAkB3Q,QAAUgO,UAAU4C,eAAiB,GAAKhB,GAGzM/B,CACX,GACJ,CAKO,SAASgD,IAEZ,GAAIhD,EAAoB,CAEpB,MAAMiD,EAAoB,IACpBC,EAAe,IACfC,EAAY,IACZC,EAAgB,IAWhBC,GATsD,QAAnCrD,EAAmB9J,YAAwB,EAC7B,WAAnC8J,EAAmB9J,YAA2B,EAAI,GAQZ+M,GAPQ,QAA9BjD,EAAmB1K,OAAmB,EACxB,WAA9B0K,EAAmB1K,OAAsB,EAAI,GAO9B4N,GANyB,QAA3BlD,EAAmB2C,IAAgB,EACrB,WAA3B3C,EAAmB2C,IAAmB,EAAI,GAM9BQ,GALoC,SAA/BnD,EAAmB4C,QAAqB,EAC1B,WAA/B5C,EAAmB4C,QAAuB,EAAI,GAK9BQ,EAEpB,OAAIC,EAAgB,KACT,MACPA,EAAgB,KACT,SACJ,MACX,CAEA,MAAO,QACX,CAgBO,SAASC,EAAoBC,EAAaC,EAAe,UAC5D,MAAMC,EAAOT,IAEPU,EAAa,CACf,IAAO,EACP,OAAU,EACV,KAAQ,GAGZ,MAAoB,iBAAhBH,EAEOG,GAAmC,OAAvB1D,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB2C,MAAQ,WAAae,EAAWF,IAC1IE,GAAmC,OAAvB1D,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB1K,SAAW,WAAaoO,EAAWF,GAE9H,sBAAhBD,EAEOG,GAAmC,OAAvB1D,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB4C,UAAY,WAAac,EAAWF,GAElI,oBAAhBD,EAE6G,UAAjF,OAAvBvD,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB4C,WAE3E,QAAjBY,GAEGE,GAAmC,OAAvB1D,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB4C,UAAY,WAAac,EAAWF,IAG/IE,EAAWD,IAASC,EAAWF,EAC1C,CAEA3B,IAAwB8B,OAAM1pB,IACuC,G,kJCjQ9D,MAAM2pB,GAAe,SAAO,CAAChqB,EAAKC,KAAQ,CAC7CgqB,SAAU,GACVC,QAAQ,EACRC,aAAa,EACb/pB,WAAW,EACXC,MAAO,KACP+pB,YAAa,OACbC,WAAatK,IACT,MAAMte,GAAK,SACL0M,EAAY,IAAIzM,KAChB4oB,EAAahpB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGwe,GAAU,CAAEte,KAAI0M,cAKnE,OAHAnO,GAAKoF,IAAU,CACX6kB,SAAU,IAAI7kB,EAAM6kB,SAAUK,OAE3B7oB,CAAE,EAEb8oB,eAAgB,CAACC,EAAMC,KACnB,MAAMC,EAA2CD,EAC3C1K,EAAU,CACZ3e,KAAM,KAAYupB,KAClBF,OAAQC,EACRF,QAEJ,OAAOvqB,IAAMoqB,WAAWtK,EAAQ,EAEpC6K,cAAe,CAACnpB,EAAIQ,KAEhBjC,GAAKoF,IAAU,CACX6kB,SAAU7kB,EAAM6kB,SAAS/nB,KAAK2oB,GAAQA,EAAIppB,KAAOA,EAAKH,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGspB,GAAM5oB,GAAW4oB,OACxG,EAEPC,cAAgBrpB,IACZzB,GAAKoF,IAAU,CACX6kB,SAAU7kB,EAAM6kB,SAAS/oB,QAAQ2pB,GAAQA,EAAIppB,KAAOA,OACrD,EAEPspB,cAAe,KACX/qB,EAAI,CAAEiqB,SAAU,IAAK,EAEzBe,WAAY,KACR,MAAMC,EAAkBhrB,IAAMiqB,OAC9BlqB,EAAI,CACAkqB,QAASe,EACTd,aAAa,GACf,EAENe,eAAgB,KACZ,MAAMC,EAAuBlrB,IAAMkqB,YACnCnqB,EAAI,CAAEmqB,aAAcgB,GAAuB,EAE/CtoB,WAAazC,IACTJ,EAAI,CAAEI,aAAY,EAEtB0C,SAAWzC,IACPL,EAAI,CAAEK,SAAQ,EAElB+qB,eAAiBC,IACbrrB,EAAI,CAAEoqB,YAAaiB,GAAO,EAE9BC,UAAYpB,IACRlqB,EAAI,CAAEkqB,UAAS,M","sources":["webpack://StylistWidget/webpack/universalModuleDefinition","webpack://StylistWidget/./src/store/tryOnStore.ts","webpack://StylistWidget/./src/utils/mockData.ts","webpack://StylistWidget/./src/store/recommendationStore.ts","webpack://StylistWidget/./src/storeMonitor.ts","webpack://StylistWidget/./src/types/chat.ts","webpack://StylistWidget/./src/utils/environment.ts","webpack://StylistWidget/./src/utils/analytics.ts","webpack://StylistWidget/./src/utils/demoModeToggle.tsx","webpack://StylistWidget/./src/utils/demoFlows.ts","webpack://StylistWidget/./src/types/tryOn.ts","webpack://StylistWidget/./src/utils/productMappings.ts","webpack://StylistWidget/./src/utils/performanceMonitoring.ts","webpack://StylistWidget/./src/utils/animationUtils.ts","webpack://StylistWidget/./src/store/userStore.ts","webpack://StylistWidget/./src/utils/debugMode.ts","webpack://StylistWidget/./src/utils/formatters.ts","webpack://StylistWidget/./src/utils/localStorage.ts","webpack://StylistWidget/./src/store/feedbackStore.ts","webpack://StylistWidget/./src/utils/deviceCapabilities.ts","webpack://StylistWidget/./src/store/chatStore.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StylistWidget\"] = factory();\n\telse\n\t\troot[\"StylistWidget\"] = factory();\n})(self, function() {\nreturn ","// Store for managing virtual try-on state\nimport { create } from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\nimport { BackgroundRemovalMethod, GarmentType } from '../types/tryOn';\nimport { getDefaultBodyPosition } from '../services/image-processing/imagePositioning';\n// Default settings\nconst DEFAULT_SETTINGS = {\n    preferredBackgroundRemovalMethod: BackgroundRemovalMethod.TENSORFLOW,\n    removeBackgroundAutomatically: true,\n    showGuidelines: true,\n    highQualityRendering: true,\n    defaultGarmentScale: {\n        [GarmentType.TOP]: 0.8,\n        [GarmentType.BOTTOM]: 0.7,\n        [GarmentType.DRESS]: 0.9,\n        [GarmentType.OUTERWEAR]: 0.85,\n        [GarmentType.SHOES]: 0.5,\n        [GarmentType.ACCESSORY]: 0.4\n    },\n    defaultGarmentOffset: {\n        [GarmentType.TOP]: { x: 0, y: -50 },\n        [GarmentType.BOTTOM]: { x: 0, y: 100 },\n        [GarmentType.DRESS]: { x: 0, y: 0 },\n        [GarmentType.OUTERWEAR]: { x: 0, y: -30 },\n        [GarmentType.SHOES]: { x: 0, y: 200 },\n        [GarmentType.ACCESSORY]: { x: 0, y: -150 }\n    }\n};\nexport const useTryOnStore = create()(devtools(persist((set, get) => ({\n    // Current try-on state\n    currentOutfit: null,\n    userImage: null,\n    isLoading: false,\n    error: null,\n    // Settings\n    settings: DEFAULT_SETTINGS,\n    // Saved results\n    savedResults: [],\n    // Canvas state\n    canvasWidth: 600,\n    canvasHeight: 800,\n    // Modal state\n    isTryOnModalOpen: false,\n    isUploadModalOpen: false,\n    // Actions\n    setCurrentOutfit: (outfit) => {\n        set({ currentOutfit: outfit });\n    },\n    addGarmentToOutfit: (garment) => {\n        const { currentOutfit } = get();\n        if (!currentOutfit) {\n            // Create a new outfit if none exists\n            const newOutfit = {\n                id: `outfit_${Date.now()}`,\n                garments: [garment],\n                createdAt: new Date()\n            };\n            set({ currentOutfit: newOutfit });\n        }\n        else {\n            // Remove any existing garment of the same type if it has the same body position\n            const filteredGarments = currentOutfit.garments.filter((g) => !(g.type === garment.type && g.bodyPosition === garment.bodyPosition));\n            // Add the new garment\n            set({\n                currentOutfit: Object.assign(Object.assign({}, currentOutfit), { garments: [...filteredGarments, garment] })\n            });\n        }\n    },\n    removeGarmentFromOutfit: (garmentId) => {\n        const { currentOutfit } = get();\n        if (currentOutfit) {\n            const updatedGarments = currentOutfit.garments.filter((g) => g.id !== garmentId);\n            set({\n                currentOutfit: Object.assign(Object.assign({}, currentOutfit), { garments: updatedGarments })\n            });\n        }\n    },\n    updateGarment: (garmentId, updates) => {\n        const { currentOutfit } = get();\n        if (currentOutfit) {\n            const updatedGarments = currentOutfit.garments.map((g) => g.id === garmentId ? Object.assign(Object.assign({}, g), updates) : g);\n            set({\n                currentOutfit: Object.assign(Object.assign({}, currentOutfit), { garments: updatedGarments })\n            });\n        }\n    },\n    setUserImage: (image) => {\n        set({ userImage: image });\n        // Also update the current outfit if it exists\n        const { currentOutfit } = get();\n        if (currentOutfit) {\n            // Cast image to UserImageInfo | undefined to match the expected type\n            const userImageForOutfit = image;\n            set({\n                currentOutfit: Object.assign(Object.assign({}, currentOutfit), { userImage: userImageForOutfit })\n            });\n        }\n    },\n    updateUserImage: (updates) => {\n        const { userImage } = get();\n        if (userImage) {\n            const updatedImage = Object.assign(Object.assign({}, userImage), updates);\n            set({ userImage: updatedImage });\n            // Also update the current outfit if it exists\n            const { currentOutfit } = get();\n            if (currentOutfit) {\n                set({\n                    currentOutfit: Object.assign(Object.assign({}, currentOutfit), { userImage: updatedImage })\n                });\n            }\n        }\n    },\n    clearUserImage: () => {\n        set({ userImage: null });\n        // Also update the current outfit if it exists\n        const { currentOutfit } = get();\n        if (currentOutfit) {\n            // Set to undefined to match expected type\n            const updatedOutfit = Object.assign(Object.assign({}, currentOutfit), { userImage: undefined });\n            set({ currentOutfit: updatedOutfit });\n        }\n    },\n    updateOutfit: (updates) => {\n        const { currentOutfit } = get();\n        if (currentOutfit) {\n            set({\n                currentOutfit: Object.assign(Object.assign({}, currentOutfit), updates)\n            });\n        }\n    },\n    setSettings: (settings) => {\n        set({\n            settings: Object.assign(Object.assign({}, get().settings), settings)\n        });\n    },\n    setLoading: (isLoading) => {\n        set({ isLoading });\n    },\n    setError: (error) => {\n        set({ error });\n    },\n    saveResult: (result) => {\n        const results = [...get().savedResults];\n        // Check if this result already exists\n        const existingIndex = results.findIndex((r) => r.id === result.id);\n        if (existingIndex >= 0) {\n            // Update existing result\n            results[existingIndex] = result;\n        }\n        else {\n            // Add new result\n            results.push(result);\n        }\n        set({ savedResults: results });\n    },\n    deleteSavedResult: (resultId) => {\n        const filteredResults = get().savedResults.filter((r) => r.id !== resultId);\n        set({ savedResults: filteredResults });\n    },\n    setCanvasDimensions: (width, height) => {\n        set({ canvasWidth: width, canvasHeight: height });\n    },\n    openTryOnModal: () => {\n        set({ isTryOnModalOpen: true });\n    },\n    closeTryOnModal: () => {\n        set({ isTryOnModalOpen: false });\n    },\n    openUploadModal: () => {\n        set({ isUploadModalOpen: true });\n    },\n    closeUploadModal: () => {\n        set({ isUploadModalOpen: false });\n    },\n    reset: () => {\n        set({\n            currentOutfit: null,\n            userImage: null,\n            isLoading: false,\n            error: null\n        });\n    },\n    // Integration methods\n    startNewTryOn: (productImage, productType) => {\n        const { settings } = get();\n        const state = get();\n        // Create a new outfit if none exists\n        const outfit = state.currentOutfit || {\n            id: crypto.randomUUID(),\n            garments: [],\n            createdAt: new Date()\n        };\n        // Create a garment info object\n        const newGarment = {\n            id: crypto.randomUUID(),\n            type: productType,\n            url: typeof productImage === 'string' ? productImage : URL.createObjectURL(productImage),\n            bodyPosition: getDefaultBodyPosition(productType),\n            zIndex: outfit.garments.length + 1,\n            layerIndex: outfit.garments.length,\n            scale: settings.defaultGarmentScale[productType] || 1,\n            offset: settings.defaultGarmentOffset[productType] || { x: 0, y: 0 },\n            rotation: 0,\n            withoutBackground: true\n        };\n        // Add the garment to the outfit\n        const updatedGarments = [...(outfit.garments || []), newGarment];\n        set({\n            currentOutfit: Object.assign(Object.assign({}, outfit), { garments: updatedGarments })\n        });\n    },\n    tryOnOutfit: (outfit) => {\n        set({ currentOutfit: outfit });\n    }\n}), {\n    name: 'stylist-try-on-storage',\n    // Only persist settings and saved results\n    partialize: (state) => ({\n        settings: state.settings,\n        savedResults: state.savedResults\n    })\n}), { name: 'try-on-store' }));\n","// Product category data\nconst CATEGORIES = {\n    TOPS: 'Tops',\n    BOTTOMS: 'Bottoms',\n    DRESSES: 'Dresses',\n    OUTERWEAR: 'Outerwear',\n    ACCESSORIES: 'Accessories',\n    FOOTWEAR: 'Footwear',\n    BAGS: 'Bags',\n    JEWELRY: 'Jewelry'\n};\n// Array of colors with hex codes for visual consistency\nconst COLORS = [\n    { name: 'black', hex: '#000000' },\n    { name: 'white', hex: '#FFFFFF' },\n    { name: 'navy', hex: '#000080' },\n    { name: 'gray', hex: '#808080' },\n    { name: 'beige', hex: '#F5F5DC' },\n    { name: 'brown', hex: '#A52A2A' },\n    { name: 'red', hex: '#FF0000' },\n    { name: 'maroon', hex: '#800000' },\n    { name: 'pink', hex: '#FFC0CB' },\n    { name: 'purple', hex: '#800080' },\n    { name: 'blue', hex: '#0000FF' },\n    { name: 'light blue', hex: '#ADD8E6' },\n    { name: 'green', hex: '#008000' },\n    { name: 'olive', hex: '#808000' },\n    { name: 'yellow', hex: '#FFFF00' },\n    { name: 'orange', hex: '#FFA500' },\n    { name: 'teal', hex: '#008080' },\n    { name: 'cyan', hex: '#00FFFF' }\n];\n// Standard size ranges\nconst SIZES = {\n    TOPS_NUMERIC: ['XS', 'S', 'M', 'L', 'XL', 'XXL'],\n    TOPS_LETTER: ['XS', 'S', 'M', 'L', 'XL', 'XXL'],\n    BOTTOMS_PANTS: ['24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '36', '38', '40', '42'],\n    BOTTOMS_JEANS: ['00', '0', '2', '4', '6', '8', '10', '12', '14', '16', '18'],\n    DRESSES: ['0', '2', '4', '6', '8', '10', '12', '14', '16'],\n    SHOES_US: ['5', '5.5', '6', '6.5', '7', '7.5', '8', '8.5', '9', '9.5', '10', '11', '12']\n};\n// Patterns and materials\nconst PATTERNS = [\n    'solid', 'striped', 'checked', 'plaid', 'floral', 'polka dot',\n    'geometric', 'animal print', 'abstract', 'camouflage', 'paisley',\n    'herringbone', 'houndstooth', 'chevron', 'argyle'\n];\nconst MATERIALS = [\n    'cotton', 'polyester', 'linen', 'silk', 'leather', 'wool',\n    'cashmere', 'denim', 'suede', 'velvet', 'satin', 'nylon',\n    'chiffon', 'jersey', 'tweed', 'twill', 'corduroy'\n];\n// Top brands\nconst BRANDS = [\n    'LuxeStyle', 'UrbanFlair', 'EcoChic', 'ModernEssentials', 'CoastalBreeze',\n    'NordicMinimal', 'VintageRevival', 'MetroEdge', 'ClassicCouture', 'AthleticPrime',\n    'EleganceNoir', 'ArtisanLeather', 'PremiumBlends', 'StreetSmart', 'SustainableFashion',\n    'FrenchRiviera', 'ItalianCraft', 'JapaneseMinimal', 'ScandinavianSimple', 'CaliforniaCozy'\n];\n// Retailers for demo purposes\nconst RETAILERS = [\n    'demoshop', 'stylist_demo', 'fashionretailer', 'styleoutlet', 'demoboutique'\n];\n// Price ranges with distribution\nconst PRICE_RANGES = {\n    BUDGET: { min: 19.99, max: 79.99 },\n    MIDRANGE: { min: 79.99, max: 199.99 },\n    PREMIUM: { min: 199.99, max: 499.99 },\n    LUXURY: { min: 499.99, max: 1999.99 }\n};\n// Generate a price within a given range\nconst generatePrice = (range) => {\n    const { min, max } = PRICE_RANGES[range];\n    const price = min + Math.random() * (max - min);\n    return Math.round(price * 100) / 100; // Round to 2 decimal places\n};\n// Function to generate a sale price lower than the original price\nconst generateSalePrice = (originalPrice) => {\n    if (Math.random() > 0.7) { // 30% chance of having a sale price\n        const discountPercent = 0.1 + Math.random() * 0.4; // 10% to 50% discount\n        return Math.round((originalPrice * (1 - discountPercent)) * 100) / 100;\n    }\n    return undefined;\n};\n// Generate a random match score between 0.7 and 1.0\nconst generateMatchScore = () => {\n    return 0.7 + Math.random() * 0.3;\n};\n// Generate match reasons based on category and score\nconst generateMatchReasons = (category, score) => {\n    const allReasons = [\n        'Matches your style profile',\n        'Based on your preferences',\n        'Popular in your size',\n        'Complements your previous purchases',\n        'Trending item',\n        'Highly rated by users with similar tastes',\n        'Versatile addition to your wardrobe',\n        'Perfect for your selected occasions',\n        'Matches colors in your style profile',\n        'Similar to items you\\'ve liked',\n        'Recommended for your body type',\n        'Good value for quality',\n        'Sustainable and eco-friendly',\n        'Seasonally appropriate'\n    ];\n    const categoryReasons = {\n        [CATEGORIES.TOPS]: [\n            'Flattering neckline for your body type',\n            'Comfortable fit',\n            'Versatile styling options',\n            'Easy to layer'\n        ],\n        [CATEGORIES.BOTTOMS]: [\n            'Flattering fit for your body type',\n            'Comfortable waistband',\n            'Versatile styling options',\n            'Perfect length'\n        ],\n        [CATEGORIES.DRESSES]: [\n            'Flattering silhouette',\n            'Perfect for your events',\n            'Comfortable fit',\n            'Seasonally appropriate'\n        ],\n        [CATEGORIES.OUTERWEAR]: [\n            'Good for your local climate',\n            'Versatile layering piece',\n            'Classic style that won\\'t go out of fashion',\n            'Weather-appropriate'\n        ],\n        [CATEGORIES.ACCESSORIES]: [\n            'Complements many outfits',\n            'Adds visual interest',\n            'Trending accessory',\n            'Versatile styling options'\n        ],\n        [CATEGORIES.FOOTWEAR]: [\n            'Comfortable for all-day wear',\n            'Matches multiple outfits',\n            'Appropriate for your lifestyle',\n            'Good arch support'\n        ],\n        [CATEGORIES.BAGS]: [\n            'Practical storage options',\n            'Versatile styling',\n            'Perfect for your lifestyle',\n            'Quality construction'\n        ],\n        [CATEGORIES.JEWELRY]: [\n            'Complements your skin tone',\n            'Versatile styling options',\n            'Matches your other accessories',\n            'Quality materials'\n        ]\n    };\n    // Select 2-4 general reasons\n    const numGeneralReasons = 2 + Math.floor(Math.random() * 3);\n    const shuffledGeneral = [...allReasons].sort(() => 0.5 - Math.random());\n    const selectedGeneral = shuffledGeneral.slice(0, numGeneralReasons);\n    // Add 1-2 category-specific reasons if available\n    const specificReasons = categoryReasons[category] || [];\n    const numSpecificReasons = Math.min(1 + Math.floor(Math.random() * 2), specificReasons.length);\n    const shuffledSpecific = [...specificReasons].sort(() => 0.5 - Math.random());\n    const selectedSpecific = shuffledSpecific.slice(0, numSpecificReasons);\n    // If match score is high, add a confidence reason\n    const reasons = [...selectedGeneral, ...selectedSpecific];\n    if (score > 0.9) {\n        reasons.unshift('Perfect match for your style');\n    }\n    else if (score > 0.85) {\n        reasons.unshift('Great match for your style');\n    }\n    return reasons;\n};\n// Function to generate a unique ID with prefix\nconst generateId = (prefix) => {\n    return `${prefix}_${Math.random().toString(36).substring(2, 10)}`;\n};\n// Function to generate a realistic product name\nconst generateProductName = (category) => {\n    const adjectives = [\n        'Classic', 'Modern', 'Slim', 'Relaxed', 'Vintage', 'Contemporary',\n        'Essential', 'Premium', 'Signature', 'Deluxe', 'Everyday', 'Luxury',\n        'Casual', 'Elegant', 'Trendy', 'Timeless', 'Comfort', 'Professional'\n    ];\n    const categoryItems = {\n        [CATEGORIES.TOPS]: [\n            'T-Shirt', 'Button-Down Shirt', 'Blouse', 'Sweater', 'Cardigan',\n            'Tank Top', 'Turtleneck', 'Polo Shirt', 'Tunic', 'Crop Top',\n            'Henley', 'Sweatshirt', 'Hoodie', 'V-Neck Tee', 'Camisole'\n        ],\n        [CATEGORIES.BOTTOMS]: [\n            'Jeans', 'Trousers', 'Pants', 'Shorts', 'Skirt', 'Chinos',\n            'Leggings', 'Joggers', 'Cargo Pants', 'Culottes', 'Dress Pants',\n            'Khakis', 'Palazzo Pants', 'Capris', 'Jeggings'\n        ],\n        [CATEGORIES.DRESSES]: [\n            'Maxi Dress', 'Midi Dress', 'Shift Dress', 'Wrap Dress', 'A-Line Dress',\n            'Bodycon Dress', 'Slip Dress', 'Shirt Dress', 'Cocktail Dress', 'Sundress',\n            'Sweater Dress', 'Sheath Dress', 'Evening Gown', 'Fit and Flare Dress', 'Tunic Dress'\n        ],\n        [CATEGORIES.OUTERWEAR]: [\n            'Jacket', 'Coat', 'Blazer', 'Trench Coat', 'Parka', 'Windbreaker',\n            'Peacoat', 'Cardigan', 'Denim Jacket', 'Leather Jacket', 'Bomber Jacket',\n            'Puffer Jacket', 'Overcoat', 'Rain Jacket', 'Fleece Jacket'\n        ],\n        [CATEGORIES.ACCESSORIES]: [\n            'Scarf', 'Hat', 'Belt', 'Gloves', 'Sunglasses', 'Tie', 'Headband',\n            'Watch', 'Wallet', 'Hair Clip', 'Beanie', 'Beret', 'Fedora',\n            'Bandana', 'Suspenders'\n        ],\n        [CATEGORIES.FOOTWEAR]: [\n            'Sneakers', 'Boots', 'Loafers', 'Sandals', 'Heels', 'Flats',\n            'Oxford Shoes', 'Ankle Boots', 'Espadrilles', 'Mules', 'Pumps',\n            'Slippers', 'Athletic Shoes', 'Wedges', 'Boat Shoes'\n        ],\n        [CATEGORIES.BAGS]: [\n            'Tote Bag', 'Crossbody Bag', 'Backpack', 'Handbag', 'Clutch',\n            'Shoulder Bag', 'Wallet', 'Weekender Bag', 'Messenger Bag', 'Satchel',\n            'Bucket Bag', 'Hobo Bag', 'Briefcase', 'Duffel Bag', 'Wristlet'\n        ],\n        [CATEGORIES.JEWELRY]: [\n            'Necklace', 'Earrings', 'Bracelet', 'Ring', 'Pendant', 'Anklet',\n            'Brooch', 'Cufflinks', 'Watch', 'Charm', 'Bangle', 'Choker',\n            'Stud Earrings', 'Hoop Earrings', 'Statement Necklace'\n        ]\n    };\n    const descriptors = [\n        'with Pocket', 'with Button Detail', 'with Zipper', 'with Embroidery',\n        'with Ruffle', 'with Sequins', 'with Beading', 'with Lace', 'with Fringe',\n        'Printed', 'Textured', 'Striped', 'Patterned', 'Pleated', 'Distressed',\n        'High-Waisted', 'Cropped', 'Oversized', 'Fitted', 'Tailored', 'Relaxed Fit'\n    ];\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const items = categoryItems[category] || ['Item'];\n    const randomItem = items[Math.floor(Math.random() * items.length)];\n    // 50% chance to add a descriptor\n    const includeDescriptor = Math.random() > 0.5;\n    const randomDescriptor = includeDescriptor\n        ? ' ' + descriptors[Math.floor(Math.random() * descriptors.length)]\n        : '';\n    return `${randomAdjective} ${randomItem}${randomDescriptor}`;\n};\n// Function to create an image URL\nconst createImageUrl = (category, id) => {\n    // In a real app, these would be unique URLs to actual product images\n    // For this demo, we'll generate placeholder URLs with meaningful text\n    const baseUrl = 'https://via.placeholder.com/300x400';\n    const categorySlug = category.toLowerCase().replace(/\\s+/g, '-');\n    // Create multiple image variations for the same product\n    const urls = [];\n    const mainUrl = `${baseUrl}?text=${categorySlug}-${id.split('_')[1]}`;\n    urls.push(mainUrl);\n    // Add additional views for some items (front, back, side)\n    if (Math.random() > 0.5) {\n        urls.push(`${mainUrl}-front`);\n        urls.push(`${mainUrl}-back`);\n        if (Math.random() > 0.7) {\n            urls.push(`${mainUrl}-detail`);\n        }\n    }\n    return urls;\n};\n// Function to generate product URL\nconst generateProductUrl = (id, retailerId, name) => {\n    const slug = name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n    return `https://example.com/shop/${retailerId}/products/${slug}-${id}`;\n};\n// Function to generate a single product\nconst generateProduct = (category) => {\n    const productCategory = category || Object.values(CATEGORIES)[Math.floor(Math.random() * Object.values(CATEGORIES).length)];\n    const id = generateId('item');\n    const brand = BRANDS[Math.floor(Math.random() * BRANDS.length)];\n    const name = generateProductName(productCategory);\n    // Determine price range based on category\n    let priceRange = 'MIDRANGE';\n    if (productCategory === CATEGORIES.ACCESSORIES || productCategory === CATEGORIES.TOPS) {\n        priceRange = Math.random() > 0.7 ? 'MIDRANGE' : 'BUDGET';\n    }\n    else if (productCategory === CATEGORIES.OUTERWEAR || productCategory === CATEGORIES.DRESSES) {\n        priceRange = Math.random() > 0.6 ? 'PREMIUM' : 'MIDRANGE';\n    }\n    else if (productCategory === CATEGORIES.FOOTWEAR || productCategory === CATEGORIES.BAGS) {\n        priceRange = Math.random() > 0.5 ? 'PREMIUM' : Math.random() > 0.5 ? 'MIDRANGE' : 'LUXURY';\n    }\n    const price = generatePrice(priceRange);\n    const salePrice = generateSalePrice(price);\n    const retailerId = RETAILERS[Math.floor(Math.random() * RETAILERS.length)];\n    // Select 1-3 colors\n    const numberOfColors = 1 + Math.floor(Math.random() * 3);\n    const shuffledColors = [...COLORS].sort(() => 0.5 - Math.random());\n    const selectedColors = shuffledColors.slice(0, numberOfColors).map(c => c.name);\n    // Select sizes based on category\n    let sizeArray = [];\n    switch (productCategory) {\n        case CATEGORIES.TOPS:\n            sizeArray = SIZES.TOPS_LETTER;\n            break;\n        case CATEGORIES.BOTTOMS:\n            sizeArray = Math.random() > 0.5 ? SIZES.BOTTOMS_PANTS : SIZES.BOTTOMS_JEANS;\n            break;\n        case CATEGORIES.DRESSES:\n            sizeArray = SIZES.DRESSES;\n            break;\n        case CATEGORIES.FOOTWEAR:\n            sizeArray = SIZES.SHOES_US;\n            break;\n        default:\n            sizeArray = SIZES.TOPS_LETTER;\n    }\n    // Instead of all sizes, select a subset that's available\n    const numberOfSizes = Math.max(3, Math.floor(Math.random() * sizeArray.length));\n    const shuffledSizes = [...sizeArray].sort(() => 0.5 - Math.random());\n    const selectedSizes = shuffledSizes.slice(0, numberOfSizes);\n    // Generate match info\n    const matchScore = generateMatchScore();\n    // Create the product object\n    return {\n        id,\n        name,\n        brand,\n        category: productCategory,\n        price,\n        salePrice,\n        retailerId,\n        colors: selectedColors,\n        sizes: selectedSizes,\n        imageUrls: createImageUrl(productCategory, id),\n        url: generateProductUrl(id, retailerId, name),\n        matchScore,\n        matchReasons: generateMatchReasons(productCategory, matchScore),\n        inStock: Math.random() > 0.1,\n        materials: [MATERIALS[Math.floor(Math.random() * MATERIALS.length)]],\n        patterns: Math.random() > 0.7\n            ? [PATTERNS[Math.floor(Math.random() * PATTERNS.length)]]\n            : ['solid']\n    };\n};\n// Function to generate a collection of products\nconst generateProducts = (count) => {\n    const products = [];\n    // Ensure we have a good distribution of categories\n    const categoryDistribution = {\n        [CATEGORIES.TOPS]: Math.ceil(count * 0.25),\n        [CATEGORIES.BOTTOMS]: Math.ceil(count * 0.2),\n        [CATEGORIES.DRESSES]: Math.ceil(count * 0.1),\n        [CATEGORIES.OUTERWEAR]: Math.ceil(count * 0.1),\n        [CATEGORIES.ACCESSORIES]: Math.ceil(count * 0.1),\n        [CATEGORIES.FOOTWEAR]: Math.ceil(count * 0.1),\n        [CATEGORIES.BAGS]: Math.ceil(count * 0.1),\n        [CATEGORIES.JEWELRY]: Math.ceil(count * 0.05)\n    };\n    // Generate products for each category\n    Object.entries(categoryDistribution).forEach(([category, categoryCount]) => {\n        for (let i = 0; i < categoryCount; i++) {\n            products.push(generateProduct(category));\n        }\n    });\n    // If we haven't reached the desired count, add random products\n    const remaining = count - products.length;\n    for (let i = 0; i < remaining; i++) {\n        products.push(generateProduct());\n    }\n    return products;\n};\n// Function to generate outfit name\nconst generateOutfitName = (occasion) => {\n    const prefixes = [\n        'Classic', 'Modern', 'Elegant', 'Casual', 'Trendy', 'Chic', 'Urban',\n        'Professional', 'Relaxed', 'Bold', 'Minimalist', 'Sophisticated',\n        'Effortless', 'Contemporary', 'Playful', 'Structured', 'Refined'\n    ];\n    const outfitTypes = [\n        'Look', 'Ensemble', 'Outfit', 'Style', 'Attire', 'Combination', 'Set'\n    ];\n    const occasionDescriptors = {\n        'casual': ['Weekend', 'Everyday', 'Daytime', 'Relaxed', 'Brunch', 'Coffee Run'],\n        'work': ['Office', 'Business', 'Professional', 'Corporate', 'Meeting'],\n        'evening': ['Dinner', 'Date Night', 'Cocktail', 'Evening', 'Party'],\n        'formal': ['Formal', 'Upscale', 'Elegant', 'Black Tie', 'Gala'],\n        'vacation': ['Vacation', 'Resort', 'Beach', 'Getaway', 'Cruise'],\n        'active': ['Active', 'Workout', 'Athleisure', 'Sporty', 'Fitness']\n    };\n    const prefix = prefixes[Math.floor(Math.random() * prefixes.length)];\n    const outfitType = outfitTypes[Math.floor(Math.random() * outfitTypes.length)];\n    if (occasion && occasionDescriptors[occasion.toLowerCase()]) {\n        const occasionPrefix = occasionDescriptors[occasion.toLowerCase()][Math.floor(Math.random() * occasionDescriptors[occasion.toLowerCase()].length)];\n        return `${prefix} ${occasionPrefix} ${outfitType}`;\n    }\n    return `${prefix} ${outfitType}`;\n};\n// Generate occasions\nconst OCCASIONS = [\n    'casual', 'work', 'evening', 'formal', 'vacation', 'active'\n];\n// Function to generate a well-balanced outfit\nconst generateOutfit = (products, occasion) => {\n    var _a, _b;\n    const outfitOccasion = occasion || OCCASIONS[Math.floor(Math.random() * OCCASIONS.length)];\n    const id = generateId('outfit');\n    // We need to select items that make sense together\n    // At minimum: top, bottom or dress, and footwear\n    // Optionally: outerwear, accessories\n    // Filter products by category\n    const topItems = products.filter(p => p.category === CATEGORIES.TOPS);\n    const bottomItems = products.filter(p => p.category === CATEGORIES.BOTTOMS);\n    const dressItems = products.filter(p => p.category === CATEGORIES.DRESSES);\n    const footwearItems = products.filter(p => p.category === CATEGORIES.FOOTWEAR);\n    const outerwearItems = products.filter(p => p.category === CATEGORIES.OUTERWEAR);\n    const accessoryItems = products.filter(p => p.category === CATEGORIES.ACCESSORIES);\n    const bagItems = products.filter(p => p.category === CATEGORIES.BAGS);\n    const jewelryItems = products.filter(p => p.category === CATEGORIES.JEWELRY);\n    const selectedItems = [];\n    // Decide if outfit is dress-based or separate-based\n    const isDressBased = Math.random() > 0.6; // 40% chance for dress outfit\n    if (isDressBased && dressItems.length > 0) {\n        // Add a dress\n        selectedItems.push(dressItems[Math.floor(Math.random() * dressItems.length)]);\n    }\n    else {\n        // Add a top\n        if (topItems.length > 0) {\n            selectedItems.push(topItems[Math.floor(Math.random() * topItems.length)]);\n        }\n        // Add a bottom\n        if (bottomItems.length > 0) {\n            selectedItems.push(bottomItems[Math.floor(Math.random() * bottomItems.length)]);\n        }\n    }\n    // Add footwear (always)\n    if (footwearItems.length > 0) {\n        selectedItems.push(footwearItems[Math.floor(Math.random() * footwearItems.length)]);\n    }\n    // Maybe add outerwear (30% chance)\n    if (outerwearItems.length > 0 && Math.random() > 0.7) {\n        selectedItems.push(outerwearItems[Math.floor(Math.random() * outerwearItems.length)]);\n    }\n    // Maybe add an accessory (50% chance)\n    if (accessoryItems.length > 0 && Math.random() > 0.5) {\n        selectedItems.push(accessoryItems[Math.floor(Math.random() * accessoryItems.length)]);\n    }\n    // Maybe add a bag (40% chance)\n    if (bagItems.length > 0 && Math.random() > 0.6) {\n        selectedItems.push(bagItems[Math.floor(Math.random() * bagItems.length)]);\n    }\n    // Maybe add jewelry (30% chance)\n    if (jewelryItems.length > 0 && Math.random() > 0.7) {\n        selectedItems.push(jewelryItems[Math.floor(Math.random() * jewelryItems.length)]);\n    }\n    // Calculate average match score for the outfit\n    const totalMatchScore = selectedItems.reduce((sum, item) => sum + item.matchScore, 0);\n    const avgMatchScore = totalMatchScore / selectedItems.length;\n    // Generate outfit-specific match reasons\n    const occasionAdjectives = {\n        'casual': ['relaxed', 'comfortable', 'versatile', 'easy-going'],\n        'work': ['professional', 'polished', 'sophisticated', 'structured'],\n        'evening': ['elegant', 'refined', 'chic', 'elevated'],\n        'formal': ['formal', 'luxurious', 'dressy', 'upscale'],\n        'vacation': ['vibrant', 'relaxed', 'playful', 'easy'],\n        'active': ['functional', 'comfortable', 'practical', 'sporty']\n    };\n    const adjective = ((_a = occasionAdjectives[outfitOccasion]) === null || _a === void 0 ? void 0 : _a[Math.floor(Math.random() * (((_b = occasionAdjectives[outfitOccasion]) === null || _b === void 0 ? void 0 : _b.length) || 1))]) || 'stylish';\n    const outfitMatchReasons = [\n        `Perfect ${adjective} combination for ${outfitOccasion} occasions`,\n        `Coordinates well for a cohesive look`,\n        `Colors and styles complement each other`\n    ];\n    // If high match score, add confidence reason\n    if (avgMatchScore > 0.9) {\n        outfitMatchReasons.unshift('Perfect outfit match for your style profile');\n    }\n    else if (avgMatchScore > 0.85) {\n        outfitMatchReasons.unshift('Great outfit match for your preferences');\n    }\n    return {\n        id,\n        name: generateOutfitName(outfitOccasion),\n        occasion: outfitOccasion,\n        items: selectedItems,\n        matchScore: avgMatchScore,\n        matchReasons: outfitMatchReasons\n    };\n};\n// Function to generate outfits\nconst generateOutfits = (products, count) => {\n    const outfits = [];\n    // Ensure we have a good distribution of occasions\n    const occasionDistribution = OCCASIONS.reduce((acc, occasion) => {\n        acc[occasion] = Math.max(1, Math.floor(count / OCCASIONS.length));\n        return acc;\n    }, {});\n    // Generate outfits for each occasion\n    Object.entries(occasionDistribution).forEach(([occasion, occasionCount]) => {\n        for (let i = 0; i < occasionCount; i++) {\n            outfits.push(generateOutfit(products, occasion));\n        }\n    });\n    // If we haven't reached the desired count, add random outfits\n    const remaining = count - outfits.length;\n    for (let i = 0; i < remaining; i++) {\n        outfits.push(generateOutfit(products));\n    }\n    return outfits;\n};\n// Celebrity names for social proof\nconst CELEBRITIES = [\n    'Emma Watson', 'Zendaya', 'Timothée Chalamet', 'Harry Styles', 'Rihanna',\n    'Beyoncé', 'Taylor Swift', 'BTS', 'Billie Eilish', 'Dua Lipa',\n    'Bad Bunny', 'Bella Hadid', 'Tom Holland', 'Florence Pugh', 'Ryan Reynolds',\n    'Blake Lively', 'Kendall Jenner', 'Hailey Bieber', 'Lizzo', 'Lil Nas X',\n    'Cardi B', 'A$AP Rocky', 'Olivia Rodrigo', 'Sydney Sweeney', 'Zoë Kravitz',\n    'Robert Pattinson', 'Anya Taylor-Joy', 'Chris Hemsworth', 'Zoe Saldana', 'Pedro Pascal'\n];\n// Events for celebrity appearances\nconst EVENTS = [\n    'Met Gala', 'Fashion Week', 'Award Show', 'Movie Premiere', 'Talk Show Appearance',\n    'Magazine Cover Shoot', 'Music Video', 'Charity Gala', 'Red Carpet Event', 'Street Style',\n    'Music Festival', 'Brand Campaign', 'Social Media Post', 'Late Night Show', 'Concert',\n    'Product Launch', 'Interview', 'Press Tour', 'Brand Ambassador Event', 'Vacation Paparazzi'\n];\n// Generate random date in the past year\nconst generateRecentDate = () => {\n    const now = new Date();\n    const pastYear = new Date();\n    pastYear.setFullYear(now.getFullYear() - 1);\n    return new Date(pastYear.getTime() + Math.random() * (now.getTime() - pastYear.getTime()));\n};\n// Generate social proof item\nconst generateSocialProofItem = (products) => {\n    const id = generateId('social');\n    const celebrity = CELEBRITIES[Math.floor(Math.random() * CELEBRITIES.length)];\n    const event = EVENTS[Math.floor(Math.random() * EVENTS.length)];\n    const year = new Date().getFullYear();\n    const eventWithYear = `${event} ${year}`;\n    // Generate random outfit tags\n    const allTags = [\n        'gown', 'suit', 'dress', 'casual', 'streetwear', 'formal', 'athleisure',\n        'vintage', 'minimalist', 'bohemian', 'glamorous', 'edgy', 'preppy',\n        'monochrome', 'colorful', 'layered', 'oversized', 'fitted', 'textured',\n        'sustainable', 'custom', 'designer'\n    ];\n    // Add some designer names\n    const designers = [\n        'Gucci', 'Prada', 'Louis Vuitton', 'Dior', 'Chanel', 'Versace',\n        'Balenciaga', 'Valentino', 'Fendi', 'Calvin Klein', 'YSL', 'Balmain'\n    ];\n    // Select 2-5 random tags\n    const numTags = 2 + Math.floor(Math.random() * 4);\n    const shuffledTags = [...allTags].sort(() => 0.5 - Math.random());\n    const outfitTags = shuffledTags.slice(0, numTags);\n    // Add a designer 80% of the time\n    if (Math.random() > 0.2) {\n        const designer = designers[Math.floor(Math.random() * designers.length)];\n        outfitTags.push(designer);\n    }\n    // Select patterns\n    const numPatterns = 1 + Math.floor(Math.random() * 2);\n    const shuffledPatterns = [...PATTERNS].sort(() => 0.5 - Math.random());\n    const patterns = shuffledPatterns.slice(0, numPatterns);\n    // Select colors\n    const numColors = 1 + Math.floor(Math.random() * 3);\n    const shuffledColors = [...COLORS].sort(() => 0.5 - Math.random());\n    const colors = shuffledColors.slice(0, numColors).map(c => c.name);\n    // Select matched products (1-3)\n    const numProducts = 1 + Math.floor(Math.random() * 3);\n    const shuffledProducts = [...products].sort(() => 0.5 - Math.random());\n    const matchedProducts = shuffledProducts.slice(0, numProducts).map(product => {\n        var _a;\n        // Generate a match score for this specific social proof match\n        const matchScore = 0.8 + Math.random() * 0.15;\n        // Generate match reasons\n        const matchReasons = [\n            `Similar style to ${celebrity}'s ${outfitTags.join(', ')} look`,\n            `Matches the ${colors.join('/')} color palette`,\n            `${product.category} as seen on ${celebrity}`\n        ];\n        // Add pattern reason if applicable\n        if (patterns.includes('solid') && ((_a = product.patterns) === null || _a === void 0 ? void 0 : _a.includes('solid'))) {\n            matchReasons.push('Solid pattern like the celebrity look');\n        }\n        else if (patterns.some(p => { var _a; return (_a = product.patterns) === null || _a === void 0 ? void 0 : _a.includes(p); })) {\n            const pattern = patterns.find(p => { var _a; return (_a = product.patterns) === null || _a === void 0 ? void 0 : _a.includes(p); });\n            matchReasons.push(`${pattern} pattern matches celebrity outfit`);\n        }\n        return {\n            id: product.id,\n            name: product.name,\n            description: `${product.brand} ${product.name}`,\n            price: product.price,\n            brand: product.brand,\n            category: product.category,\n            imageUrl: product.imageUrls[0],\n            matchScore,\n            matchReasons: matchReasons.slice(0, 3)\n        };\n    });\n    return {\n        id,\n        celebrity,\n        event: eventWithYear,\n        outfitTags,\n        patterns,\n        colors,\n        timestamp: generateRecentDate().toISOString(),\n        matchedProducts\n    };\n};\n// Function to generate social proof items\nconst generateSocialProofItems = (products, count) => {\n    const items = [];\n    for (let i = 0; i < count; i++) {\n        items.push(generateSocialProofItem(products));\n    }\n    return items;\n};\n// Generate user profiles\nconst generateUserProfile = (userId) => {\n    // Generate style preferences\n    const stylePrefs = ['casual', 'minimalist', 'contemporary'].map(style => ({\n        style,\n        weight: 0.7 + Math.random() * 0.3\n    }));\n    // Generate color preferences\n    const colorPrefs = COLORS.slice(0, 5 + Math.floor(Math.random() * 5))\n        .map(c => ({\n        color: c.name,\n        weight: 0.7 + Math.random() * 0.3\n    }));\n    // Generate size preferences\n    const sizePrefs = [\n        { category: 'tops', size: 'M' },\n        { category: 'tops', size: 'L' },\n        { category: 'bottoms', size: '32' },\n        { category: 'bottoms', size: '33' },\n        { category: 'dresses', size: '12' },\n        { category: 'shoes', size: '9' }\n    ];\n    return {\n        userId,\n        isAnonymous: false,\n        preferences: {\n            stylePreferences: stylePrefs,\n            colorPreferences: colorPrefs,\n            sizePreferences: sizePrefs,\n            favoriteRetailers: RETAILERS.slice(0, 2),\n            occasionPreferences: ['casual', 'work', 'evening'],\n            // Also include the legacy format for backward compatibility\n            sizes: {\n                top: ['M', 'L'],\n                bottom: ['32', '33'],\n                dress: ['12'],\n                shoe: ['9']\n            },\n            colors: COLORS.slice(0, 5 + Math.floor(Math.random() * 5)).map(c => c.name),\n            styles: ['casual', 'minimalist', 'contemporary'],\n            brands: BRANDS.slice(0, 3 + Math.floor(Math.random() * 5)),\n            occasions: ['casual', 'work', 'evening'],\n            priceRanges: ['BUDGET', 'MIDRANGE']\n        },\n        closet: [],\n        feedback: {\n            likedItems: [],\n            dislikedItems: [],\n            savedOutfits: [],\n            viewedItems: [],\n            lastInteraction: new Date()\n        },\n        createdAt: new Date(),\n        lastActive: new Date()\n    };\n};\n// Generate all the mock data\nexport const generateMockData = (productCount = 120, outfitCount = 30, socialProofCount = 25) => {\n    // Generate products\n    const products = generateProducts(productCount);\n    // Generate outfits using those products\n    const outfits = generateOutfits(products, outfitCount);\n    // Generate social proof items\n    const socialProofItems = generateSocialProofItems(products, socialProofCount);\n    // Generate demo user profile\n    const userProfile = generateUserProfile('demo_user');\n    return {\n        products,\n        outfits,\n        socialProofItems,\n        userProfile,\n        // Export constants for consistency\n        categories: CATEGORIES,\n        colors: COLORS,\n        sizes: SIZES,\n        patterns: PATTERNS,\n        materials: MATERIALS,\n        brands: BRANDS,\n        occasions: OCCASIONS\n    };\n};\n// Pre-generated data for import\nexport const mockData = generateMockData();\n// For demo/production mode toggle\nexport const DATA_MODE = {\n    DEMO: 'demo',\n    PRODUCTION: 'production'\n};\n// Export the toggle helper\nexport const isMockDataEnabled = () => {\n    // Read from localStorage or other configuration\n    try {\n        const storedMode = localStorage.getItem('STYLIST_DATA_MODE');\n        return storedMode === DATA_MODE.DEMO;\n    }\n    catch (e) {\n        // Default to false if localStorage isn't available\n        return false;\n    }\n};\nexport const setDataMode = (mode) => {\n    try {\n        localStorage.setItem('STYLIST_DATA_MODE', mode);\n        return true;\n    }\n    catch (e) {\n        console.error('Failed to set data mode:', e);\n        return false;\n    }\n};\nexport default mockData;\n","// Recommendation state management\nimport { create } from 'zustand';\nexport const useRecommendationStore = create((set, get) => ({\n    recommendedItems: [],\n    recommendedOutfits: [],\n    savedOutfits: [],\n    wishlistItems: [],\n    cartItems: [],\n    viewedItems: [],\n    context: null,\n    loading: false,\n    error: null,\n    setRecommendedItems: (items) => {\n        set({ recommendedItems: items });\n    },\n    setRecommendedOutfits: (outfits) => {\n        set({ recommendedOutfits: outfits });\n    },\n    setSavedOutfits: (outfits) => {\n        set({ savedOutfits: outfits });\n    },\n    addRecommendedItem: (item) => {\n        set((state) => ({\n            recommendedItems: [...state.recommendedItems, item]\n        }));\n    },\n    addRecommendedOutfit: (outfit) => {\n        set((state) => ({\n            recommendedOutfits: [...state.recommendedOutfits, outfit]\n        }));\n    },\n    addToWishlist: (item) => {\n        // Check if item is already in wishlist\n        const exists = get().wishlistItems.some((wishlistItem) => wishlistItem.itemId === item.itemId);\n        if (!exists) {\n            set((state) => ({\n                wishlistItems: [...state.wishlistItems, item]\n            }));\n        }\n    },\n    removeFromWishlist: (itemId) => {\n        set((state) => ({\n            wishlistItems: state.wishlistItems.filter((item) => item.itemId !== itemId)\n        }));\n    },\n    addToCart: (item) => {\n        // Check if item is already in cart\n        const existingItemIndex = get().cartItems.findIndex((cartItem) => cartItem.itemId === item.itemId);\n        if (existingItemIndex >= 0) {\n            // Update quantity if already in cart\n            set((state) => {\n                const updatedCartItems = [...state.cartItems];\n                updatedCartItems[existingItemIndex].quantity += item.quantity;\n                return { cartItems: updatedCartItems };\n            });\n        }\n        else {\n            // Add new item to cart\n            set((state) => ({\n                cartItems: [...state.cartItems, item]\n            }));\n        }\n    },\n    removeFromCart: (itemId) => {\n        set((state) => ({\n            cartItems: state.cartItems.filter((item) => item.itemId !== itemId)\n        }));\n    },\n    updateCartItemQuantity: (itemId, quantity) => {\n        set((state) => ({\n            cartItems: state.cartItems.map((item) => item.itemId === itemId ? Object.assign(Object.assign({}, item), { quantity }) : item)\n        }));\n    },\n    addViewedItem: (itemId) => {\n        if (!get().viewedItems.includes(itemId)) {\n            set((state) => ({\n                viewedItems: [...state.viewedItems, itemId]\n            }));\n        }\n    },\n    saveOutfit: (outfit) => {\n        // Check if outfit is already saved\n        const exists = get().savedOutfits.some((savedOutfit) => savedOutfit.outfitId === outfit.outfitId);\n        if (!exists) {\n            set((state) => ({\n                savedOutfits: [...state.savedOutfits, outfit]\n            }));\n        }\n    },\n    removeSavedOutfit: (outfitId) => {\n        set((state) => ({\n            savedOutfits: state.savedOutfits.filter((outfit) => outfit.outfitId !== outfitId)\n        }));\n    },\n    setContext: (context) => {\n        set({ context });\n    },\n    clearRecommendations: () => {\n        set({\n            recommendedItems: [],\n            recommendedOutfits: [],\n            context: null\n        });\n    },\n    setLoading: (loading) => {\n        set({ loading });\n    },\n    setError: (error) => {\n        set({ error });\n    },\n    getItemsByCategory: (category) => {\n        return get().recommendedItems.filter(item => item.category === category);\n    },\n    getItemsSortedByMatchScore: () => {\n        return [...get().recommendedItems].sort((a, b) => b.matchScore - a.matchScore);\n    },\n    getOutfitById: (id) => {\n        return get().recommendedOutfits.find(outfit => outfit.id === id);\n    },\n    getItemById: (id) => {\n        return get().recommendedItems.find(item => item.id === id);\n    },\n    updateItem: (id, updates) => {\n        set((state) => ({\n            recommendedItems: state.recommendedItems.map(item => item.id === id ? Object.assign(Object.assign({}, item), updates) : item)\n        }));\n    }\n}));\nexport default useRecommendationStore;\n","// Store monitoring utilities for diagnostics\nimport { logStore } from './diagnostics';\n/**\n * Monitors an existing Zustand store\n * Simplified version that avoids complex type issues\n */\nexport function monitorExistingStore(storeName, store) {\n    // Log that we're monitoring an existing store\n    logStore(storeName, 'init', `Monitoring existing ${storeName} store`);\n    // The original store is already created, so we just need to\n    // monitor state changes by subscribing to it\n    if (store && typeof store.subscribe === 'function') {\n        store.subscribe((state) => {\n            logStore(storeName, 'update', `${storeName} updated`, { newState: state });\n        });\n    }\n    return store;\n}\n/**\n * Creates a middleware function for Zustand stores\n * This allows logging of state changes\n */\nexport function createDiagnosticsMiddleware(storeName) {\n    return function middleware(config) {\n        return function (set, get, api) {\n            // Wrap the set function to log all state changes\n            const wrappedSet = (...args) => {\n                // Log before the update\n                logStore(storeName, 'update', `${storeName} state update starting`);\n                // Call the original set function\n                const result = set(...args);\n                // Log after the update\n                logStore(storeName, 'update', `${storeName} state updated`, {\n                    newState: get(),\n                    updateType: typeof args[0] === 'function' ? 'function' : 'object',\n                });\n                return result;\n            };\n            // Return the config with the wrapped set function\n            return config(wrappedSet, get, api);\n        };\n    };\n}\nexport default {\n    monitorExistingStore,\n    createDiagnosticsMiddleware\n};\n","// Chat-related types for the widget\nexport var MessageType;\n(function (MessageType) {\n    MessageType[\"TEXT\"] = \"text\";\n    MessageType[\"RECOMMENDATION\"] = \"recommendation\";\n    MessageType[\"OUTFIT\"] = \"outfit\";\n    MessageType[\"QUIZ\"] = \"quiz\";\n    MessageType[\"LOADING\"] = \"loading\";\n    MessageType[\"ERROR\"] = \"error\";\n})(MessageType || (MessageType = {}));\nexport var MessageSender;\n(function (MessageSender) {\n    MessageSender[\"USER\"] = \"user\";\n    MessageSender[\"ASSISTANT\"] = \"assistant\";\n    MessageSender[\"SYSTEM\"] = \"system\";\n})(MessageSender || (MessageSender = {}));\n","/**\n * Environment variables centralized access\n * This file provides type-safe access to all environment variables used in the frontend\n */\n// Backend API sync service constants\nexport const MAX_RETRY_ATTEMPTS = 3;\nexport const IS_PRODUCTION = process.env.NODE_ENV === 'production';\n// API Setup\nexport const API_URL = 'http://localhost:8000/api/v1';\nexport const API_TIMEOUT = 15000;\n/**\n * Claude AI Configuration\n */\nexport const ANTHROPIC_API_KEY = process.env.REACT_APP_ANTHROPIC_API_KEY || '';\nexport const CLAUDE_API_URL = process.env.REACT_APP_ANTHROPIC_API_URL || 'https://api.anthropic.com';\nexport const CLAUDE_MODEL = process.env.REACT_APP_ANTHROPIC_MODEL || 'claude-3-haiku-20240307';\n// Demo mode can be forced even with API keys\nexport const FORCE_DEMO_MODE = process.env.REACT_APP_FORCE_DEMO_MODE === 'true';\n// Allow Claude demo responses without a real API key\nexport const USE_CLAUDE_DEMO = process.env.REACT_APP_USE_CLAUDE_DEMO === 'true';\n/**\n * Background Removal API Configuration\n */\nexport const REMOVE_BG_API_KEY = process.env.REACT_APP_REMOVE_BG_API_KEY || '';\n/**\n * Shopify Integration Configuration\n */\nexport const SHOPIFY_API_KEY = process.env.REACT_APP_SHOPIFY_API_KEY || '';\nexport const SHOPIFY_API_SECRET = process.env.REACT_APP_SHOPIFY_API_SECRET || '';\nexport const SHOPIFY_STORE_URL = process.env.REACT_APP_SHOPIFY_STORE_URL || '';\n/**\n * WooCommerce Integration Configuration\n */\nexport const WOOCOMMERCE_CONSUMER_KEY = process.env.REACT_APP_WOOCOMMERCE_CONSUMER_KEY || '';\nexport const WOOCOMMERCE_CONSUMER_SECRET = process.env.REACT_APP_WOOCOMMERCE_CONSUMER_SECRET || '';\nexport const WOOCOMMERCE_STORE_URL = process.env.REACT_APP_WOOCOMMERCE_STORE_URL || '';\n/**\n * App Configuration\n */\nexport const STYLIST_DEBUG = process.env.REACT_APP_STYLIST_DEBUG === 'true';\nexport const STYLIST_API_KEY = process.env.REACT_APP_STYLIST_API_KEY || 'development_key';\nexport const USE_MOCK_RETAILER = process.env.REACT_APP_USE_MOCK_RETAILER !== 'false' || true;\n/**\n * Type-safe environment variable accessor\n * @param key - Environment variable name\n * @param defaultValue - Default value if not set\n * @returns The environment variable value or default\n */\nexport function getEnv(key, defaultValue) {\n    const value = process.env[`REACT_APP_${key}`];\n    if (value === undefined) {\n        return defaultValue;\n    }\n    // Handle type conversion based on default value type\n    if (typeof defaultValue === 'boolean') {\n        return (value.toLowerCase() === 'true');\n    }\n    if (typeof defaultValue === 'number') {\n        return Number(value);\n    }\n    return value;\n}\n/**\n * Check if a feature flag is enabled\n * @param featureName - Name of the feature flag\n * @returns true if the feature is enabled\n */\nexport function isFeatureEnabled(featureName) {\n    return getEnv(`FEATURE_${featureName.toUpperCase()}`, false);\n}\n","// Analytics utilities for tracking user interactions\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Define event types\nexport var AnalyticsEventType;\n(function (AnalyticsEventType) {\n    AnalyticsEventType[\"WIDGET_OPEN\"] = \"widget_open\";\n    AnalyticsEventType[\"WIDGET_CLOSE\"] = \"widget_close\";\n    AnalyticsEventType[\"WIDGET_MINIMIZE\"] = \"widget_minimize\";\n    AnalyticsEventType[\"MESSAGE_SENT\"] = \"message_sent\";\n    AnalyticsEventType[\"ITEM_VIEW\"] = \"item_view\";\n    AnalyticsEventType[\"ITEM_LIKE\"] = \"item_like\";\n    AnalyticsEventType[\"ITEM_DISLIKE\"] = \"item_dislike\";\n    AnalyticsEventType[\"OUTFIT_VIEW\"] = \"outfit_view\";\n    AnalyticsEventType[\"OUTFIT_LIKE\"] = \"outfit_like\";\n    AnalyticsEventType[\"OUTFIT_DISLIKE\"] = \"outfit_dislike\";\n    AnalyticsEventType[\"OUTFIT_SAVE\"] = \"outfit_save\";\n    AnalyticsEventType[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\n    AnalyticsEventType[\"ADD_TO_CART\"] = \"add_to_cart\";\n    AnalyticsEventType[\"STYLE_QUIZ_START\"] = \"style_quiz_start\";\n    AnalyticsEventType[\"STYLE_QUIZ_COMPLETE\"] = \"style_quiz_complete\";\n    AnalyticsEventType[\"STYLE_QUIZ_PARTIAL\"] = \"style_quiz_partial\";\n    AnalyticsEventType[\"STYLE_QUIZ_ABANDON\"] = \"style_quiz_abandon\";\n    AnalyticsEventType[\"TRY_ON_START\"] = \"try_on_start\";\n    AnalyticsEventType[\"TRY_ON_COMPLETE\"] = \"try_on_complete\";\n    AnalyticsEventType[\"TRY_ON_SAVED\"] = \"try_on_saved\";\n    AnalyticsEventType[\"VIEW_LOOKBOOK\"] = \"view_lookbook\";\n    AnalyticsEventType[\"ERROR\"] = \"error\";\n    // New feedback-related events\n    AnalyticsEventType[\"MESSAGE_THUMBS_UP\"] = \"message_thumbs_up\";\n    AnalyticsEventType[\"RECOMMENDATION_THUMBS_UP\"] = \"recommendation_thumbs_up\";\n    AnalyticsEventType[\"FEEDBACK_SYNCED\"] = \"feedback_synced\";\n    // New input-related events\n    AnalyticsEventType[\"IMAGE_UPLOAD\"] = \"image_upload\";\n    AnalyticsEventType[\"URL_INPUT\"] = \"url_input\";\n    AnalyticsEventType[\"VOICE_INPUT\"] = \"voice_input\";\n    // New tab navigation events\n    AnalyticsEventType[\"VIEW_MY_CLOSET\"] = \"view_my_closet\";\n    AnalyticsEventType[\"VIEW_VIRTUAL_TRY_ON\"] = \"view_virtual_try_on\";\n    AnalyticsEventType[\"VIEW_SOCIAL_PROOF\"] = \"view_social_proof\";\n    AnalyticsEventType[\"VIEW_TRENDING_ITEMS\"] = \"view_trending_items\";\n})(AnalyticsEventType || (AnalyticsEventType = {}));\n// Generate a unique session ID\nconst generateSessionId = () => {\n    return `session_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n};\n// Get or create a session ID\nconst getSessionId = () => {\n    let sessionId = sessionStorage.getItem('stylist_session_id');\n    if (!sessionId) {\n        sessionId = generateSessionId();\n        sessionStorage.setItem('stylist_session_id', sessionId);\n    }\n    return sessionId;\n};\n// Track an analytics event\nexport const trackEvent = (type, userId, data) => {\n    const event = {\n        type,\n        timestamp: new Date(),\n        userId,\n        sessionId: getSessionId(),\n        data\n    };\n    // Log event to console in development\n    // Only log in development \n    if (process.env.NODE_ENV !== 'production') {\n        console.log('[Analytics Event]:', event);\n    }\n    // Queue event for sending to backend\n    queueEvent(event);\n};\n// Queue of events to send\nlet eventQueue = [];\nlet isSending = false;\n// Queue an event for sending\nconst queueEvent = (event) => {\n    eventQueue.push(event);\n    // Start sending if not already in progress\n    if (!isSending) {\n        sendQueuedEvents();\n    }\n};\n// Send queued events to backend\nconst sendQueuedEvents = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (eventQueue.length === 0) {\n        isSending = false;\n        return;\n    }\n    isSending = true;\n    // Take a batch of events to send\n    const batch = eventQueue.slice(0, 10);\n    try {\n        // Send events to backend\n        const response = yield fetch('https://api.thestylist.ai/api/v1/analytics/events', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                events: batch\n            })\n        });\n        if (response.ok) {\n            // Remove sent events from queue\n            eventQueue = eventQueue.slice(batch.length);\n        }\n        else {\n            // Wait before retrying on error\n            yield new Promise(resolve => setTimeout(resolve, 5000));\n        }\n    }\n    catch (err) {\n        // Only log in non-production environments\n        if (process.env.NODE_ENV !== 'production') {\n            console.error('Failed to send analytics events:', err);\n        }\n        // Wait before retrying on error\n        yield new Promise(resolve => setTimeout(resolve, 5000));\n    }\n    // Continue with remaining events\n    sendQueuedEvents();\n});\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { DATA_MODE, isMockDataEnabled, setDataMode } from './mockData';\n// Function to toggle demo mode\nexport const toggleDemoMode = () => {\n    const newMode = isMockDataEnabled() ? DATA_MODE.PRODUCTION : DATA_MODE.DEMO;\n    const success = setDataMode(newMode);\n    // Notify about the change\n    if (success) {\n        // Set global flag to indicate demo mode\n        window.__STYLIST_DEMO_MODE = newMode === DATA_MODE.DEMO;\n        // Trigger a custom event that components can listen for\n        const event = new CustomEvent('stylist-data-mode-change', {\n            detail: { mode: newMode }\n        });\n        window.dispatchEvent(event);\n    }\n    return success;\n};\n// Hook to subscribe to demo mode changes\nexport const useDemoMode = () => {\n    const [isDemoMode, setIsDemoMode] = useState(isMockDataEnabled());\n    // Listen for demo mode changes\n    useEffect(() => {\n        const handleModeChange = (event) => {\n            const customEvent = event;\n            setIsDemoMode(customEvent.detail.mode === DATA_MODE.DEMO);\n        };\n        window.addEventListener('stylist-data-mode-change', handleModeChange);\n        return () => {\n            window.removeEventListener('stylist-data-mode-change', handleModeChange);\n        };\n    }, []);\n    const toggle = () => {\n        toggleDemoMode();\n        setIsDemoMode(!isDemoMode);\n    };\n    return [isDemoMode, toggle];\n};\n// UI Component for demo mode toggle\nexport const DemoModeToggle = ({ className = '', style = {} }) => {\n    const [isDemoMode, toggle] = useDemoMode();\n    return (_jsxs(\"div\", Object.assign({ className: `stylist-demo-mode-toggle ${className}`, style: style }, { children: [_jsxs(\"label\", Object.assign({ className: \"stylist-demo-toggle-switch\" }, { children: [_jsx(\"input\", { type: \"checkbox\", checked: isDemoMode, onChange: toggle, \"aria-label\": \"Toggle demo mode\" }), _jsx(\"span\", { className: \"stylist-demo-toggle-slider\" })] })), _jsx(\"span\", Object.assign({ className: \"stylist-demo-toggle-label\" }, { children: isDemoMode ? 'Demo Mode' : 'Production Mode' })), _jsx(\"style\", { children: `\n        .stylist-demo-mode-toggle {\n          display: flex;\n          align-items: center;\n          font-family: sans-serif;\n          font-size: 14px;\n        }\n        \n        .stylist-demo-toggle-switch {\n          position: relative;\n          display: inline-block;\n          width: 50px;\n          height: 24px;\n          margin-right: 10px;\n        }\n        \n        .stylist-demo-toggle-switch input {\n          opacity: 0;\n          width: 0;\n          height: 0;\n        }\n        \n        .stylist-demo-toggle-slider {\n          position: absolute;\n          cursor: pointer;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: #ccc;\n          transition: .4s;\n          border-radius: 24px;\n        }\n        \n        .stylist-demo-toggle-slider:before {\n          position: absolute;\n          content: \"\";\n          height: 16px;\n          width: 16px;\n          left: 4px;\n          bottom: 4px;\n          background-color: white;\n          transition: .4s;\n          border-radius: 50%;\n        }\n        \n        input:checked + .stylist-demo-toggle-slider {\n          background-color: var(--stylist-primary-color, #4361ee);\n        }\n        \n        input:checked + .stylist-demo-toggle-slider:before {\n          transform: translateX(26px);\n        }\n        \n        .stylist-demo-toggle-label {\n          font-weight: 500;\n        }\n      ` })] })));\n};\n// Button variant with text only\nexport const DemoModeButton = ({ className = '', style = {} }) => {\n    const [isDemoMode, toggle] = useDemoMode();\n    return (_jsx(\"button\", Object.assign({ className: `stylist-demo-mode-button ${className}`, onClick: toggle, style: Object.assign({ padding: '8px 12px', backgroundColor: isDemoMode ? 'var(--stylist-primary-color, #4361ee)' : '#f0f0f0', color: isDemoMode ? 'white' : '#333', border: 'none', borderRadius: '4px', cursor: 'pointer', fontWeight: 500, fontSize: '14px', transition: 'all 0.3s ease' }, style) }, { children: isDemoMode ? 'Switch to Production Data' : 'Switch to Demo Data' })));\n};\nexport default {\n    toggleDemoMode,\n    useDemoMode,\n    DemoModeToggle,\n    DemoModeButton\n};\n","/**\n * Demo Flows\n *\n * This module defines structured demo flows to showcase the Stylist widget's\n * features for different user scenarios. Each flow contains step-by-step\n * guidance, expected outcomes, and tips for presenters.\n */\n/**\n * New User Onboarding Flow\n *\n * This flow demonstrates the journey of a first-time user\n * from initial widget activation through the style quiz and\n * first purchase recommendation.\n */\nexport const newUserFlow = {\n    id: 'new-user',\n    name: 'New User Onboarding',\n    description: 'Showcase the full onboarding experience for a first-time user, including the style quiz and first personalized recommendation.',\n    duration: '5-7 minutes',\n    targetAudience: 'Retailers interested in user acquisition and onboarding',\n    setup: [\n        'Use a fresh browser session or incognito window',\n        'Ensure the demo retailer has multiple product categories loaded',\n        'Reset any previous user data from localStorage if needed'\n    ],\n    steps: [\n        {\n            id: 'nu-1',\n            title: 'Widget Activation',\n            description: 'Show how users discover the widget on a retail site',\n            action: 'Navigate to the demo page and point out the floating widget button in the corner',\n            expectedOutcome: 'Floating button is visible and pulses briefly to draw attention',\n            tips: 'Mention that the button can be customized with the retailer\\'s branding'\n        },\n        {\n            id: 'nu-2',\n            title: 'Initial Engagement',\n            description: 'Demonstrate the initial widget expansion',\n            action: 'Click the floating button to expand the widget',\n            expectedOutcome: 'Widget expands smoothly with a welcome message and sign-up prompt',\n            tips: 'Point out the smooth animation and responsive design'\n        },\n        {\n            id: 'nu-3',\n            title: 'User Registration',\n            description: 'Show the streamlined registration process',\n            action: 'Click \"Sign Up\" and complete the simple registration form',\n            expectedOutcome: 'Registration form appears with email/password fields and completes quickly',\n            tips: 'Emphasize that registration is optional but enables personalized recommendations'\n        },\n        {\n            id: 'nu-4',\n            title: 'Style Quiz Introduction',\n            description: 'Introduce the style quiz concept',\n            action: 'Click \"Start Style Quiz\" from the welcome message or menu',\n            expectedOutcome: 'Style quiz introduction appears with overview and benefits',\n            tips: 'Highlight that the quiz takes only 2-3 minutes but dramatically improves recommendations'\n        },\n        {\n            id: 'nu-5',\n            title: 'Style Quiz Completion',\n            description: 'Complete the style quiz to establish preferences',\n            action: 'Answer all quiz questions, showing how different question types work',\n            expectedOutcome: 'Quiz progresses through multiple question types with visual progress indicator',\n            tips: 'Show different question types (image selection, sliders, multiple choice) and point out the progress bar'\n        },\n        {\n            id: 'nu-6',\n            title: 'Style Profile Results',\n            description: 'Review the user\\'s style profile summary',\n            action: 'Complete the quiz and view the results summary',\n            expectedOutcome: 'Style profile summary displayed with key style attributes and preferences',\n            tips: 'Explain how the style profile influences all future recommendations'\n        },\n        {\n            id: 'nu-7',\n            title: 'Initial Recommendations',\n            description: 'Show the first personalized recommendations',\n            action: 'View the initial recommended items based on style profile',\n            expectedOutcome: 'Grid of recommended products appears with clear relevance to style profile',\n            tips: 'Point out the \"match reasons\" that explain why each item was recommended'\n        },\n        {\n            id: 'nu-8',\n            title: 'Product Interaction',\n            description: 'Demonstrate interaction with recommended products',\n            action: 'Click on a recommended item to view details and options',\n            expectedOutcome: 'Product details panel appears with size selection, add to cart, and try-on options',\n            tips: 'Show hover states and quick action buttons'\n        },\n        {\n            id: 'nu-9',\n            title: 'Adding to Cart',\n            description: 'Complete the purchase flow',\n            action: 'Select a size and add the item to cart',\n            expectedOutcome: 'Smooth add-to-cart animation with confirmation and cart preview',\n            tips: 'Point out the non-disruptive nature of the flow that keeps users in the shopping experience'\n        }\n    ],\n    successCriteria: [\n        'User completes registration without friction',\n        'Style quiz is engaging and intuitive',\n        'Initial recommendations clearly reflect quiz answers',\n        'Add to cart process is smooth and intuitive'\n    ]\n};\n/**\n * Returning User Flow\n *\n * This flow demonstrates a returning user's experience,\n * leveraging their existing closet data to build outfits\n * and discover trending items.\n */\nexport const returningUserFlow = {\n    id: 'returning',\n    name: 'Returning User Experience',\n    description: 'Demonstrate the enhanced experience for returning users, focusing on My Closet, Trending Items, and outfit building.',\n    duration: '4-6 minutes',\n    targetAudience: 'Retailers focused on customer retention and repeat purchases',\n    setup: [\n        'Log in as a returning user with existing closet items',\n        'Ensure the demo account has several items in My Closet',\n        'Verify that Trending Items data is populated'\n    ],\n    steps: [\n        {\n            id: 'ru-1',\n            title: 'Returning User Recognition',\n            description: 'Show how the widget recognizes returning users',\n            action: 'Open the widget as a logged-in user',\n            expectedOutcome: 'Widget opens with personalized greeting and highlights recent activity',\n            tips: 'Point out any notifications about new trending items or updates since last visit'\n        },\n        {\n            id: 'ru-2',\n            title: 'My Closet Access',\n            description: 'Access the digital closet with previously saved items',\n            action: 'Navigate to the My Closet section',\n            expectedOutcome: 'My Closet loads with previously saved items organized by category',\n            tips: 'Highlight how the closet preserves customer purchase history across sessions'\n        },\n        {\n            id: 'ru-3',\n            title: 'Closet Organization',\n            description: 'Show the organization and filtering capabilities of the closet',\n            action: 'Filter closet items by category or occasion',\n            expectedOutcome: 'Items filter instantly based on selected criteria',\n            tips: 'Emphasize how organization helps users rediscover their own items'\n        },\n        {\n            id: 'ru-4',\n            title: 'Trending Items Discovery',\n            description: 'Explore personalized trending items',\n            action: 'Navigate to the Trending Items section',\n            expectedOutcome: 'Curated grid of trending items appears, influenced by user preferences',\n            tips: 'Explain how the trending algorithm balances personal style with current trends'\n        },\n        {\n            id: 'ru-5',\n            title: 'Outfit Building Initiation',\n            description: 'Start the outfit building process',\n            action: 'Select an item from My Closet and click \"Build Outfit\"',\n            expectedOutcome: 'Outfit builder interface appears with selected item as the base',\n            tips: 'Point out how users can start with items they already own'\n        },\n        {\n            id: 'ru-6',\n            title: 'Outfit Recommendations',\n            description: 'Show complementary item recommendations',\n            action: 'View recommended items that pair well with the selected piece',\n            expectedOutcome: 'Grid of complementary items appears with clear match explanations',\n            tips: 'Highlight how recommendations span both the user\\'s closet and store inventory'\n        },\n        {\n            id: 'ru-7',\n            title: 'Complete Outfit Creation',\n            description: 'Finalize an outfit with multiple pieces',\n            action: 'Add several items to complete an outfit',\n            expectedOutcome: 'Full outfit visualized together with harmonious style',\n            tips: 'Show how the system ensures style coherence and color coordination'\n        },\n        {\n            id: 'ru-8',\n            title: 'Outfit Saving',\n            description: 'Save the created outfit for future reference',\n            action: 'Save the outfit with a custom name',\n            expectedOutcome: 'Outfit saved to My Outfits with confirmation animation',\n            tips: 'Explain how saved outfits can be referenced for future shopping or daily decisions'\n        }\n    ],\n    successCriteria: [\n        'User\\'s previous data is seamlessly accessible',\n        'Trending items feel personally relevant',\n        'Outfit builder provides genuinely complementary items',\n        'Experience feels cohesive across sessions'\n    ]\n};\n/**\n * Influencer-Driven Shopping Flow\n *\n * This flow demonstrates how users can discover products\n * through celebrity and influencer styles, then find matching\n * or similar items to purchase.\n */\nexport const influencerFlow = {\n    id: 'influencer',\n    name: 'Celebrity & Influencer Matching',\n    description: 'Showcase how users can find products similar to those worn by celebrities and influencers.',\n    duration: '3-5 minutes',\n    targetAudience: 'Fashion retailers looking to leverage social proof and influencer marketing',\n    setup: [\n        'Ensure celebrity database is loaded with recent examples',\n        'Verify product matching is working correctly',\n        'Have social sharing functionality enabled'\n    ],\n    steps: [\n        {\n            id: 'if-1',\n            title: 'Celebrity Discovery',\n            description: 'Browse the celebrity and influencer gallery',\n            action: 'Navigate to the Social Proof or Celebrity section',\n            expectedOutcome: 'Grid of celebrities and influencers appears with recent outfits',\n            tips: 'Point out that this content updates regularly with current trends'\n        },\n        {\n            id: 'if-2',\n            title: 'Celebrity Style Selection',\n            description: 'Select a specific celebrity look to explore',\n            action: 'Click on a celebrity card to view their featured looks',\n            expectedOutcome: 'Celebrity detail page appears with multiple outfit options',\n            tips: 'Mention how featured looks are selected for relevance to the store\\'s inventory'\n        },\n        {\n            id: 'if-3',\n            title: 'Outfit Detail View',\n            description: 'Examine the components of a celebrity outfit',\n            action: 'Select a specific outfit to see its details',\n            expectedOutcome: 'Outfit breakdown appears showing individual pieces with labels',\n            tips: 'Highlight how the system identifies individual garments from celebrity photos'\n        },\n        {\n            id: 'if-4',\n            title: 'Product Matching',\n            description: 'Find exact matches for celebrity items in inventory',\n            action: 'Click \"Find this item\" on a specific piece',\n            expectedOutcome: 'Exact product match appears if available in inventory',\n            tips: 'Explain that retailers can flag exact matches in their inventory for seamless discovery'\n        },\n        {\n            id: 'if-5',\n            title: 'Similar Items',\n            description: 'Discover similar alternatives when exact matches aren\\'t available',\n            action: 'View similar items to a celebrity piece',\n            expectedOutcome: 'Grid of similar items appears with similarity score and features',\n            tips: 'Demonstrate how the similarity algorithm considers style, color, pattern, and silhouette'\n        },\n        {\n            id: 'if-6',\n            title: 'Match & Shop',\n            description: 'Select and purchase a matching item',\n            action: 'Choose a similar item and add to cart',\n            expectedOutcome: 'Item added to cart with reference to the celebrity inspiration',\n            tips: 'Emphasize how this creates a storytelling element in the purchase'\n        },\n        {\n            id: 'if-7',\n            title: 'Social Sharing',\n            description: 'Share a discovered match on social media',\n            action: 'Click the share button on a matched item',\n            expectedOutcome: 'Social sharing options appear with pre-populated message',\n            tips: 'Point out how sharing extends the retailer\\'s reach through organic social content'\n        }\n    ],\n    successCriteria: [\n        'Celebrity content feels current and relevant',\n        'Product matches are accurate and visually similar',\n        'Social sharing is seamless and compelling',\n        'Purchase path from celebrity inspiration is frictionless'\n    ]\n};\n/**\n * Power User Multi-Feature Flow\n *\n * This flow demonstrates advanced capabilities for power users,\n * including cross-category shopping, virtual try-on, and bulk actions.\n */\nexport const powerUserFlow = {\n    id: 'power-user',\n    name: 'Advanced Multi-Category & Try-On Flow',\n    description: 'Demonstrate advanced features for power users including cross-category shopping, virtual try-on, and bulk actions.',\n    duration: '5-8 minutes',\n    targetAudience: 'Retailers with diverse inventory and tech-forward customers',\n    setup: [\n        'Ensure virtual try-on is fully configured',\n        'Verify multiple product categories are available',\n        'Have high-resolution product images loaded'\n    ],\n    steps: [\n        {\n            id: 'pu-1',\n            title: 'Cross-Category Browse',\n            description: 'Show how users can shop across multiple categories seamlessly',\n            action: 'Navigate through different product categories in quick succession',\n            expectedOutcome: 'Smooth transition between categories with persistent filtering options',\n            tips: 'Highlight how the system maintains context between category switches'\n        },\n        {\n            id: 'pu-2',\n            title: 'Advanced Filtering',\n            description: 'Demonstrate power-user filtering capabilities',\n            action: 'Apply multiple detailed filters across categories (style, price, color, material)',\n            expectedOutcome: 'Results update in real-time with combined filter logic',\n            tips: 'Point out how filters are intelligently suggested based on inventory and user preferences'\n        },\n        {\n            id: 'pu-3',\n            title: 'Virtual Try-On Setup',\n            description: 'Initialize the virtual try-on experience',\n            action: 'Select an item and click \"Try On\" or navigate to Try-On section',\n            expectedOutcome: 'Try-on interface appears with camera access request or photo upload option',\n            tips: 'Explain privacy features and how images are processed locally when possible'\n        },\n        {\n            id: 'pu-4',\n            title: 'Camera/Photo Selection',\n            description: 'Show both camera capture and photo upload options',\n            action: 'Either activate camera or upload a photo',\n            expectedOutcome: 'Image appears in try-on interface with body detection indicators',\n            tips: 'Demonstrate both real-time and uploaded photo workflows if possible'\n        },\n        {\n            id: 'pu-5',\n            title: 'Virtual Garment Overlay',\n            description: 'Demonstrate the virtual try-on technology',\n            action: 'Position and adjust the selected garment on the photo',\n            expectedOutcome: 'Garment realistically overlays on the user image with proper sizing and positioning',\n            tips: 'Point out how the AI handles different body types and positions'\n        },\n        {\n            id: 'pu-6',\n            title: 'Multi-Item Try-On',\n            description: 'Try on multiple items together',\n            action: 'Add additional items to the try-on scene',\n            expectedOutcome: 'Multiple items correctly layer and position together',\n            tips: 'Show how the system handles layering and fabric interactions'\n        },\n        {\n            id: 'pu-7',\n            title: 'Color/Variant Switching',\n            description: 'Switch between color options during try-on',\n            action: 'Change the color/variant of an item while in try-on mode',\n            expectedOutcome: 'Color changes apply instantly with realistic rendering',\n            tips: 'Emphasize how this reduces the friction of trying multiple variants'\n        },\n        {\n            id: 'pu-8',\n            title: 'Bulk Actions',\n            description: 'Perform actions on multiple items at once',\n            action: 'Select multiple items and add to wishlist or cart',\n            expectedOutcome: 'Bulk action applies to all selected items with unified confirmation',\n            tips: 'Point out efficiency gains for serious shoppers'\n        },\n        {\n            id: 'pu-9',\n            title: 'Result Sharing',\n            description: 'Save and share try-on results',\n            action: 'Save the try-on result and share via social or email',\n            expectedOutcome: 'Sharing options appear with preview and product links included',\n            tips: 'Highlight how shared content includes direct shopping links'\n        }\n    ],\n    successCriteria: [\n        'Cross-category navigation feels seamless',\n        'Virtual try-on renders garments realistically',\n        'Multi-item interactions work smoothly',\n        'Bulk actions are intuitive and efficient'\n    ]\n};\n// Export all flows for use in the application\nexport const demoFlows = {\n    newUser: newUserFlow,\n    returning: returningUserFlow,\n    influencer: influencerFlow,\n    powerUser: powerUserFlow\n};\nexport default demoFlows;\n","// Types for the virtual try-on feature\nexport var GarmentType;\n(function (GarmentType) {\n    GarmentType[\"TOP\"] = \"top\";\n    GarmentType[\"BOTTOM\"] = \"bottom\";\n    GarmentType[\"DRESS\"] = \"dress\";\n    GarmentType[\"OUTERWEAR\"] = \"outerwear\";\n    GarmentType[\"SHOES\"] = \"shoes\";\n    GarmentType[\"ACCESSORY\"] = \"accessory\";\n})(GarmentType || (GarmentType = {}));\nexport var BodyPosition;\n(function (BodyPosition) {\n    BodyPosition[\"UPPER_BODY\"] = \"upper_body\";\n    BodyPosition[\"LOWER_BODY\"] = \"lower_body\";\n    BodyPosition[\"FULL_BODY\"] = \"full_body\";\n    BodyPosition[\"HEAD\"] = \"head\";\n    BodyPosition[\"FEET\"] = \"feet\";\n    BodyPosition[\"HANDS\"] = \"hands\";\n    BodyPosition[\"NECK\"] = \"neck\";\n    BodyPosition[\"WAIST\"] = \"waist\";\n})(BodyPosition || (BodyPosition = {}));\nexport var ProcessingStatus;\n(function (ProcessingStatus) {\n    ProcessingStatus[\"IDLE\"] = \"idle\";\n    ProcessingStatus[\"UPLOADING\"] = \"uploading\";\n    ProcessingStatus[\"PROCESSING\"] = \"processing\";\n    ProcessingStatus[\"REMOVING_BACKGROUND\"] = \"removing_background\";\n    ProcessingStatus[\"COMPLETED\"] = \"completed\";\n    ProcessingStatus[\"FAILED\"] = \"failed\";\n})(ProcessingStatus || (ProcessingStatus = {}));\nexport var BackgroundRemovalMethod;\n(function (BackgroundRemovalMethod) {\n    BackgroundRemovalMethod[\"REMOVE_BG_API\"] = \"remove_bg_api\";\n    BackgroundRemovalMethod[\"TENSORFLOW\"] = \"tensorflow\";\n    BackgroundRemovalMethod[\"MANUAL\"] = \"manual\";\n})(BackgroundRemovalMethod || (BackgroundRemovalMethod = {}));\n","// src/utils/productMappings.ts\nimport { GarmentType } from '../types/tryOn';\n/**\n * Maps product type from various systems to internal GarmentType\n */\nexport const mapProductTypeToGarmentType = (productType) => {\n    const lcType = productType.toLowerCase();\n    if (lcType.includes('shirt') || lcType.includes('top') || lcType.includes('tee') || lcType.includes('blouse')) {\n        return GarmentType.TOP;\n    }\n    if (lcType.includes('pant') || lcType.includes('jean') || lcType.includes('bottom') || lcType.includes('skirt') || lcType.includes('short')) {\n        return GarmentType.BOTTOM;\n    }\n    if (lcType.includes('dress')) {\n        return GarmentType.DRESS;\n    }\n    if (lcType.includes('jacket') || lcType.includes('coat') || lcType.includes('sweater') || lcType.includes('cardigan') || lcType.includes('hoodie')) {\n        return GarmentType.OUTERWEAR;\n    }\n    if (lcType.includes('shoe') || lcType.includes('sneaker') || lcType.includes('boot') || lcType.includes('sandal')) {\n        return GarmentType.SHOES;\n    }\n    if (lcType.includes('accessory') || lcType.includes('hat') || lcType.includes('bag') || lcType.includes('jewelry') || lcType.includes('watch') || lcType.includes('scarf')) {\n        return GarmentType.ACCESSORY;\n    }\n    // Default to top if can't determine\n    return GarmentType.TOP;\n};\n","// performanceMonitoring.ts\n// Utility for monitoring and reporting performance metrics\nimport React from 'react';\nimport { getDeviceCapabilities } from './deviceCapabilities';\n// Singleton for performance monitoring\nclass PerformanceMonitor {\n    constructor() {\n        this.isActive = false;\n        this.isDebugMode = false;\n        this.fpsBuffer = [];\n        this.lastFrameTime = 0;\n        this.frameCounter = 0;\n        this.animationFrameId = null;\n        this.metricsEventListeners = [];\n        this.thresholds = {\n            fps: 30,\n            memory: 90,\n            loadTime: 3000,\n            renderTime: 100,\n            networkRequest: 2000,\n            longTask: 50 // ms\n        };\n        this.issueLogs = [];\n        this.memoryWarningShown = false;\n        // Initialize metrics\n        this.metrics = {\n            fps: 0,\n            memory: null,\n            loadTime: 0,\n            renderTime: 0,\n            networkRequests: [],\n            interactions: [],\n            componentRenderTimes: {},\n            longTasks: []\n        };\n        // Set initial load time\n        if (window.performance && window.performance.timing) {\n            const timing = window.performance.timing;\n            this.metrics.loadTime = timing.loadEventEnd - timing.navigationStart;\n        }\n        // Initialize observers and listeners\n        this.setupObservers();\n    }\n    static getInstance() {\n        if (!PerformanceMonitor.instance) {\n            PerformanceMonitor.instance = new PerformanceMonitor();\n        }\n        return PerformanceMonitor.instance;\n    }\n    /**\n     * Setup various performance observers and listeners\n     */\n    setupObservers() {\n        // Setup network request observer\n        if (window.PerformanceObserver) {\n            try {\n                // Network requests\n                const networkObserver = new PerformanceObserver((entries) => {\n                    entries.getEntries().forEach((entry) => {\n                        if (entry.entryType === 'resource') {\n                            this.recordNetworkRequest(entry);\n                        }\n                    });\n                });\n                networkObserver.observe({ entryTypes: ['resource'] });\n                // Long tasks\n                if ('PerformanceLongTaskTiming' in window) {\n                    const longTaskObserver = new PerformanceObserver((entries) => {\n                        entries.getEntries().forEach((entry) => {\n                            this.recordLongTask(entry);\n                        });\n                    });\n                    longTaskObserver.observe({ entryTypes: ['longtask'] });\n                }\n            }\n            catch (error) {\n                console.warn('Performance observer not supported:', error);\n            }\n        }\n        // Setup interaction listeners\n        document.addEventListener('click', this.trackInteraction.bind(this));\n        document.addEventListener('keydown', this.trackInteraction.bind(this));\n        document.addEventListener('input', this.throttle(this.trackInteraction.bind(this), 100));\n        document.addEventListener('scroll', this.throttle(this.trackInteraction.bind(this), 100));\n    }\n    /**\n     * Start monitoring performance\n     */\n    start(debug = false) {\n        if (this.isActive)\n            return;\n        this.isActive = true;\n        this.isDebugMode = debug;\n        // Start FPS monitoring\n        this.startFPSMonitoring();\n        // Start memory monitoring\n        this.startMemoryMonitoring();\n        if (this.isDebugMode) {\n            console.log('[PerformanceMonitor] Monitoring started');\n        }\n    }\n    /**\n     * Stop monitoring performance\n     */\n    stop() {\n        if (!this.isActive)\n            return;\n        this.isActive = false;\n        // Stop FPS monitoring\n        if (this.animationFrameId !== null) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n        }\n        if (this.isDebugMode) {\n            console.log('[PerformanceMonitor] Monitoring stopped');\n        }\n    }\n    /**\n     * Record performance data for a component render\n     */\n    recordComponentRender(componentName, duration) {\n        if (!this.isActive)\n            return;\n        this.metrics.componentRenderTimes[componentName] = duration;\n        // Check if render time exceeds threshold\n        if (duration > this.thresholds.renderTime) {\n            this.logIssue('slow-render', `Slow render: ${componentName} took ${duration}ms`, {\n                componentName,\n                duration\n            });\n        }\n    }\n    /**\n     * Start FPS monitoring\n     */\n    startFPSMonitoring() {\n        const measureFPS = (timestamp) => {\n            if (!this.isActive)\n                return;\n            if (this.lastFrameTime === 0) {\n                this.lastFrameTime = timestamp;\n            }\n            const elapsed = timestamp - this.lastFrameTime;\n            this.frameCounter++;\n            // Calculate average FPS every second\n            if (elapsed >= 1000) {\n                const currentFPS = Math.round((this.frameCounter * 1000) / elapsed);\n                // Add to rolling buffer for smoother readings\n                this.fpsBuffer.push(currentFPS);\n                if (this.fpsBuffer.length > 5)\n                    this.fpsBuffer.shift();\n                // Calculate average from buffer\n                this.metrics.fps = Math.round(this.fpsBuffer.reduce((sum, fps) => sum + fps, 0) / this.fpsBuffer.length);\n                // Log low FPS\n                if (this.metrics.fps < this.thresholds.fps) {\n                    this.logIssue('low-fps', `Low FPS detected: ${this.metrics.fps}`, { fps: this.metrics.fps });\n                }\n                // Reset counters\n                this.frameCounter = 0;\n                this.lastFrameTime = timestamp;\n                // Notify listeners\n                this.notifyMetricsUpdate();\n            }\n            this.animationFrameId = requestAnimationFrame(measureFPS);\n        };\n        this.animationFrameId = requestAnimationFrame(measureFPS);\n    }\n    /**\n     * Start memory monitoring\n     */\n    startMemoryMonitoring() {\n        // Check if memory API is available\n        if (!performance.memory) {\n            if (this.isDebugMode) {\n                console.log('[PerformanceMonitor] Memory API not available');\n            }\n            return;\n        }\n        // Check memory every 5 seconds\n        const memoryInterval = setInterval(() => {\n            if (!this.isActive) {\n                clearInterval(memoryInterval);\n                return;\n            }\n            try {\n                const memoryInfo = performance.memory;\n                const usedHeap = memoryInfo.usedJSHeapSize;\n                const totalHeap = memoryInfo.jsHeapSizeLimit;\n                // Calculate usage percentage\n                const memoryUsage = Math.round((usedHeap / totalHeap) * 100);\n                this.metrics.memory = memoryUsage;\n                this.metrics.jsHeapSize = usedHeap;\n                // Check memory threshold\n                if (memoryUsage > this.thresholds.memory && !this.memoryWarningShown) {\n                    this.memoryWarningShown = true; // Show warning only once\n                    this.logIssue('high-memory', `High memory usage: ${memoryUsage}%`, {\n                        usedHeap,\n                        totalHeap,\n                        memoryUsage\n                    });\n                }\n                else if (memoryUsage <= this.thresholds.memory) {\n                    this.memoryWarningShown = false; // Reset when memory usage drops\n                }\n            }\n            catch (error) {\n                console.warn('Error monitoring memory:', error);\n            }\n        }, 5000);\n    }\n    /**\n     * Record network request performance\n     */\n    recordNetworkRequest(entry) {\n        const url = entry.name;\n        const duration = entry.duration;\n        const size = entry.transferSize || 0;\n        const status = 200; // Not directly available in PerformanceResourceTiming\n        const type = entry.initiatorType;\n        const metric = {\n            url,\n            duration,\n            size,\n            status,\n            type,\n            timestamp: Date.now()\n        };\n        this.metrics.networkRequests.push(metric);\n        // Limit array size to prevent memory leaks\n        if (this.metrics.networkRequests.length > 100) {\n            this.metrics.networkRequests.shift();\n        }\n        // Check for slow network requests\n        if (duration > this.thresholds.networkRequest) {\n            this.logIssue('slow-network', `Slow network request: ${url} took ${Math.round(duration)}ms`, metric);\n        }\n    }\n    /**\n     * Record long task\n     */\n    recordLongTask(entry) {\n        const { startTime, duration } = entry;\n        const taskName = entry.name || 'unknown';\n        const longTask = {\n            duration,\n            startTime,\n            taskName\n        };\n        this.metrics.longTasks.push(longTask);\n        // Limit array size to prevent memory leaks\n        if (this.metrics.longTasks.length > 50) {\n            this.metrics.longTasks.shift();\n        }\n        this.logIssue('long-task', `Long task detected: ${taskName} took ${Math.round(duration)}ms`, longTask);\n    }\n    /**\n     * Track user interactions\n     */\n    trackInteraction(event) {\n        if (!this.isActive)\n            return;\n        const startTime = performance.now();\n        const type = event.type;\n        const target = event.target ?\n            event.target.tagName || 'unknown' :\n            'unknown';\n        // Measure time until next frame\n        requestAnimationFrame(() => {\n            const endTime = performance.now();\n            const duration = endTime - startTime;\n            const metric = {\n                type,\n                target,\n                duration,\n                timestamp: Date.now()\n            };\n            this.metrics.interactions.push(metric);\n            // Limit array size to prevent memory leaks\n            if (this.metrics.interactions.length > 50) {\n                this.metrics.interactions.shift();\n            }\n            // Check for slow interactions\n            if (duration > this.thresholds.longTask) {\n                this.logIssue('slow-interaction', `Slow interaction: ${type} on ${target} took ${Math.round(duration)}ms`, metric);\n            }\n        });\n    }\n    /**\n     * Get current performance metrics\n     */\n    getMetrics() {\n        return Object.assign({}, this.metrics);\n    }\n    /**\n     * Add a metrics update listener\n     */\n    addMetricsListener(callback) {\n        this.metricsEventListeners.push(callback);\n    }\n    /**\n     * Remove a metrics update listener\n     */\n    removeMetricsListener(callback) {\n        this.metricsEventListeners = this.metricsEventListeners.filter(listener => listener !== callback);\n    }\n    /**\n     * Notify all metrics listeners\n     */\n    notifyMetricsUpdate() {\n        const metrics = this.getMetrics();\n        this.metricsEventListeners.forEach(listener => {\n            try {\n                listener(metrics);\n            }\n            catch (error) {\n                console.error('Error in metrics listener:', error);\n            }\n        });\n    }\n    /**\n     * Log a performance issue\n     */\n    logIssue(type, message, data) {\n        const issue = {\n            type,\n            message,\n            timestamp: Date.now(),\n            data\n        };\n        this.issueLogs.push(issue);\n        // Limit array size to prevent memory leaks\n        if (this.issueLogs.length > 100) {\n            this.issueLogs.shift();\n        }\n        if (this.isDebugMode) {\n            console.warn(`[PerformanceMonitor] ${message}`, data || '');\n        }\n    }\n    /**\n     * Get performance issues\n     */\n    getIssues() {\n        return [...this.issueLogs];\n    }\n    /**\n     * Clear performance issues\n     */\n    clearIssues() {\n        this.issueLogs = [];\n    }\n    /**\n     * Set performance thresholds\n     */\n    setThresholds(thresholds) {\n        this.thresholds = Object.assign(Object.assign({}, this.thresholds), Object.fromEntries(Object.entries(thresholds).map(([key, value]) => { var _a; return [key, (_a = value !== null && value !== void 0 ? value : this.thresholds[key]) !== null && _a !== void 0 ? _a : 0]; })));\n    }\n    /**\n     * Throttle a function\n     */\n    throttle(func, limit) {\n        let inThrottle = false;\n        return function (...args) {\n            if (!inThrottle) {\n                func.apply(this, args);\n                inThrottle = true;\n                setTimeout(() => {\n                    inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n    /**\n     * Create a performance report\n     */\n    createReport() {\n        const metrics = this.getMetrics();\n        const issues = this.getIssues();\n        const deviceCapabilities = getDeviceCapabilities();\n        return JSON.stringify({\n            timestamp: new Date().toISOString(),\n            metrics,\n            issues,\n            device: deviceCapabilities\n        }, null, 2);\n    }\n}\n// Export singleton instance methods\nexport const performanceMonitor = {\n    start: (debug = false) => PerformanceMonitor.getInstance().start(debug),\n    stop: () => PerformanceMonitor.getInstance().stop(),\n    getMetrics: () => PerformanceMonitor.getInstance().getMetrics(),\n    recordComponentRender: (componentName, duration) => PerformanceMonitor.getInstance().recordComponentRender(componentName, duration),\n    addMetricsListener: (callback) => PerformanceMonitor.getInstance().addMetricsListener(callback),\n    removeMetricsListener: (callback) => PerformanceMonitor.getInstance().removeMetricsListener(callback),\n    getIssues: () => PerformanceMonitor.getInstance().getIssues(),\n    clearIssues: () => PerformanceMonitor.getInstance().clearIssues(),\n    setThresholds: (thresholds) => PerformanceMonitor.getInstance().setThresholds(thresholds),\n    createReport: () => PerformanceMonitor.getInstance().createReport()\n};\n// Performance measuring HOC for React components\nexport function withPerformanceTracking(Component, componentName) {\n    const WrappedComponent = (props) => {\n        // This would be implemented as a proper React HOC in a real component\n        // This is just a placeholder for the utility file\n        return React.createElement(Component, props);\n    };\n    // Add display name for better debugging\n    WrappedComponent.displayName = `WithPerformanceTracking(${componentName})`;\n    return WrappedComponent;\n}\n// Custom hook for measuring component render time\nexport function usePerformanceTracking(componentName) {\n    // This would be implemented as a proper React hook in a real component\n    // This is just a placeholder for the utility file\n    return {\n        trackRender: (callback) => callback()\n    };\n}\nexport default performanceMonitor;\n","import * as deviceCapabilities from './deviceCapabilities';\n/**\n * Utility for managing animations with adaptive complexity based on device capabilities\n */\n/**\n * Determines the appropriate animation duration based on device capabilities\n * @param defaultDuration Default animation duration in ms\n * @returns Adjusted duration in ms\n */\nexport const getAdaptiveDuration = (defaultDuration) => {\n    if (!deviceCapabilities.shouldEnableFeature('animations', 'medium')) {\n        // For low-end devices, make animations 30% faster to reduce rendering load\n        return Math.round(defaultDuration * 0.7);\n    }\n    return defaultDuration;\n};\n/**\n * Determines if a specific animation type should run based on device capabilities\n * @param animationType Type of animation to check\n * @returns Boolean indicating if animation should run\n */\nexport const shouldRunAnimation = (animationType) => {\n    switch (animationType) {\n        case 'micro':\n            // Subtle micro-animations (e.g., button hover effects)\n            return deviceCapabilities.shouldEnableFeature('animations', 'low');\n        case 'transition':\n            // Page/view transitions\n            return deviceCapabilities.shouldEnableFeature('animations', 'low');\n        case 'parallax':\n            // Parallax and scroll effects\n            return deviceCapabilities.shouldEnableFeature('animations', 'medium');\n        case 'complex':\n            // Complex animations with multiple elements\n            return deviceCapabilities.shouldEnableFeature('animations', 'high');\n        case 'background':\n            // Background animations and effects\n            return deviceCapabilities.shouldEnableFeature('backgroundEffects', 'medium');\n        default:\n            return true;\n    }\n};\n/**\n * Get the appropriate complexity of an animation based on device capabilities\n * @param options Animation complexity options\n * @returns The selected animation complexity\n */\nexport const getAnimationComplexity = (options) => {\n    if (!deviceCapabilities.shouldEnableFeature('animations', 'low')) {\n        return options.none;\n    }\n    if (!deviceCapabilities.shouldEnableFeature('animations', 'medium')) {\n        return options.low;\n    }\n    if (!deviceCapabilities.shouldEnableFeature('animations', 'high')) {\n        return options.medium;\n    }\n    return options.high;\n};\n/**\n * Returns a CSS class name appropriate for the current device capability level\n */\nexport const getAnimationClass = (baseClass) => {\n    const complexity = getAnimationComplexity({\n        high: 'high',\n        medium: 'medium',\n        low: 'low',\n        none: 'none'\n    });\n    return `${baseClass}--${complexity}`;\n};\n/**\n * Debounces animations during rapid interactions to prevent jank\n */\nexport const debounceAnimation = (() => {\n    let timeoutId = null;\n    return (callback, delay = 150) => {\n        // For very low-end devices, increase debounce delay\n        const adaptiveDelay = deviceCapabilities.getPerformanceTier() !== 'high' ? delay * 1.5 : delay;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            callback();\n            timeoutId = null;\n        }, adaptiveDelay);\n    };\n})();\n/**\n * Animation presets for consistent animations across components\n */\nexport const AnimationPresets = {\n    fadeIn: (duration = 300, distance = 10) => ({\n        animation: `fadeIn ${getAdaptiveDuration(duration)}ms cubic-bezier(0.4, 0.0, 0.2, 1) forwards`,\n        shouldRun: shouldRunAnimation('transition'),\n        style: {\n            '--fade-distance': `${distance}px`\n        }\n    }),\n    fadeInNoTransform: (duration = 300) => ({\n        animation: `fadeInNoTransform ${getAdaptiveDuration(duration)}ms cubic-bezier(0.4, 0.0, 0.2, 1) forwards`,\n        shouldRun: shouldRunAnimation('transition')\n    }),\n    fadeOut: (duration = 300) => ({\n        animation: `fadeOut ${getAdaptiveDuration(duration)}ms ease-in forwards`,\n        shouldRun: shouldRunAnimation('transition')\n    }),\n    slideIn: (direction = 'right', duration = 300) => ({\n        animation: `slideIn${direction.charAt(0).toUpperCase() + direction.slice(1)} ${getAdaptiveDuration(duration)}ms ease-out forwards`,\n        shouldRun: shouldRunAnimation('transition')\n    }),\n    slideOut: (direction = 'right', duration = 300) => ({\n        animation: `slideOut${direction.charAt(0).toUpperCase() + direction.slice(1)} ${getAdaptiveDuration(duration)}ms ease-in forwards`,\n        shouldRun: shouldRunAnimation('transition')\n    }),\n    scale: (from = 0.9, to = 1, duration = 300) => ({\n        animation: `scale ${getAdaptiveDuration(duration)}ms cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards`,\n        shouldRun: shouldRunAnimation('transition'),\n        style: {\n            '--scale-from': from,\n            '--scale-to': to\n        }\n    }),\n    pulse: (duration = 1500, intensity = 1.05) => ({\n        animation: `pulse ${getAdaptiveDuration(duration)}ms ease-in-out infinite`,\n        shouldRun: shouldRunAnimation('micro'),\n        style: {\n            '--pulse-intensity': intensity\n        }\n    }),\n    shake: (duration = 500, intensity = 5) => ({\n        animation: `shake ${getAdaptiveDuration(duration)}ms ease-in-out`,\n        shouldRun: shouldRunAnimation('micro'),\n        style: {\n            '--shake-intensity': `${intensity}px`\n        }\n    }),\n    ripple: (duration = 600) => ({\n        animation: `ripple ${getAdaptiveDuration(duration)}ms ease-out forwards`,\n        shouldRun: shouldRunAnimation('micro')\n    }),\n    bounce: (duration = 800, height = 20) => ({\n        animation: `bounce ${getAdaptiveDuration(duration)}ms cubic-bezier(0.28, 0.84, 0.42, 1) infinite`,\n        shouldRun: shouldRunAnimation('micro'),\n        style: {\n            '--bounce-height': `${height}px`\n        }\n    })\n};\n/**\n * Hook for measuring animation performance\n */\nexport const measureAnimationPerformance = (animationName, callback) => {\n    // Only measure on high-end devices to avoid additional overhead on low-end devices\n    if (deviceCapabilities.getPerformanceTier() === 'high') {\n        const startTime = performance.now();\n        // Run the animation\n        callback();\n        // Set up a timeout to measure after animation is likely complete\n        setTimeout(() => {\n            const endTime = performance.now();\n            const duration = endTime - startTime;\n            // Report to performance monitoring\n            if (window.__PERFORMANCE_MONITOR) {\n                window.__PERFORMANCE_MONITOR.recordAnimationDuration(animationName, duration);\n            }\n            else {\n                console.debug(`Animation '${animationName}' took ${duration.toFixed(2)}ms`);\n            }\n        }, 100);\n    }\n    else {\n        // Just run the animation on low-end devices\n        callback();\n    }\n};\n","// User state management\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nexport const useUserStore = create()(persist((set, get) => ({\n    user: null,\n    styleQuizResult: null,\n    isLoading: false,\n    error: null,\n    setUser: (user) => {\n        set({ user });\n    },\n    updateUser: (updates) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        set({\n            user: Object.assign(Object.assign({}, currentUser), updates)\n        });\n    },\n    setStyleQuizResult: (result) => {\n        set({ styleQuizResult: result });\n    },\n    addToCloset: (item) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        set({\n            user: Object.assign(Object.assign({}, currentUser), { closet: [...currentUser.closet, item] })\n        });\n    },\n    removeFromCloset: (itemId) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        set({\n            user: Object.assign(Object.assign({}, currentUser), { closet: currentUser.closet.filter((item) => item.id !== itemId) })\n        });\n    },\n    toggleItemFavorite: (itemId, favorite) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        set({\n            user: Object.assign(Object.assign({}, currentUser), { closet: currentUser.closet.map((item) => item.id === itemId ? Object.assign(Object.assign({}, item), { favorite }) : item) })\n        });\n    },\n    addLikedItem: (itemId) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        // Add to liked items if not already there\n        if (!currentUser.feedback.likedItems.includes(itemId)) {\n            set({\n                user: Object.assign(Object.assign({}, currentUser), { feedback: Object.assign(Object.assign({}, currentUser.feedback), { likedItems: [...currentUser.feedback.likedItems, itemId], \n                        // If it was previously disliked, remove from disliked\n                        dislikedItems: currentUser.feedback.dislikedItems.filter((id) => id !== itemId), lastInteraction: new Date() }) })\n            });\n        }\n    },\n    addDislikedItem: (itemId) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        // Add to disliked items if not already there\n        if (!currentUser.feedback.dislikedItems.includes(itemId)) {\n            set({\n                user: Object.assign(Object.assign({}, currentUser), { feedback: Object.assign(Object.assign({}, currentUser.feedback), { dislikedItems: [...currentUser.feedback.dislikedItems, itemId], \n                        // If it was previously liked, remove from liked\n                        likedItems: currentUser.feedback.likedItems.filter((id) => id !== itemId), lastInteraction: new Date() }) })\n            });\n        }\n    },\n    removeLikedItem: (itemId) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        set({\n            user: Object.assign(Object.assign({}, currentUser), { feedback: Object.assign(Object.assign({}, currentUser.feedback), { likedItems: currentUser.feedback.likedItems.filter((id) => id !== itemId), lastInteraction: new Date() }) })\n        });\n    },\n    removeDislikedItem: (itemId) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        set({\n            user: Object.assign(Object.assign({}, currentUser), { feedback: Object.assign(Object.assign({}, currentUser.feedback), { dislikedItems: currentUser.feedback.dislikedItems.filter((id) => id !== itemId), lastInteraction: new Date() }) })\n        });\n    },\n    addViewedItem: (itemId) => {\n        const currentUser = get().user;\n        if (!currentUser)\n            return;\n        // Add to viewed items if not already there\n        if (!currentUser.feedback.viewedItems.includes(itemId)) {\n            set({\n                user: Object.assign(Object.assign({}, currentUser), { feedback: Object.assign(Object.assign({}, currentUser.feedback), { viewedItems: [...currentUser.feedback.viewedItems, itemId], lastInteraction: new Date() }) })\n            });\n        }\n    },\n    setLoading: (isLoading) => {\n        set({ isLoading });\n    },\n    setError: (error) => {\n        set({ error });\n    },\n    logout: () => {\n        set({\n            user: null,\n            styleQuizResult: null\n        });\n    }\n}), {\n    name: 'stylist-user-storage',\n    partialize: (state) => ({\n        user: state.user,\n        styleQuizResult: state.styleQuizResult\n    })\n}));\n","/**\n * Debug Mode Utility\n *\n * This utility provides a way to toggle debug mode for the application.\n * In debug mode, additional information is displayed to help diagnose issues.\n */\n/**\n * Store the debug mode state\n */\nlet debugMode = false;\n/**\n * Event name for debug mode changes\n */\nconst DEBUG_MODE_CHANGE_EVENT = 'stylist:debug-mode-change';\n/**\n * Toggle the debug mode state\n * @returns The new debug mode state\n */\nexport const toggleDebugMode = () => {\n    debugMode = !debugMode;\n    // Store the debug mode state in localStorage\n    try {\n        localStorage.setItem('stylist_debug_mode', String(debugMode));\n    }\n    catch (error) {\n        console.warn('Failed to persist debug mode state to localStorage:', error);\n    }\n    // Dispatch a custom event to notify components of the change\n    const event = new CustomEvent(DEBUG_MODE_CHANGE_EVENT, { detail: { debugMode } });\n    window.dispatchEvent(event);\n    return debugMode;\n};\n/**\n * Get the current debug mode state\n * @returns The current debug mode state\n */\nexport const getDebugMode = () => {\n    return debugMode;\n};\n/**\n * Initialize the debug mode from localStorage if available\n */\nexport const initDebugMode = () => {\n    try {\n        const storedDebugMode = localStorage.getItem('stylist_debug_mode');\n        if (storedDebugMode !== null) {\n            debugMode = storedDebugMode === 'true';\n        }\n    }\n    catch (error) {\n        console.warn('Failed to read debug mode state from localStorage:', error);\n    }\n};\n/**\n * A hook to listen for debug mode changes\n * @param callback Function to call when debug mode changes\n */\nexport const addDebugModeListener = (callback) => {\n    const handleDebugModeChange = (event) => {\n        const customEvent = event;\n        callback(customEvent.detail.debugMode);\n    };\n    window.addEventListener(DEBUG_MODE_CHANGE_EVENT, handleDebugModeChange);\n    // Return a cleanup function\n    return () => {\n        window.removeEventListener(DEBUG_MODE_CHANGE_EVENT, handleDebugModeChange);\n    };\n};\n/**\n * Log a message only when in debug mode\n * @param message The message to log\n * @param args Additional arguments to log\n */\nexport const debugLog = (message, ...args) => {\n    if (debugMode) {\n        console.log(`[DEBUG] ${message}`, ...args);\n    }\n};\n/**\n * Log an error only when in debug mode\n * @param message The error message to log\n * @param error The error object\n */\nexport const debugError = (message, error) => {\n    if (debugMode) {\n        console.error(`[DEBUG ERROR] ${message}`, error);\n    }\n};\n// Initialize debug mode when this module is loaded\ninitDebugMode();\n","// Utility functions for formatting data\nimport { format } from 'date-fns';\n// Format price with currency symbol\nexport const formatPrice = (price, currency = 'USD', locale = 'en-US') => {\n    return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency: currency\n    }).format(price);\n};\n// Format date in readable format\nexport const formatDate = (date, formatString = 'MMM d, yyyy') => {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return format(dateObj, formatString);\n};\n// Format percentage\nexport const formatPercentage = (value, decimals = 0) => {\n    return `${value.toFixed(decimals)}%`;\n};\n// Truncate text to a specific length with ellipsis\nexport const truncateText = (text, maxLength) => {\n    if (text.length <= maxLength)\n        return text;\n    return `${text.substring(0, maxLength)}...`;\n};\n// Convert hex color to RGB\nexport const hexToRgb = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        }\n        : null;\n};\n// Add opacity to color\nexport const withOpacity = (color, opacity) => {\n    const rgb = hexToRgb(color);\n    if (!rgb)\n        return color;\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${opacity})`;\n};\n// Get readable text color based on background\nexport const getReadableTextColor = (bgColor) => {\n    const rgb = hexToRgb(bgColor);\n    if (!rgb)\n        return '#000000';\n    // Calculate luminance\n    const luminance = (0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b) / 255;\n    // Return white for dark backgrounds, black for light backgrounds\n    return luminance > 0.5 ? '#000000' : '#FFFFFF';\n};\n// Convert snake_case or kebab-case to camelCase\nexport const toCamelCase = (str) => {\n    return str\n        .replace(/[-_](.)/g, (_, char) => char.toUpperCase())\n        .replace(/^(.)/, (_, char) => char.toLowerCase());\n};\n// Format file size\nexport const formatFileSize = (bytes) => {\n    if (bytes === 0)\n        return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n","// Utility functions for working with localStorage\n// Check if localStorage is available\nexport const isLocalStorageAvailable = () => {\n    const test = 'test';\n    try {\n        localStorage.setItem(test, test);\n        localStorage.removeItem(test);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// Get item from localStorage with expiry check\nexport const getWithExpiry = (key) => {\n    if (!isLocalStorageAvailable())\n        return null;\n    const itemStr = localStorage.getItem(key);\n    if (!itemStr)\n        return null;\n    try {\n        const item = JSON.parse(itemStr);\n        // Check if item has expiry\n        if (item.expiry && new Date().getTime() > item.expiry) {\n            localStorage.removeItem(key);\n            return null;\n        }\n        return item.value;\n    }\n    catch (_a) {\n        return null;\n    }\n};\n// Set item in localStorage with expiry\nexport const setWithExpiry = (key, value, expiryInSeconds) => {\n    if (!isLocalStorageAvailable())\n        return;\n    const item = {\n        value,\n        expiry: new Date().getTime() + expiryInSeconds * 1000\n    };\n    localStorage.setItem(key, JSON.stringify(item));\n};\n// Remove item from localStorage\nexport const removeItem = (key) => {\n    if (!isLocalStorageAvailable())\n        return;\n    localStorage.removeItem(key);\n};\n// Get user ID from localStorage or create a new one\nexport const getUserId = () => {\n    if (!isLocalStorageAvailable()) {\n        return `anonymous_${Date.now()}`;\n    }\n    let userId = localStorage.getItem('stylist_user_id');\n    if (!userId) {\n        userId = `user_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n        localStorage.setItem('stylist_user_id', userId);\n    }\n    return userId;\n};\n// Set user ID in localStorage\nexport const setUserId = (userId) => {\n    if (!isLocalStorageAvailable())\n        return;\n    localStorage.setItem('stylist_user_id', userId);\n};\n// Clear all Stylist-related localStorage items\nexport const clearStylistStorage = () => {\n    if (!isLocalStorageAvailable())\n        return;\n    const stylistKeys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('stylist_')) {\n            stylistKeys.push(key);\n        }\n    }\n    stylistKeys.forEach((key) => localStorage.removeItem(key));\n};\n","// Feedback state management\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { getUserId } from '@/utils/localStorage';\n// Helper to convert sets to arrays for persistence\nconst setToArray = (set) => Array.from(set);\nconst arrayToSet = (array) => new Set(array);\nexport const useFeedbackStore = create()(persist((set, get) => ({\n    likedItems: new Set(),\n    dislikedItems: new Set(),\n    likedOutfits: new Set(),\n    dislikedOutfits: new Set(),\n    thumbsUpMessages: new Set(),\n    feedbackHistory: [],\n    pendingSync: [],\n    isSyncing: false,\n    lastSyncedAt: null,\n    addItemFeedback: (itemId, type) => {\n        const userId = getUserId();\n        const timestamp = new Date();\n        const feedbackItem = {\n            id: `item_${type}_${itemId}_${timestamp.getTime()}`,\n            type,\n            timestamp,\n            entityType: 'item',\n            metadata: { itemId, userId }\n        };\n        if (type === 'like') {\n            set((state) => ({\n                likedItems: new Set(state.likedItems).add(itemId),\n                dislikedItems: new Set(state.dislikedItems).delete(itemId) ?\n                    new Set(state.dislikedItems) : state.dislikedItems,\n                feedbackHistory: [...state.feedbackHistory, feedbackItem],\n                pendingSync: [...state.pendingSync, feedbackItem]\n            }));\n        }\n        else {\n            set((state) => ({\n                dislikedItems: new Set(state.dislikedItems).add(itemId),\n                likedItems: new Set(state.likedItems).delete(itemId) ?\n                    new Set(state.likedItems) : state.likedItems,\n                feedbackHistory: [...state.feedbackHistory, feedbackItem],\n                pendingSync: [...state.pendingSync, feedbackItem]\n            }));\n        }\n    },\n    addOutfitFeedback: (outfitId, type) => {\n        const userId = getUserId();\n        const timestamp = new Date();\n        const feedbackItem = {\n            id: `outfit_${type}_${outfitId}_${timestamp.getTime()}`,\n            type,\n            timestamp,\n            entityType: 'outfit',\n            metadata: { outfitId, userId }\n        };\n        if (type === 'like') {\n            set((state) => ({\n                likedOutfits: new Set(state.likedOutfits).add(outfitId),\n                dislikedOutfits: new Set(state.dislikedOutfits).delete(outfitId) ?\n                    new Set(state.dislikedOutfits) : state.dislikedOutfits,\n                feedbackHistory: [...state.feedbackHistory, feedbackItem],\n                pendingSync: [...state.pendingSync, feedbackItem]\n            }));\n        }\n        else {\n            set((state) => ({\n                dislikedOutfits: new Set(state.dislikedOutfits).add(outfitId),\n                likedOutfits: new Set(state.likedOutfits).delete(outfitId) ?\n                    new Set(state.likedOutfits) : state.likedOutfits,\n                feedbackHistory: [...state.feedbackHistory, feedbackItem],\n                pendingSync: [...state.pendingSync, feedbackItem]\n            }));\n        }\n    },\n    addMessageThumbsUp: (messageId) => {\n        const userId = getUserId();\n        const timestamp = new Date();\n        const feedbackItem = {\n            id: `message_thumbsUp_${messageId}_${timestamp.getTime()}`,\n            type: 'thumbsUp',\n            timestamp,\n            entityType: 'recommendation',\n            metadata: { messageId, userId }\n        };\n        set((state) => ({\n            thumbsUpMessages: new Set(state.thumbsUpMessages).add(messageId),\n            feedbackHistory: [...state.feedbackHistory, feedbackItem],\n            pendingSync: [...state.pendingSync, feedbackItem]\n        }));\n    },\n    removeItemFeedback: (itemId) => {\n        set((state) => ({\n            likedItems: new Set(state.likedItems).delete(itemId) ?\n                new Set(state.likedItems) : state.likedItems,\n            dislikedItems: new Set(state.dislikedItems).delete(itemId) ?\n                new Set(state.dislikedItems) : state.dislikedItems\n        }));\n    },\n    removeOutfitFeedback: (outfitId) => {\n        set((state) => ({\n            likedOutfits: new Set(state.likedOutfits).delete(outfitId) ?\n                new Set(state.likedOutfits) : state.likedOutfits,\n            dislikedOutfits: new Set(state.dislikedOutfits).delete(outfitId) ?\n                new Set(state.dislikedOutfits) : state.dislikedOutfits\n        }));\n    },\n    removeMessageThumbsUp: (messageId) => {\n        set((state) => ({\n            thumbsUpMessages: new Set(state.thumbsUpMessages).delete(messageId) ?\n                new Set(state.thumbsUpMessages) : state.thumbsUpMessages\n        }));\n    },\n    markAsSynced: (feedbackIds) => {\n        set((state) => ({\n            pendingSync: state.pendingSync.filter(item => !feedbackIds.includes(item.id)),\n            lastSyncedAt: new Date()\n        }));\n    },\n    setIsSyncing: (isSyncing) => {\n        set({ isSyncing });\n    },\n    getItemFeedbackStatus: (itemId) => {\n        const state = get();\n        return {\n            liked: state.likedItems.has(itemId),\n            disliked: state.dislikedItems.has(itemId)\n        };\n    },\n    getOutfitFeedbackStatus: (outfitId) => {\n        const state = get();\n        return {\n            liked: state.likedOutfits.has(outfitId),\n            disliked: state.dislikedOutfits.has(outfitId)\n        };\n    },\n    isMessageThumbedUp: (messageId) => {\n        return get().thumbsUpMessages.has(messageId);\n    },\n    getPendingSyncItems: () => {\n        return get().pendingSync;\n    },\n    clearSyncedItems: () => {\n        set({\n            pendingSync: [],\n            lastSyncedAt: new Date()\n        });\n    }\n}), {\n    name: 'stylist-feedback-storage',\n    // Custom serialization for Set objects (which aren't serializable by default)\n    partialize: (state) => ({\n        likedItems: setToArray(state.likedItems),\n        dislikedItems: setToArray(state.dislikedItems),\n        likedOutfits: setToArray(state.likedOutfits),\n        dislikedOutfits: setToArray(state.dislikedOutfits),\n        thumbsUpMessages: setToArray(state.thumbsUpMessages),\n        feedbackHistory: state.feedbackHistory,\n        pendingSync: state.pendingSync,\n        lastSyncedAt: state.lastSyncedAt\n    }),\n    // Custom deserialization to convert arrays back to Set objects\n    onRehydrateStorage: () => (state) => {\n        if (state) {\n            state.likedItems = arrayToSet(state.likedItems);\n            state.dislikedItems = arrayToSet(state.dislikedItems);\n            state.likedOutfits = arrayToSet(state.likedOutfits);\n            state.dislikedOutfits = arrayToSet(state.dislikedOutfits);\n            state.thumbsUpMessages = arrayToSet(state.thumbsUpMessages);\n        }\n    }\n}));\nexport default useFeedbackStore;\n","// deviceCapabilities.ts\n// Utility for detecting device capabilities and adjusting performance\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Singleton to store results for reuse across components\nlet cachedCapabilities = null;\n/**\n * Calculate network speed based on navigator.connection\n */\nfunction calculateNetworkSpeed() {\n    // Check if Network Information API is available\n    const conn = navigator.connection;\n    if (!conn)\n        return 'medium';\n    // Check effectiveType\n    if (conn.effectiveType) {\n        switch (conn.effectiveType) {\n            case 'slow-2g':\n            case '2g':\n                return 'slow';\n            case '3g':\n                return 'medium';\n            case '4g':\n            case '5g':\n                return 'fast';\n            default:\n                return 'medium';\n        }\n    }\n    // Fallback: check downlink speed if available\n    if (conn.downlink) {\n        if (conn.downlink < 1)\n            return 'slow';\n        if (conn.downlink < 5)\n            return 'medium';\n        return 'fast';\n    }\n    return 'medium';\n}\n/**\n * Calculate battery status if available\n */\nfunction calculateBatteryStatus() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // Check if Battery API is available\n            if ('getBattery' in navigator) {\n                const battery = yield navigator.getBattery();\n                if (battery.charging)\n                    return 'high'; // Charging so power is not a concern\n                // Battery percentage checks\n                if (battery.level < 0.2)\n                    return 'low';\n                if (battery.level < 0.5)\n                    return 'medium';\n                return 'high';\n            }\n        }\n        catch (error) {\n            console.warn('Battery status detection failed:', error);\n        }\n        return 'unknown';\n    });\n}\n/**\n * Calculate GPU capabilities\n */\nfunction calculateGPUCapabilities() {\n    try {\n        const canvas = document.createElement('canvas');\n        const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n        if (!gl)\n            return 'low';\n        // Check for basic WebGL capabilities\n        const webGLContext = gl;\n        const debugInfo = webGLContext.getExtension('WEBGL_debug_renderer_info');\n        if (!debugInfo)\n            return 'medium';\n        const renderer = webGLContext.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL) || '';\n        const gpuVendor = webGLContext.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL) || '';\n        // Convert to lowercase for easier comparisons\n        const rendererString = renderer.toString().toLowerCase();\n        const vendorString = gpuVendor.toString().toLowerCase();\n        // Check for high-end GPUs\n        if (rendererString.includes('nvidia') ||\n            rendererString.includes('geforce') ||\n            rendererString.includes('radeon') ||\n            rendererString.includes('intel iris') ||\n            rendererString.includes('apple gpu')) {\n            return 'high';\n        }\n        // Check for medium GPUs\n        if (rendererString.includes('intel') ||\n            vendorString.includes('intel') ||\n            rendererString.includes('mali-t') ||\n            rendererString.includes('adreno')) {\n            return 'medium';\n        }\n        return 'low';\n    }\n    catch (error) {\n        console.warn('GPU detection failed:', error);\n        return 'low';\n    }\n}\n/**\n * Calculate device performance based on various metrics\n */\nfunction calculatePerformance() {\n    // Check for navigator.deviceMemory\n    const memory = navigator.deviceMemory || 4; // Default to 4GB if not available\n    // Check for navigator.hardwareConcurrency\n    const cpuCores = navigator.hardwareConcurrency || 2; // Default to 2 cores if not available\n    // Detect mobile vs desktop\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    // Mobile devices are generally less powerful than desktops\n    if (isMobile) {\n        if (memory <= 2 || cpuCores <= 4)\n            return 'low';\n        if (memory <= 4 || cpuCores <= 6)\n            return 'medium';\n        return 'high';\n    }\n    else {\n        if (memory <= 4 || cpuCores <= 2)\n            return 'low';\n        if (memory <= 8 || cpuCores <= 4)\n            return 'medium';\n        return 'high';\n    }\n}\n/**\n * Detect screen size category\n */\nfunction detectScreenSize() {\n    const width = window.innerWidth;\n    if (width < 768)\n        return 'small';\n    if (width < 1280)\n        return 'medium';\n    return 'large';\n}\n/**\n * Detect device type\n */\nfunction detectDeviceType() {\n    const ua = navigator.userAgent.toLowerCase();\n    const isIOS = /iphone|ipad|ipod/.test(ua);\n    const isAndroid = /android/.test(ua);\n    const isDesktop = !isIOS && !isAndroid;\n    return { isIOS, isAndroid, isDesktop };\n}\n/**\n * Get device capabilities with optional force refresh\n */\nexport function getDeviceCapabilities(forceRefresh = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Return cached results if available and not forcing refresh\n        if (cachedCapabilities && !forceRefresh) {\n            return cachedCapabilities;\n        }\n        const deviceType = detectDeviceType();\n        const batteryStatus = yield calculateBatteryStatus();\n        cachedCapabilities = Object.assign({ performance: calculatePerformance(), memory: navigator.deviceMemory ?\n                (navigator.deviceMemory <= 2 ? 'low' :\n                    navigator.deviceMemory <= 4 ? 'medium' : 'high') :\n                'medium', gpu: calculateGPUCapabilities(), network: calculateNetworkSpeed(), screenSize: detectScreenSize(), battery: batteryStatus, touch: 'ontouchstart' in window || navigator.maxTouchPoints > 0 }, deviceType);\n        // Log to console for development purposes\n        console.log('[DeviceCapabilities] Detected:', cachedCapabilities);\n        return cachedCapabilities;\n    });\n}\n/**\n * Returns a performance tier for overall device capability\n * Used for quick decision making in components\n */\nexport function getPerformanceTier() {\n    // Use cached capabilities if available\n    if (cachedCapabilities) {\n        // Weight factors for different aspects\n        const performanceWeight = 0.35;\n        const memoryWeight = 0.25;\n        const gpuWeight = 0.25;\n        const networkWeight = 0.15;\n        // Convert string values to numeric scores\n        const performanceScore = cachedCapabilities.performance === 'low' ? 1 :\n            cachedCapabilities.performance === 'medium' ? 2 : 3;\n        const memoryScore = cachedCapabilities.memory === 'low' ? 1 :\n            cachedCapabilities.memory === 'medium' ? 2 : 3;\n        const gpuScore = cachedCapabilities.gpu === 'low' ? 1 :\n            cachedCapabilities.gpu === 'medium' ? 2 : 3;\n        const networkScore = cachedCapabilities.network === 'slow' ? 1 :\n            cachedCapabilities.network === 'medium' ? 2 : 3;\n        // Calculate weighted average\n        const weightedScore = (performanceScore * performanceWeight) +\n            (memoryScore * memoryWeight) +\n            (gpuScore * gpuWeight) +\n            (networkScore * networkWeight);\n        // Convert back to tier\n        if (weightedScore < 1.67)\n            return 'low';\n        if (weightedScore < 2.33)\n            return 'medium';\n        return 'high';\n    }\n    // Fallback if not calculated yet\n    return 'medium';\n}\n/**\n * Hook for using device capabilities in React components\n */\nexport function useDeviceCapabilities(forceRefresh = false) {\n    // Would be implemented with React hooks in a real component\n    // This is just a placeholder for the utility file\n    return {\n        capabilities: cachedCapabilities,\n        isLoading: !cachedCapabilities,\n        refresh: () => getDeviceCapabilities(true)\n    };\n}\n/**\n * Determine if a feature should be enabled based on device capabilities\n */\nexport function shouldEnableFeature(featureName, requiredTier = 'medium') {\n    const tier = getPerformanceTier();\n    // Mapping of tiers to numeric values\n    const tierValues = {\n        'low': 1,\n        'medium': 2,\n        'high': 3\n    };\n    // Special cases for specific features\n    if (featureName === 'virtualTryOn') {\n        // Virtual try-on might require more GPU and memory\n        return tierValues[(cachedCapabilities === null || cachedCapabilities === void 0 ? void 0 : cachedCapabilities.gpu) || 'medium'] >= tierValues[requiredTier] &&\n            tierValues[(cachedCapabilities === null || cachedCapabilities === void 0 ? void 0 : cachedCapabilities.memory) || 'medium'] >= tierValues[requiredTier];\n    }\n    if (featureName === 'highQualityImages') {\n        // Consider network speed for image quality\n        return tierValues[(cachedCapabilities === null || cachedCapabilities === void 0 ? void 0 : cachedCapabilities.network) || 'medium'] >= tierValues[requiredTier];\n    }\n    if (featureName === 'realTimeUpdates') {\n        // Real-time updates might depend on network more than other factors\n        if ((cachedCapabilities === null || cachedCapabilities === void 0 ? void 0 : cachedCapabilities.network) === 'slow')\n            return false;\n        if (requiredTier === 'low')\n            return true;\n        return tierValues[(cachedCapabilities === null || cachedCapabilities === void 0 ? void 0 : cachedCapabilities.network) || 'medium'] >= tierValues[requiredTier];\n    }\n    // For most features, just use the overall performance tier\n    return tierValues[tier] >= tierValues[requiredTier];\n}\n// Initialize capabilities when the module is imported\ngetDeviceCapabilities().catch(error => {\n    console.error('Failed to initialize device capabilities:', error);\n});\nexport default {\n    getDeviceCapabilities,\n    getPerformanceTier,\n    shouldEnableFeature\n};\n","// Chat state management\nimport { create } from 'zustand';\nimport { v4 as uuidv4 } from 'uuid';\nimport { MessageType } from '../types/index';\nexport const useChatStore = create((set, get) => ({\n    messages: [],\n    isOpen: true,\n    isMinimized: false,\n    isLoading: false,\n    error: null,\n    currentView: 'chat',\n    addMessage: (message) => {\n        const id = uuidv4();\n        const timestamp = new Date();\n        const newMessage = Object.assign(Object.assign({}, message), { id, timestamp });\n        // Using type assertion to work around type compatibility issues\n        set((state) => ({\n            messages: [...state.messages, newMessage]\n        }));\n        return id;\n    },\n    addTextMessage: (text, sender) => {\n        const senderValue = typeof sender === 'string' ? sender : sender;\n        const message = {\n            type: MessageType.TEXT,\n            sender: senderValue,\n            text\n        };\n        return get().addMessage(message);\n    },\n    updateMessage: (id, updates) => {\n        // Using type assertion to work around type compatibility issues\n        set((state) => ({\n            messages: state.messages.map((msg) => msg.id === id ? Object.assign(Object.assign({}, msg), updates) : msg)\n        }));\n    },\n    removeMessage: (id) => {\n        set((state) => ({\n            messages: state.messages.filter((msg) => msg.id !== id)\n        }));\n    },\n    clearMessages: () => {\n        set({ messages: [] });\n    },\n    toggleOpen: () => {\n        const isCurrentlyOpen = get().isOpen;\n        set({\n            isOpen: !isCurrentlyOpen,\n            isMinimized: false\n        });\n    },\n    toggleMinimize: () => {\n        const isCurrentlyMinimized = get().isMinimized;\n        set({ isMinimized: !isCurrentlyMinimized });\n    },\n    setLoading: (isLoading) => {\n        set({ isLoading });\n    },\n    setError: (error) => {\n        set({ error });\n    },\n    setCurrentView: (view) => {\n        set({ currentView: view });\n    },\n    setIsOpen: (isOpen) => {\n        set({ isOpen });\n    }\n}));\n"],"names":["root","factory","exports","module","define","amd","self","DEFAULT_SETTINGS","preferredBackgroundRemovalMethod","TENSORFLOW","removeBackgroundAutomatically","showGuidelines","highQualityRendering","defaultGarmentScale","TOP","BOTTOM","DRESS","OUTERWEAR","SHOES","ACCESSORY","defaultGarmentOffset","x","y","useTryOnStore","set","get","currentOutfit","userImage","isLoading","error","settings","savedResults","canvasWidth","canvasHeight","isTryOnModalOpen","isUploadModalOpen","setCurrentOutfit","outfit","addGarmentToOutfit","garment","filteredGarments","garments","filter","g","type","bodyPosition","Object","assign","newOutfit","id","Date","now","createdAt","removeGarmentFromOutfit","garmentId","updatedGarments","updateGarment","updates","map","setUserImage","image","userImageForOutfit","updateUserImage","updatedImage","clearUserImage","updatedOutfit","undefined","updateOutfit","setSettings","setLoading","setError","saveResult","result","results","existingIndex","findIndex","r","push","deleteSavedResult","resultId","filteredResults","setCanvasDimensions","width","height","openTryOnModal","closeTryOnModal","openUploadModal","closeUploadModal","reset","startNewTryOn","productImage","productType","crypto","randomUUID","newGarment","url","URL","createObjectURL","zIndex","length","layerIndex","scale","offset","rotation","withoutBackground","tryOnOutfit","name","partialize","state","CATEGORIES","TOPS","BOTTOMS","DRESSES","ACCESSORIES","FOOTWEAR","BAGS","JEWELRY","COLORS","hex","SIZES","TOPS_NUMERIC","TOPS_LETTER","BOTTOMS_PANTS","BOTTOMS_JEANS","SHOES_US","PATTERNS","MATERIALS","BRANDS","RETAILERS","PRICE_RANGES","BUDGET","min","max","MIDRANGE","PREMIUM","LUXURY","generateMatchReasons","category","score","categoryReasons","numGeneralReasons","Math","floor","random","selectedGeneral","sort","slice","specificReasons","numSpecificReasons","reasons","unshift","generateId","prefix","toString","substring","createImageUrl","urls","mainUrl","toLowerCase","replace","split","generateProductUrl","retailerId","generateProduct","productCategory","values","brand","adjectives","categoryItems","descriptors","randomAdjective","items","generateProductName","priceRange","price","range","round","generatePrice","salePrice","originalPrice","discountPercent","generateSalePrice","numberOfColors","selectedColors","c","sizeArray","numberOfSizes","selectedSizes","matchScore","colors","sizes","imageUrls","matchReasons","inStock","materials","patterns","generateOutfitName","occasion","prefixes","outfitTypes","occasionDescriptors","outfitType","OCCASIONS","generateOutfit","products","_a","_b","outfitOccasion","topItems","p","bottomItems","dressItems","footwearItems","outerwearItems","accessoryItems","bagItems","jewelryItems","selectedItems","avgMatchScore","reduce","sum","item","occasionAdjectives","outfitMatchReasons","CELEBRITIES","EVENTS","generateRecentDate","pastYear","setFullYear","getFullYear","getTime","generateSocialProofItem","celebrity","eventWithYear","designers","numTags","outfitTags","designer","numPatterns","numColors","numProducts","matchedProducts","product","join","includes","some","pattern","find","description","imageUrl","event","timestamp","toISOString","mockData","productCount","outfitCount","socialProofCount","count","categoryDistribution","ceil","entries","forEach","categoryCount","i","remaining","generateProducts","outfits","occasionDistribution","acc","occasionCount","generateOutfits","socialProofItems","generateSocialProofItems","userProfile","userId","isAnonymous","preferences","stylePreferences","style","weight","colorPreferences","color","sizePreferences","size","favoriteRetailers","occasionPreferences","top","bottom","dress","shoe","styles","brands","occasions","priceRanges","closet","feedback","likedItems","dislikedItems","savedOutfits","viewedItems","lastInteraction","lastActive","categories","generateMockData","DATA_MODE","DEMO","PRODUCTION","isMockDataEnabled","localStorage","getItem","e","setDataMode","mode","setItem","useRecommendationStore","recommendedItems","recommendedOutfits","wishlistItems","cartItems","context","loading","setRecommendedItems","setRecommendedOutfits","setSavedOutfits","addRecommendedItem","addRecommendedOutfit","addToWishlist","wishlistItem","itemId","removeFromWishlist","addToCart","existingItemIndex","cartItem","updatedCartItems","quantity","removeFromCart","updateCartItemQuantity","addViewedItem","saveOutfit","savedOutfit","outfitId","removeSavedOutfit","setContext","clearRecommendations","getItemsByCategory","getItemsSortedByMatchScore","a","b","getOutfitById","getItemById","updateItem","monitorExistingStore","storeName","store","subscribe","newState","MessageType","MessageSender","MAX_RETRY_ATTEMPTS","API_URL","API_TIMEOUT","ANTHROPIC_API_KEY","REACT_APP_ANTHROPIC_API_KEY","CLAUDE_API_URL","REACT_APP_ANTHROPIC_API_URL","CLAUDE_MODEL","REACT_APP_ANTHROPIC_MODEL","FORCE_DEMO_MODE","REACT_APP_FORCE_DEMO_MODE","USE_CLAUDE_DEMO","REACT_APP_USE_CLAUDE_DEMO","REMOVE_BG_API_KEY","REACT_APP_REMOVE_BG_API_KEY","USE_MOCK_RETAILER","REACT_APP_USE_MOCK_RETAILER","AnalyticsEventType","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","done","then","apply","getSessionId","sessionId","sessionStorage","trackEvent","data","queueEvent","eventQueue","isSending","sendQueuedEvents","batch","fetch","method","headers","body","JSON","stringify","events","ok","setTimeout","err","toggleDemoMode","newMode","success","window","__STYLIST_DEMO_MODE","CustomEvent","detail","dispatchEvent","useDemoMode","isDemoMode","setIsDemoMode","useState","useEffect","handleModeChange","addEventListener","removeEventListener","DemoModeToggle","className","toggle","children","checked","onChange","demoFlows","newUser","duration","targetAudience","setup","steps","title","action","expectedOutcome","tips","successCriteria","returning","influencer","powerUser","GarmentType","BodyPosition","ProcessingStatus","BackgroundRemovalMethod","mapProductTypeToGarmentType","lcType","PerformanceMonitor","constructor","this","isActive","isDebugMode","fpsBuffer","lastFrameTime","frameCounter","animationFrameId","metricsEventListeners","thresholds","fps","memory","loadTime","renderTime","networkRequest","longTask","issueLogs","memoryWarningShown","metrics","networkRequests","interactions","componentRenderTimes","longTasks","performance","timing","loadEventEnd","navigationStart","setupObservers","getInstance","instance","PerformanceObserver","getEntries","entry","entryType","recordNetworkRequest","observe","entryTypes","recordLongTask","document","trackInteraction","bind","throttle","start","debug","startFPSMonitoring","startMemoryMonitoring","stop","cancelAnimationFrame","recordComponentRender","componentName","logIssue","measureFPS","elapsed","currentFPS","shift","notifyMetricsUpdate","requestAnimationFrame","memoryInterval","setInterval","memoryInfo","usedHeap","usedJSHeapSize","totalHeap","jsHeapSizeLimit","memoryUsage","jsHeapSize","clearInterval","metric","transferSize","status","initiatorType","startTime","taskName","target","tagName","getMetrics","addMetricsListener","callback","removeMetricsListener","listener","message","issue","getIssues","clearIssues","setThresholds","fromEntries","key","func","limit","inThrottle","args","createReport","issues","deviceCapabilities","device","performanceMonitor","getAnimationComplexity","options","high","medium","low","none","timeoutId","useUserStore","user","styleQuizResult","setUser","updateUser","currentUser","setStyleQuizResult","addToCloset","removeFromCloset","toggleItemFavorite","favorite","addLikedItem","addDislikedItem","removeLikedItem","removeDislikedItem","logout","debugMode","DEBUG_MODE_CHANGE_EVENT","toggleDebugMode","String","getDebugMode","addDebugModeListener","handleDebugModeChange","debugLog","storedDebugMode","initDebugMode","formatPrice","currency","locale","Intl","NumberFormat","format","formatDate","date","formatString","dateObj","isLocalStorageAvailable","test","removeItem","getUserId","setToArray","Array","from","arrayToSet","array","Set","useFeedbackStore","likedOutfits","dislikedOutfits","thumbsUpMessages","feedbackHistory","pendingSync","isSyncing","lastSyncedAt","addItemFeedback","feedbackItem","entityType","metadata","add","delete","addOutfitFeedback","addMessageThumbsUp","messageId","removeItemFeedback","removeOutfitFeedback","removeMessageThumbsUp","markAsSynced","feedbackIds","setIsSyncing","getItemFeedbackStatus","liked","has","disliked","getOutfitFeedbackStatus","isMessageThumbedUp","getPendingSyncItems","clearSyncedItems","onRehydrateStorage","cachedCapabilities","calculateNetworkSpeed","conn","navigator","connection","effectiveType","downlink","calculateGPUCapabilities","canvas","createElement","gl","getContext","webGLContext","debugInfo","getExtension","renderer","getParameter","UNMASKED_RENDERER_WEBGL","gpuVendor","UNMASKED_VENDOR_WEBGL","rendererString","vendorString","calculatePerformance","deviceMemory","cpuCores","hardwareConcurrency","userAgent","detectScreenSize","innerWidth","getDeviceCapabilities","forceRefresh","deviceType","ua","isIOS","isAndroid","isDesktop","detectDeviceType","batteryStatus","battery","getBattery","charging","level","calculateBatteryStatus","gpu","network","screenSize","touch","maxTouchPoints","getPerformanceTier","performanceWeight","memoryWeight","gpuWeight","networkWeight","weightedScore","shouldEnableFeature","featureName","requiredTier","tier","tierValues","catch","useChatStore","messages","isOpen","isMinimized","currentView","addMessage","newMessage","addTextMessage","text","sender","senderValue","TEXT","updateMessage","msg","removeMessage","clearMessages","toggleOpen","isCurrentlyOpen","toggleMinimize","isCurrentlyMinimized","setCurrentView","view","setIsOpen"],"sourceRoot":""}