{"version":3,"file":"stylist-vendors-eeb47446.6408eac6e63d658865ed.js","mappings":"sRAqBO,MAAMA,UAAuBC,MAChC,WAAAC,CAAYC,GACRC,MAAMD,GAENE,OAAOC,eAAeC,KAAMP,EAAeQ,UAC/C,EAKG,MAAMC,UAAqBR,MAC9B,WAAAC,CAAYC,GACRC,MAAMD,GAENE,OAAOC,eAAeC,KAAME,EAAaD,UAC7C,EAKG,MAAME,UAAmBT,MAC5B,WAAAC,CAAYC,GACRC,MAAMD,GAENE,OAAOC,eAAeC,KAAMG,EAAWF,UAC3C,EAKG,MAAMG,UAA4BV,MACrC,WAAAC,CAAYC,GACRC,MAAMD,GAENE,OAAOC,eAAeC,KAAMI,EAAoBH,UACpD,EAKG,MAAMI,UAAuBX,MAChC,WAAAC,CAAYC,GACRC,MAAMD,GAENE,OAAOC,eAAeC,KAAMK,EAAeJ,UAC/C,EAK4BP,K","sources":["webpack://StylistWidget/./node_modules/@tensorflow/tfjs-layers/dist/errors.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n/**\n * Equivalent of Python's AttributeError.\n */\nexport class AttributeError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, AttributeError.prototype);\n    }\n}\n/**\n * Equivalent of Python's RuntimeError.\n */\nexport class RuntimeError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, RuntimeError.prototype);\n    }\n}\n/**\n * Equivalent of Python's ValueError.\n */\nexport class ValueError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ValueError.prototype);\n    }\n}\n/**\n * Equivalent of Python's NotImplementedError.\n */\nexport class NotImplementedError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, NotImplementedError.prototype);\n    }\n}\n/**\n * Equivalent of Python's AssertionError.\n */\nexport class AssertionError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, AssertionError.prototype);\n    }\n}\n/**\n * Equivalent of Python's IndexError.\n */\nexport class IndexError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, IndexError.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map"],"names":["AttributeError","Error","constructor","message","super","Object","setPrototypeOf","this","prototype","RuntimeError","ValueError","NotImplementedError","AssertionError"],"sourceRoot":""}