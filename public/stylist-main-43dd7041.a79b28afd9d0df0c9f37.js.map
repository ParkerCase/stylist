{"version":3,"file":"stylist-main-43dd7041.a79b28afd9d0df0c9f37.js","mappings":"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","sources":["webpack://StylistWidget/./src/api/feedbackApi.ts","webpack://StylistWidget/./src/api/index.ts","webpack://StylistWidget/./src/api/apiClient.ts","webpack://StylistWidget/./src/StylistWidget.tsx"],"sourcesContent":["// Feedback API client for synchronizing user feedback\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class FeedbackApi {\n    constructor(apiClient) {\n        this.apiClient = apiClient;\n    }\n    /**\n     * Synchronize local feedback with the backend\n     */\n    syncFeedback(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield this.apiClient.post(`/api/v1/users/${request.userId}/feedback/sync`, {\n                    feedbackItems: request.feedbackItems\n                });\n            }\n            catch (error) {\n                console.warn('Failed to sync feedback, will retry later:', error);\n                // Return a failed response\n                return {\n                    syncedItemIds: [],\n                    success: false,\n                    message: error instanceof Error ? error.message : 'Unknown error'\n                };\n            }\n        });\n    }\n}\n","// Export all API clients and create a configured instance\nimport { createIntelligentApiClient } from './intelligentApiClient';\nimport { UserApi } from './userApi';\nimport { RecommendationApi } from './recommendationApi';\nimport { FeedbackApi } from './feedbackApi';\nimport { API_URL, API_TIMEOUT } from '../utils/environment';\n// Default API configuration from environment\nconst DEFAULT_API_URL = API_URL;\nconst DEFAULT_TIMEOUT = API_TIMEOUT;\n// Create and configure API clients with intelligent fallback\nexport const createStylistApi = (config) => {\n    // Use intelligent API client for built-in fallback\n    const apiClient = createIntelligentApiClient({\n        baseURL: config.apiUrl || DEFAULT_API_URL,\n        apiKey: config.apiKey,\n        timeout: config.timeout || DEFAULT_TIMEOUT,\n        headers: {\n            'X-Retailer-ID': config.retailerId\n        }\n    });\n    return {\n        user: new UserApi(apiClient),\n        recommendation: new RecommendationApi(apiClient),\n        feedback: new FeedbackApi(apiClient)\n    };\n};\n// Create a default client for testing and development\nconst defaultApiClient = createIntelligentApiClient();\n// Export default API services for convenience\nexport const defaultApiServices = {\n    user: new UserApi(defaultApiClient),\n    recommendation: new RecommendationApi(defaultApiClient),\n    feedback: new FeedbackApi(defaultApiClient)\n};\nexport { UserApi, RecommendationApi, FeedbackApi };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Enhanced API client with better error handling and retry logic\nimport axios from 'axios';\nexport class ApiClient {\n    constructor(config) {\n        this.maxRetries = config.maxRetries || 3;\n        // Store the auth header getter function if provided\n        this.getAuthHeader = config.getAuthHeader;\n        // Create basic axios config\n        const axiosConfig = {\n            baseURL: config.baseURL,\n            timeout: config.timeout || 15000,\n        };\n        // Add headers safely\n        const headersConfig = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        };\n        if (config.apiKey) {\n            headersConfig['X-API-Key'] = config.apiKey;\n        }\n        // Add custom headers\n        if (config.headers) {\n            Object.assign(headersConfig, config.headers);\n        }\n        // Create instance with proper types\n        this.client = axios.create(Object.assign(Object.assign({}, axiosConfig), { headers: headersConfig }));\n        // Add request interceptor for logging\n        this.client.interceptors.request.use((config) => {\n            // Remove API key from logs for security\n            const logConfig = Object.assign({}, config);\n            if (logConfig.headers && 'X-API-Key' in logConfig.headers) {\n                // First cast to unknown, then to AxiosRequestHeaders to ensure type safety\n                logConfig.headers = Object.assign(Object.assign({}, logConfig.headers), { 'X-API-Key': '[REDACTED]' });\n            }\n            // Always log requests in development mode\n            console.debug('API Request:', logConfig);\n            return config;\n        }, (error) => {\n            // Always log errors in development mode\n            console.error('API Request Error:', error);\n            return Promise.reject(error);\n        });\n        // Add response interceptor for logging\n        this.client.interceptors.response.use((response) => {\n            // Always log in development mode\n            console.debug('API Response:', {\n                status: response.status,\n                statusText: response.statusText,\n                data: response.data,\n            });\n            return response;\n        }, (error) => {\n            // Always log errors\n            console.error('API Response Error:', {\n                message: error.message,\n                response: error.response ? {\n                    status: error.response.status,\n                    statusText: error.response.statusText,\n                    data: error.response.data,\n                } : null,\n            });\n            return Promise.reject(error);\n        });\n    }\n    get(url, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestWithRetry('get', url, undefined, config);\n        });\n    }\n    post(url, data, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestWithRetry('post', url, data, config);\n        });\n    }\n    put(url, data, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestWithRetry('put', url, data, config);\n        });\n    }\n    delete(url, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestWithRetry('delete', url, undefined, config);\n        });\n    }\n    requestWithRetry(method, url, data, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let retries = 0;\n            let lastError = null;\n            // Add authentication headers if available\n            let requestConfig = Object.assign({}, config);\n            if (this.getAuthHeader) {\n                requestConfig.headers = Object.assign(Object.assign({}, requestConfig.headers), this.getAuthHeader());\n            }\n            while (retries <= this.maxRetries) {\n                try {\n                    let response;\n                    switch (method) {\n                        case 'get':\n                            response = yield this.client.get(url, requestConfig);\n                            break;\n                        case 'post':\n                            response = yield this.client.post(url, data, requestConfig);\n                            break;\n                        case 'put':\n                            response = yield this.client.put(url, data, requestConfig);\n                            break;\n                        case 'delete':\n                            response = yield this.client.delete(url, requestConfig);\n                            break;\n                    }\n                    return response.data;\n                }\n                catch (err) {\n                    lastError = err;\n                    // Check if error is retryable\n                    if (this.isRetryableError(err) && retries < this.maxRetries) {\n                        retries++;\n                        // Wait with exponential backoff\n                        const delay = Math.pow(2, retries) * 1000;\n                        // Always log retry attempts\n                        console.log(`Retrying request (${retries}/${this.maxRetries}) after ${delay}ms`);\n                        yield new Promise(resolve => setTimeout(resolve, delay));\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            // Handle specific error cases\n            this.handleError(lastError);\n            // This should never be reached due to error handling, but required for TypeScript\n            throw lastError;\n        });\n    }\n    isRetryableError(error) {\n        // Network errors or 5xx errors are retryable\n        return !error.response || (error.response && error.response.status >= 500);\n    }\n    handleError(error) {\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // outside of the range of 2xx\n            const status = error.response.status;\n            if (status === 401) {\n                throw new Error('Unauthorized: Please check your API key or log in again');\n            }\n            else if (status === 403) {\n                throw new Error('Forbidden: You do not have permission to access this resource');\n            }\n            else if (status === 404) {\n                throw new Error('Resource not found');\n            }\n            else if (status >= 500) {\n                throw new Error('Server error, please try again later');\n            }\n            else {\n                const responseData = error.response.data || {};\n                throw new Error(`API Error: ${responseData.message || error.message}`);\n            }\n        }\n        else if (error.request) {\n            // The request was made but no response was received\n            throw new Error('No response received from server. Please check your connection');\n        }\n        else {\n            // Something happened in setting up the request that triggered an Error\n            throw new Error(`Request setup error: ${error.message}`);\n        }\n    }\n}\n// Create and export a function to create an API client with default configuration\nexport const createApiClient = (config) => {\n    return new ApiClient(config);\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\n// The Stylist Widget main component\nimport React, { useEffect, useRef, useState } from 'react';\nimport SyncStatusIndicator from '@/components/common/SyncStatusIndicator';\nimport OfflineIndicator from '@/components/common/OfflineIndicator';\nimport DemoGuide from '@/components/DemoGuide';\nimport MockDataToggle from '@/components/common/MockDataToggle';\nimport { useChatStore } from '@/store/index';\nimport { SyncProvider } from '@/services/SyncProvider';\nimport { feedbackSyncService } from '@/services/feedbackSyncService';\nimport { offlineService } from '@/services/offlineService';\nimport DebugModeToggle from '@/components/common/DebugModeToggle';\nimport { USE_LAZY_LOADING, USE_PARALLEL_INIT } from './index';\nimport './styles/global.scss';\n// Import diagnostics tools\nimport { logComponentRender, logGlobalFlag } from './diagnostics';\nimport { useDiagnosticLifecycle, useDiagnosticEffect, monitoredLazy, DiagnosticErrorBoundary } from './diagnosticHooks';\n// Import the circular symbol component\nimport CircularSymbol from '@/components/CircularSymbol';\n// Initialize widget lifecycle log\nconsole.log('[LIFECYCLE:StylistWidget] Module load started');\nlogComponentRender('StylistWidget', 'render', 'Module load started');\n// Conditionally import based on USE_LAZY_LOADING flag\n// Import directly for development\nimport ChatWidgetRegular from '@/components/ChatWidget';\n// Global initialization tracker to prevent double initialization\n// This works across component instances and rehydration\nif (typeof window !== 'undefined') {\n    window.__STYLIST_WIDGET_INITIALIZED = window.__STYLIST_WIDGET_INITIALIZED || false;\n    window.__STYLIST_STORES_AVAILABLE = window.__STYLIST_STORES_AVAILABLE || false;\n}\n// Create lazy-loaded versions with better error handling\nconst ChatWidgetLazy = monitoredLazy(() => {\n    console.log('[LIFECYCLE:StylistWidget] ChatWidgetLazy import starting');\n    return import(/* webpackChunkName: \"chat-widget\" */ '@/components/ChatWidget')\n        .then(module => {\n        console.log('[LIFECYCLE:StylistWidget] ChatWidgetLazy successfully loaded');\n        return module;\n    })\n        .catch(error => {\n        console.error('[LIFECYCLE:StylistWidget] Failed to load ChatWidget component:', error);\n        // Return a module-like object with a default export to prevent crashes\n        return { default: ChatWidgetRegular };\n    });\n}, 'ChatWidget');\n// Create lazy-loaded versions of large feature components\nconst VirtualTryOnLazy = monitoredLazy(() => import(/* webpackChunkName: \"virtual-try-on\" */ '@/components/VirtualTryOn'), 'VirtualTryOn');\nconst StyleQuizLazy = monitoredLazy(() => import(/* webpackChunkName: \"style-quiz\" */ '@/components/StyleQuiz'), 'StyleQuiz');\nconst SocialProofLazy = monitoredLazy(() => import(/* webpackChunkName: \"social-proof\" */ '@/components/SocialProof'), 'SocialProof');\nconst LookbookLazy = monitoredLazy(() => import(/* webpackChunkName: \"lookbook\" */ '@/components/Lookbook'), 'Lookbook');\nconst StylistWidget = (props) => {\n    var _a, _b;\n    // Log component lifecycle\n    useDiagnosticLifecycle('StylistWidget');\n    // Create a store initialization state to prevent rendering before stores are ready\n    const [storesReady, setStoresReady] = useState(false);\n    const [initAttempted, setInitAttempted] = useState(false);\n    const chatStore = useChatStore();\n    // Log render with store status\n    logComponentRender('StylistWidget', 'render', `StylistWidget rendering with store status: ${chatStore ? 'available' : 'unavailable'}`, { storesReady, initAttempted });\n    // Safe store access with default values\n    const isOpen = (_a = chatStore === null || chatStore === void 0 ? void 0 : chatStore.isOpen) !== null && _a !== void 0 ? _a : false;\n    const toggleOpen = (_b = chatStore === null || chatStore === void 0 ? void 0 : chatStore.toggleOpen) !== null && _b !== void 0 ? _b : (() => console.warn('Chat store not initialized'));\n    // Create a component instance initialization ref\n    const componentInitializedRef = useRef(false);\n    // Handle button click with store safety check\n    const handleOpenWidget = () => {\n        if (chatStore && typeof chatStore.toggleOpen === 'function') {\n            toggleOpen();\n        }\n        else {\n            console.warn('Cannot toggle widget - chat store not initialized');\n        }\n    };\n    // Initialize offline service\n    useEffect(() => {\n        if (props.enableOfflineMode) {\n            offlineService.initOfflineService();\n            // Clean up on unmount\n            return () => {\n                offlineService.cleanupOfflineService();\n            };\n        }\n    }, [props.enableOfflineMode]);\n    // Initialize stores immediately and synchronously\n    useDiagnosticEffect('StylistWidget', 'storeInitialization', [chatStore, initAttempted], () => {\n        console.log('[LIFECYCLE:StylistWidget] Store initialization effect running', {\n            initAttempted,\n            chatStoreExists: !!chatStore\n        });\n        // Mark init as attempted to prevent multiple attempts\n        if (!initAttempted) {\n            setInitAttempted(true);\n            console.log('[LIFECYCLE:StylistWidget] First initialization attempt marked');\n            logGlobalFlag('STYLIST_INIT_ATTEMPTED', true, 'First initialization attempt marked');\n            // Always mark stores as ready immediately to prevent mounting issues\n            console.log('[LIFECYCLE:StylistWidget] Stores marked as ready immediately');\n            logGlobalFlag('STYLIST_STORES_READY', true, 'Stores marked as ready immediately');\n            setStoresReady(true);\n            // Additional log if the store is actually available\n            if (chatStore) {\n                console.log('[LIFECYCLE:StylistWidget] Store is actually available');\n                logGlobalFlag('STYLIST_STORES_AVAILABLE', true, 'Store is actually available');\n            }\n            else {\n                console.log('[LIFECYCLE:StylistWidget] Store will be available soon');\n                logGlobalFlag('STYLIST_STORES_AVAILABLE', false, 'Store will be available soon');\n            }\n        }\n    });\n    // Simplified secondary check only logs store availability\n    useDiagnosticEffect('StylistWidget', 'secondaryStoreCheck', [chatStore, storesReady], () => {\n        console.log('[LIFECYCLE:StylistWidget] Secondary store check effect running', {\n            storesReady,\n            chatStoreExists: !!chatStore\n        });\n        // Only log store availability without changing state\n        if (chatStore && !window.__STYLIST_STORES_AVAILABLE) {\n            console.log('[LIFECYCLE:StylistWidget] Store became available');\n            logGlobalFlag('STYLIST_STORES_AVAILABLE', true, 'Store became available');\n            window.__STYLIST_STORES_AVAILABLE = true;\n        }\n    });\n    // Prevent double initialization with global flag\n    useDiagnosticEffect('StylistWidget', 'mainInitialization', [], () => {\n        console.log('[LIFECYCLE:StylistWidget] Main initialization effect running', {\n            alreadyInitialized: window.__STYLIST_WIDGET_INITIALIZED,\n            locallyInitialized: componentInitializedRef.current,\n            parallelInit: USE_PARALLEL_INIT\n        });\n        // Skip if already initialized\n        if (window.__STYLIST_WIDGET_INITIALIZED) {\n            console.log('[LIFECYCLE:StylistWidget] Already mounted, skipping initialization');\n            logGlobalFlag('__STYLIST_WIDGET_INITIALIZED', true, 'Widget already initialized, skipping');\n            return;\n        }\n        // Mark as initialized both locally and globally\n        componentInitializedRef.current = true;\n        window.__STYLIST_WIDGET_INITIALIZED = true;\n        logGlobalFlag('__STYLIST_WIDGET_INITIALIZED', true, 'Widget marked as initialized');\n        console.log('[LIFECYCLE:StylistWidget] Initializing widget instance');\n        // Initialize critical paths immediately, defer non-critical operations\n        if (USE_PARALLEL_INIT) {\n            console.log('[LIFECYCLE:StylistWidget] Using parallel initialization strategy');\n            logGlobalFlag('USE_PARALLEL_INIT', true, 'Using parallel initialization strategy');\n            // Original parallel initialization behavior\n            console.log('[LIFECYCLE:StylistWidget] Initializing feedbackSyncService immediately');\n            feedbackSyncService.initialize({\n                apiKey: props.apiKey,\n                retailerId: props.retailerId,\n                apiUrl: props.apiUrl\n            });\n        }\n        else {\n            // Only register the feedback service for later background initialization\n            // The actual initialization will be triggered by the ChatWidget's onFirstPaint callback\n            console.log('[LIFECYCLE:StylistWidget] Deferring feedback sync service initialization until first paint');\n            logGlobalFlag('USE_PARALLEL_INIT', false, 'Using optimized initialization with delayed services');\n            // Make TypeScript happy by using type assertion\n            window.__STYLIST_PENDING_INITIALIZATIONS = Object.assign(Object.assign({}, (window.__STYLIST_PENDING_INITIALIZATIONS || {})), { feedbackSync: {\n                    apiKey: props.apiKey,\n                    retailerId: props.retailerId,\n                    apiUrl: props.apiUrl\n                } });\n            logGlobalFlag('__STYLIST_PENDING_INITIALIZATIONS', true, 'Pending initializations registered', {\n                services: ['feedbackSync']\n            });\n        }\n        // Clean up on unmount, but don't reset initialization flag\n        // This prevents re-initialization if we're transitioning views\n        return () => {\n            console.log('[LIFECYCLE:StylistWidget] Cleaning up feedbackSyncService');\n            feedbackSyncService.cleanup();\n        };\n    });\n    // Inject CSS variables for theme colors\n    useDiagnosticEffect('StylistWidget', 'themeColors', [props.primaryColor], () => {\n        console.log('[LIFECYCLE:StylistWidget] Theme color effect running', {\n            primaryColor: props.primaryColor\n        });\n        if (props.primaryColor) {\n            console.log('[LIFECYCLE:StylistWidget] Setting theme CSS variables');\n            document.documentElement.style.setProperty('--stylist-primary-color', props.primaryColor);\n            // Generate lighter and darker variants\n            document.documentElement.style.setProperty('--stylist-primary-color-light', lightenColor(props.primaryColor, 0.2));\n            document.documentElement.style.setProperty('--stylist-primary-color-dark', darkenColor(props.primaryColor, 0.2));\n        }\n    });\n    // Helper function to lighten a color\n    const lightenColor = (color, amount) => {\n        try {\n            // Remove the # if present\n            color = color.replace('#', '');\n            // Parse the color\n            const r = parseInt(color.substring(0, 2), 16);\n            const g = parseInt(color.substring(2, 4), 16);\n            const b = parseInt(color.substring(4, 6), 16);\n            // Lighten each component\n            const newR = Math.min(255, Math.floor(r + (255 - r) * amount));\n            const newG = Math.min(255, Math.floor(g + (255 - g) * amount));\n            const newB = Math.min(255, Math.floor(b + (255 - b) * amount));\n            // Convert back to hex\n            return `#${newR.toString(16).padStart(2, '0')}${newG.toString(16).padStart(2, '0')}${newB.toString(16).padStart(2, '0')}`;\n        }\n        catch (_a) {\n            return color;\n        }\n    };\n    // Helper function to darken a color\n    const darkenColor = (color, amount) => {\n        try {\n            // Remove the # if present\n            color = color.replace('#', '');\n            // Parse the color\n            const r = parseInt(color.substring(0, 2), 16);\n            const g = parseInt(color.substring(2, 4), 16);\n            const b = parseInt(color.substring(4, 6), 16);\n            // Darken each component\n            const newR = Math.max(0, Math.floor(r * (1 - amount)));\n            const newG = Math.max(0, Math.floor(g * (1 - amount)));\n            const newB = Math.max(0, Math.floor(b * (1 - amount)));\n            // Convert back to hex\n            return `#${newR.toString(16).padStart(2, '0')}${newG.toString(16).padStart(2, '0')}${newB.toString(16).padStart(2, '0')}`;\n        }\n        catch (_a) {\n            return color;\n        }\n    };\n    // Choose between lazy-loaded and direct import based on feature flag\n    const ChatWidgetComponent = USE_LAZY_LOADING ? ChatWidgetLazy : ChatWidgetRegular;\n    // Create a handler for first paint/mount callback from ChatWidget\n    const handleFirstPaint = () => {\n        var _a;\n        console.log('[LIFECYCLE:StylistWidget] First paint callback triggered from ChatWidget');\n        if (!USE_PARALLEL_INIT && window.__STYLIST_PENDING_INITIALIZATIONS) {\n            console.log('[LIFECYCLE:StylistWidget] Initializing background tasks immediately');\n            // Initialize feedback sync service immediately without delay\n            if ((_a = window.__STYLIST_PENDING_INITIALIZATIONS) === null || _a === void 0 ? void 0 : _a.feedbackSync) {\n                console.log('[LIFECYCLE:StylistWidget] Initializing feedback sync service in background');\n                try {\n                    feedbackSyncService.initialize(window.__STYLIST_PENDING_INITIALIZATIONS.feedbackSync);\n                    console.log('[LIFECYCLE:StylistWidget] Feedback sync service initialized successfully');\n                }\n                catch (error) {\n                    console.error('[LIFECYCLE:StylistWidget] Error initializing feedback sync service:', error);\n                }\n            }\n            // Mark background initialization as complete\n            // Use type assertion to avoid TypeScript errors\n            window.__STYLIST_BACKGROUND_INIT_COMPLETE = true;\n            console.log('[LIFECYCLE:StylistWidget] Background initialization marked as complete');\n        }\n    };\n    // Improved widget content with better error boundaries and no AsyncComponentLoader\n    const widgetContent = (_jsx(DiagnosticErrorBoundary, Object.assign({ componentName: \"StylistWidget\", fallback: _jsxs(\"div\", Object.assign({ className: \"stylist-error-container\", style: {\n                padding: '1rem',\n                textAlign: 'center',\n                color: '#721c24',\n                backgroundColor: '#f8d7da',\n                borderRadius: '4px',\n                margin: '1rem'\n            } }, { children: [_jsx(\"h3\", { children: \"Widget Error\" }), _jsx(\"p\", { children: \"The widget encountered an error during loading.\" }), _jsx(\"button\", Object.assign({ onClick: () => window.location.reload(), style: {\n                        marginTop: '1rem',\n                        padding: '0.5rem 1rem',\n                        backgroundColor: 'var(--stylist-primary-color, #4361ee)',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                    } }, { children: \"Reload\" }))] })) }, { children: _jsxs(_Fragment, { children: [_jsx(React.Suspense, Object.assign({ fallback: _jsxs(\"div\", Object.assign({ className: \"stylist-loading-container\", style: {\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            padding: '2rem',\n                            height: '100%'\n                        } }, { children: [_jsx(\"div\", { className: \"stylist-loading-spinner\" }), _jsx(\"p\", Object.assign({ style: { marginTop: '1rem' } }, { children: \"Loading Stylist Widget...\" }))] })) }, { children: _createElement(ChatWidgetComponent, Object.assign({}, props, { key: \"stylist-chat-widget-singleton\", onFirstPaint: handleFirstPaint, showDemoToggle: props.showDemoToggle })) })), storesReady && (_jsx(CircularSymbol, { onClick: handleOpenWidget, primaryColor: props.primaryColor, isOpen: isOpen, logoUrl: props.apiKey ? `/logos/${props.retailerId}-logo.png` : undefined })), _jsx(SyncStatusIndicator, {}), props.showDebugToggle && _jsx(DebugModeToggle, {}), props.showMockDataToggle && _jsx(MockDataToggle, {}), props.showOfflineIndicator && props.enableOfflineMode &&\n                    _jsx(OfflineIndicator, { position: \"top\", showControls: true, hasOfflineData: true }), props.demoMode &&\n                    _jsx(DemoGuide, { flowId: props.demoFlow, position: \"right\", showControls: true })] }) })));\n    // With parallel init, wrap in SyncProvider normally\n    // With optimized init, only use SyncProvider if needed immediately\n    return USE_PARALLEL_INIT ? (_jsx(SyncProvider, { children: widgetContent })) : (\n    // In optimized mode, we'll handle SyncProvider init later\n    widgetContent);\n};\n// Set default props\nStylistWidget.defaultProps = {\n    showDebugToggle: false,\n    showMockDataToggle: true,\n    showDemoToggle: false,\n    showOfflineIndicator: false,\n    enableOfflineMode: false,\n    demoMode: false\n};\nexport default StylistWidget;\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","FeedbackApi","constructor","apiClient","this","syncFeedback","request","post","userId","feedbackItems","error","syncedItemIds","success","message","Error","DEFAULT_API_URL","DEFAULT_TIMEOUT","createStylistApi","config","baseURL","apiUrl","apiKey","timeout","headers","retailerId","user","recommendation","feedback","defaultApiClient","ApiClient","maxRetries","getAuthHeader","axiosConfig","headersConfig","Object","assign","client","interceptors","use","logConfig","response","get","url","requestWithRetry","undefined","data","put","method","retries","lastError","requestConfig","delete","err","isRetryableError","delay","Math","pow","setTimeout","handleError","status","responseData","createApiClient","window","__STYLIST_WIDGET_INITIALIZED","__STYLIST_STORES_AVAILABLE","ChatWidgetLazy","module","catch","default","StylistWidget","props","_a","_b","storesReady","setStoresReady","useState","initAttempted","setInitAttempted","chatStore","isOpen","toggleOpen","componentInitializedRef","useRef","useEffect","enableOfflineMode","initOfflineService","cleanupOfflineService","current","USE_PARALLEL_INIT","initialize","__STYLIST_PENDING_INITIALIZATIONS","feedbackSync","services","cleanup","primaryColor","document","documentElement","style","setProperty","lightenColor","darkenColor","color","amount","replace","r","parseInt","substring","g","b","newR","min","floor","newG","newB","toString","padStart","max","ChatWidgetComponent","USE_LAZY_LOADING","widgetContent","componentName","fallback","className","padding","textAlign","backgroundColor","borderRadius","margin","children","onClick","location","reload","marginTop","border","cursor","display","flexDirection","alignItems","justifyContent","height","key","onFirstPaint","__STYLIST_BACKGROUND_INIT_COMPLETE","showDemoToggle","logoUrl","showDebugToggle","showMockDataToggle","showOfflineIndicator","position","showControls","hasOfflineData","demoMode","flowId","demoFlow","SyncProvider","defaultProps"],"sourceRoot":""}