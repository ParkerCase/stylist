"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[7603],{1523:function(e,t,r){r.d(t,{j:function(){return i}});var s=r(9495),n=r(26105),a=r(4282),o=r(6439);const i=async(e,t,r)=>{switch(e.op){case"If":case"StatelessIf":{const s=(0,o.Zg)("thenBranch",e,t,r),n=(0,o.Zg)("elseBranch",e,t,r),a=(0,o.Zg)("cond",e,t,r),i=(0,o.Zg)("args",e,t,r);return(await a.data())[0]?r.functionMap[s].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap):r.functionMap[n].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{const s=(0,o.Zg)("body",e,t,r),n=(0,o.Zg)("cond",e,t,r),a=(0,o.Zg)("args",e,t,r),i=await r.functionMap[n].executeFunctionAsync(a,r.tensorArrayMap,r.tensorListMap),c=a.map((e=>e.id));let g=await i[0].data();i.forEach((e=>{e.kept||-1!==c.indexOf(e.id)||e.dispose()}));let d=a;for(;g[0];){const e=d;d=await r.functionMap[s].executeFunctionAsync(d,r.tensorArrayMap,r.tensorListMap);const t=d.map((e=>e.id));e.forEach((e=>{e.kept||-1!==c.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await r.functionMap[n].executeFunctionAsync(d,r.tensorArrayMap,r.tensorListMap);g=await a[0].data(),a.forEach((e=>{e.kept||-1!==c.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return d}case"LoopCond":{const s=(0,o.Zg)("pred",e,t,r);return[(0,o.hV)(s)]}case"Switch":{const s=(0,o.Zg)("pred",e,t,r);let n=(0,o.Zg)("data",e,t,r);return n.kept||(n=(0,o.hV)(n)),(await s.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==(0,o.cS)(e,t,r)));if(s){const e=(0,o.cS)(s,t,r);return[(0,o.hV)(e)]}return}case"Enter":{const s=(0,o.Zg)("frameName",e,t,r),n=(0,o.Zg)("tensor",e,t,r);return r.enterFrame(s),[(0,o.hV)(n)]}case"Exit":{const s=(0,o.Zg)("tensor",e,t,r);return r.exitFrame(),[(0,o.hV)(s)]}case"NextIteration":{const s=(0,o.Zg)("tensor",e,t,r);return r.nextIteration(),[(0,o.hV)(s)]}case"TensorArrayV3":{const a=(0,o.Zg)("size",e,t,r),i=(0,o.Zg)("dtype",e,t,r),c=(0,o.Zg)("elementShape",e,t,r),g=(0,o.Zg)("dynamicSize",e,t,r),d=(0,o.Zg)("clearAfterRead",e,t,r),u=(0,o.Zg)("identicalElementShapes",e,t,r),Z=(0,o.Zg)("name",e,t,r),l=new n.n(Z,i,a,c,u,g,d);return r.addTensorArray(l),[l.idTensor,(0,s.scalar)(1)]}case"TensorArrayWriteV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=(0,o.Zg)("index",e,t,r),a=(0,o.Zg)("tensor",e,t,r),i=r.getTensorArray(s.id);return i.write(n,a),[i.idTensor]}case"TensorArrayReadV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=(0,o.Zg)("index",e,t,r);return[r.getTensorArray(s.id).read(n)]}case"TensorArrayGatherV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=(0,o.Zg)("indices",e,t,r),a=(0,o.Zg)("dtype",e,t,r);return[r.getTensorArray(s.id).gather(n,a)]}case"TensorArrayScatterV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=(0,o.Zg)("indices",e,t,r),a=(0,o.Zg)("tensor",e,t,r),i=r.getTensorArray(s.id);return i.scatter(n,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=r.getTensorArray(s.id),a=(0,o.Zg)("dtype",e,t,r);return[n.concat(a)]}case"TensorArraySplitV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=(0,o.Zg)("tensor",e,t,r),a=(0,o.Zg)("lengths",e,t,r),i=r.getTensorArray(s.id);return i.split(a,n),[i.idTensor]}case"TensorArraySizeV3":{const n=(0,o.Zg)("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return[(0,s.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=(0,o.Zg)("tensorArrayId",e,t,r),n=r.getTensorArray(s.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("index",e,t,r),a=(0,o.Zg)("tensor",e,t,r),i=r.getTensorList(s.id);return i.setItem(n,a),[i.idTensor]}case"TensorListGetItem":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("index",e,t,r),a=(0,o.Zg)("elementShape",e,t,r),i=(0,o.Zg)("elementDType",e,t,r);return[r.getTensorList(s.id).getItem(n,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=(0,o.Zg)("indices",e,t,r),n=(0,o.Zg)("tensor",e,t,r),i=(0,o.Zg)("elementShape",e,t,r),c=(0,o.Zg)("numElements",e,t,r),g=(0,a.Tb)(n,s,i,c);return r.addTensorList(g),[g.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=(0,o.Zg)("elementShape",e,t,r),n=(0,o.Zg)("elementDType",e,t,r);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const c=(0,o.Zg)(i,e,t,r),g="TensorListReserve"===e.op?-1:c,d=(0,a.vY)(s,n,c,g);return r.addTensorList(d),[d.idTensor]}case"TensorListGather":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("indices",e,t,r),a=(0,o.Zg)("elementShape",e,t,r),i=(0,o.Zg)("elementDType",e,t,r);return[r.getTensorList(s.id).gather(n,i,a)]}case"TensorListStack":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("elementShape",e,t,r),a=(0,o.Zg)("elementDType",e,t,r),i=(0,o.Zg)("numElements",e,t,r);return[r.getTensorList(s.id).stack(n,a,i)]}case"TensorListFromTensor":{const s=(0,o.Zg)("tensor",e,t,r),n=(0,o.Zg)("elementShape",e,t,r),i=(0,o.Zg)("elementDType",e,t,r),c=(0,a.uK)(s,n,i);return r.addTensorList(c),[c.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=(0,o.Zg)("tensorListId",e,t,r),n=r.getTensorList(s.id),a=(0,o.Zg)("dtype",e,t,r),i=(0,o.Zg)("elementShape",e,t,r);return[n.concat(a,i)]}case"TensorListPushBack":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("tensor",e,t,r),a=r.getTensorList(s.id);return a.pushBack(n),[a.idTensor]}case"TensorListPopBack":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("elementShape",e,t,r),a=(0,o.Zg)("elementDType",e,t,r);return[r.getTensorList(s.id).popBack(n,a)]}case"TensorListSplit":{const s=(0,o.Zg)("tensor",e,t,r),n=(0,o.Zg)("elementShape",e,t,r),i=(0,o.Zg)("lengths",e,t,r),c=(0,a.lD)(s,i,n);return r.addTensorList(c),[c.idTensor]}case"TensorListLength":{const n=(0,o.Zg)("tensorListId",e,t,r),a=r.getTensorList(n.id);return[(0,s.scalar)(a.size(),"int32")]}case"TensorListResize":{const s=(0,o.Zg)("tensorListId",e,t,r),n=(0,o.Zg)("size",e,t,r),a=r.getTensorList(s.id).resize(n);return r.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}},4967:function(e,t,r){r.d(t,{j:function(){return a}});var s=r(24853),n=r(6439);const a=async(e,t,r,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const o=a.getHashTableHandleByName(e.name);if(null!=o)return[o];{const o=(0,n.Zg)("keyDType",e,t,r),i=(0,n.Zg)("valueDType",e,t,r),c=new s.J(o,i);return a.addHashTable(e.name,c),[c.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=(0,n.Zg)("tableHandle",e,t,r,a),o=(0,n.Zg)("keys",e,t,r),i=(0,n.Zg)("values",e,t,r),c=a.getHashTableById(s.id);return[await c.import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=(0,n.Zg)("tableHandle",e,t,r,a),o=(0,n.Zg)("keys",e,t,r),i=(0,n.Zg)("defaultValue",e,t,r),c=a.getHashTableById(s.id);return[await c.find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=(0,n.Zg)("tableHandle",e,t,r,a);return[a.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}},16343:function(e,t,r){r.d(t,{j:function(){return o}});var s=r(9951),n=r(6439);function a(e,t,r){return{boxes:(0,n.Zg)("boxes",e,t,r),scores:(0,n.Zg)("scores",e,t,r),maxOutputSize:(0,n.Zg)("maxOutputSize",e,t,r),iouThreshold:(0,n.Zg)("iouThreshold",e,t,r),scoreThreshold:(0,n.Zg)("scoreThreshold",e,t,r),softNmsSigma:(0,n.Zg)("softNmsSigma",e,t,r)}}const o=async(e,t,r,o,i=s)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:n,maxOutputSize:o,iouThreshold:c,scoreThreshold:g,softNmsSigma:d}=a(e,t,r),u=await i.image.nonMaxSuppressionWithScoreAsync(s,n,o,c,g,d);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:o,maxOutputSize:c,iouThreshold:g,scoreThreshold:d}=a(e,t,r),u=(0,n.Zg)("padToMaxOutputSize",e,t,r),Z=await i.image.nonMaxSuppressionPaddedAsync(s,o,c,g,d,u);return[Z.selectedIndices,Z.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:n,maxOutputSize:o,iouThreshold:c,scoreThreshold:g}=a(e,t,r);return[await i.image.nonMaxSuppressionAsync(s,n,o,c,g)]}case"Where":{const s=i.cast((0,n.Zg)("condition",e,t,r),"bool"),a=[await i.whereAsync(s)];return s.dispose(),a}case"ListDiff":return i.setdiff1dAsync((0,n.Zg)("x",e,t,r),(0,n.Zg)("y",e,t,r));default:throw TypeError(`Node type ${e.op} is not implemented`)}}},18828:function(e,t,r){r.d(t,{j:function(){return a}});var s=r(9951),n=r(6439);const a=(e,t,r,a=s)=>{switch(e.op){case"LowerBound":{const s=(0,n.Zg)("sortedSequence",e,t,r),o=(0,n.Zg)("values",e,t,r);return[a.lowerBound(s,o)]}case"TopKV2":{const s=(0,n.Zg)("x",e,t,r),o=(0,n.Zg)("k",e,t,r),i=(0,n.Zg)("sorted",e,t,r),c=a.topk(s,o,i);return[c.values,c.indices]}case"UpperBound":{const s=(0,n.Zg)("sortedSequence",e,t,r),o=(0,n.Zg)("values",e,t,r);return[a.upperBound(s,o)]}case"Unique":{const s=(0,n.Zg)("x",e,t,r),o=a.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=(0,n.Zg)("x",e,t,r),o=(0,n.Zg)("axis",e,t,r),i=a.unique(s,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}},36065:function(e,t,r){r.d(t,{j:function(){return a}});var s=r(9951),n=r(6439);const a=(e,t,r,a=s)=>{switch(e.op){case"Fill":{const s=(0,n.Zg)("shape",e,t,r),o=(0,n.Zg)("dtype",e,t,r),i=(0,n.Zg)("value",e,t,r);return[a.fill(s,i,o)]}case"LinSpace":{const s=(0,n.Zg)("start",e,t,r),o=(0,n.Zg)("stop",e,t,r),i=(0,n.Zg)("num",e,t,r);return[a.linspace(s,o,i)]}case"Multinomial":{const s=(0,n.Zg)("logits",e,t,r),o=(0,n.Zg)("numSamples",e,t,r),i=(0,n.Zg)("seed",e,t,r);return[a.multinomial(s,o,i)]}case"OneHot":{const s=(0,n.Zg)("indices",e,t,r),o=(0,n.Zg)("depth",e,t,r),i=(0,n.Zg)("onValue",e,t,r),c=(0,n.Zg)("offValue",e,t,r),g=(0,n.Zg)("dtype",e,t,r);return[a.oneHot(s,o,i,c,g)]}case"Ones":return[a.ones((0,n.Zg)("shape",e,t,r),(0,n.Zg)("dtype",e,t,r))];case"OnesLike":return[a.onesLike((0,n.Zg)("x",e,t,r))];case"RandomStandardNormal":return[a.randomStandardNormal((0,n.Zg)("shape",e,t,r),(0,n.Zg)("dtype",e,t,r),(0,n.Zg)("seed",e,t,r))];case"RandomUniform":return[a.randomUniform((0,n.Zg)("shape",e,t,r),(0,n.Zg)("minval",e,t,r),(0,n.Zg)("maxval",e,t,r),(0,n.Zg)("dtype",e,t,r))];case"RandomUniformInt":return[a.randomUniformInt((0,n.Zg)("shape",e,t,r),(0,n.Zg)("minval",e,t,r),(0,n.Zg)("maxval",e,t,r),(0,n.Zg)("seed",e,t,r))];case"Range":{const s=(0,n.Zg)("start",e,t,r),o=(0,n.Zg)("stop",e,t,r),i=(0,n.Zg)("step",e,t,r);return[a.range(s,o,i,(0,n.Zg)("dtype",e,t,r))]}case"TruncatedNormal":{const s=(0,n.Zg)("shape",e,t,r),o=(0,n.Zg)("mean",e,t,r),i=(0,n.Zg)("stdDev",e,t,r),c=(0,n.Zg)("seed",e,t,r);return[a.truncatedNormal(s,o,i,(0,n.Zg)("dtype",e,t,r),c)]}case"Zeros":return[a.zeros((0,n.Zg)("shape",e,t,r),(0,n.Zg)("dtype",e,t,r))];case"ZerosLike":return[a.zerosLike((0,n.Zg)("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}},40833:function(e,t,r){r.d(t,{j:function(){return a}});var s=r(9951),n=r(6439);const a=(e,t,r,a=s)=>{switch(e.op){case"Abs":case"ComplexAbs":return[a.abs((0,n.Zg)("x",e,t,r))];case"Acos":return[a.acos((0,n.Zg)("x",e,t,r))];case"Acosh":return[a.acosh((0,n.Zg)("x",e,t,r))];case"Asin":return[a.asin((0,n.Zg)("x",e,t,r))];case"Asinh":return[a.asinh((0,n.Zg)("x",e,t,r))];case"Atan":return[a.atan((0,n.Zg)("x",e,t,r))];case"Atan2":return[a.atan2((0,n.Zg)("x",e,t,r),(0,n.Zg)("y",e,t,r))];case"Atanh":return[a.atanh((0,n.Zg)("x",e,t,r))];case"Ceil":return[a.ceil((0,n.Zg)("x",e,t,r))];case"Complex":return[a.complex((0,n.Zg)("real",e,t,r),(0,n.Zg)("imag",e,t,r))];case"Cos":return[a.cos((0,n.Zg)("x",e,t,r))];case"Cosh":return[a.cosh((0,n.Zg)("x",e,t,r))];case"Elu":return[a.elu((0,n.Zg)("x",e,t,r))];case"Erf":return[a.erf((0,n.Zg)("x",e,t,r))];case"Exp":return[a.exp((0,n.Zg)("x",e,t,r))];case"Expm1":return[a.expm1((0,n.Zg)("x",e,t,r))];case"Floor":return[a.floor((0,n.Zg)("x",e,t,r))];case"Log":return[a.log((0,n.Zg)("x",e,t,r))];case"Log1p":return[a.log1p((0,n.Zg)("x",e,t,r))];case"Imag":return[a.imag((0,n.Zg)("x",e,t,r))];case"Neg":return[a.neg((0,n.Zg)("x",e,t,r))];case"Reciprocal":return[a.reciprocal((0,n.Zg)("x",e,t,r))];case"Real":return[a.real((0,n.Zg)("x",e,t,r))];case"Relu":return[a.relu((0,n.Zg)("x",e,t,r))];case"Round":return[a.round((0,n.Zg)("x",e,t,r))];case"Selu":return[a.selu((0,n.Zg)("x",e,t,r))];case"Sigmoid":return[a.sigmoid((0,n.Zg)("x",e,t,r))];case"Sin":return[a.sin((0,n.Zg)("x",e,t,r))];case"Sign":return[a.sign((0,n.Zg)("x",e,t,r))];case"Sinh":return[a.sinh((0,n.Zg)("x",e,t,r))];case"Softplus":return[a.softplus((0,n.Zg)("x",e,t,r))];case"Sqrt":return[a.sqrt((0,n.Zg)("x",e,t,r))];case"Square":return[a.square((0,n.Zg)("x",e,t,r))];case"Tanh":return[a.tanh((0,n.Zg)("x",e,t,r))];case"Tan":return[a.tan((0,n.Zg)("x",e,t,r))];case"ClipByValue":return[a.clipByValue((0,n.Zg)("x",e,t,r),(0,n.Zg)("clipValueMin",e,t,r),(0,n.Zg)("clipValueMax",e,t,r))];case"Relu6":return[a.relu6((0,n.Zg)("x",e,t,r))];case"Rsqrt":return[a.rsqrt((0,n.cS)(e.inputNames[0],t,r))];case"LeakyRelu":return[a.leakyRelu((0,n.Zg)("x",e,t,r),(0,n.Zg)("alpha",e,t,r))];case"Prelu":return[a.prelu((0,n.Zg)("x",e,t,r),(0,n.Zg)("alpha",e,t,r))];case"IsNan":return[a.isNaN((0,n.cS)(e.inputNames[0],t,r))];case"IsInf":return[a.isInf((0,n.cS)(e.inputNames[0],t,r))];case"IsFinite":return[a.isFinite((0,n.cS)(e.inputNames[0],t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}},80052:function(e,t,r){r.d(t,{j:function(){return a}});var s=r(9951),n=r(6439);const a=(e,t,r,a=s)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=(0,n.Zg)("default",e,t,r);return[(0,n.cS)(e.name,t,r)||s];case"Placeholder":return[(0,n.cS)(e.name,t,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const s=(0,n.Zg)("x",e,t,r);return[(0,n.hV)(s)]}case"IdentityN":return(0,n.Zg)("x",e,t,r).map((e=>(0,n.hV)(e)));case"Snapshot":const o=(0,n.Zg)("x",e,t,r);return[(0,n.hV)(o)];case"Shape":return[a.tensor1d((0,n.Zg)("x",e,t,r).shape,"int32")];case"ShapeN":return(0,n.Zg)("x",e,t,r).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar((0,n.Zg)("x",e,t,r).size,"int32")];case"Rank":return[a.scalar((0,n.Zg)("x",e,t,r).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const i=(0,n.Zg)("x",e,t,r),c=(0,n.Zg)("data",e,t,r);(0,n.Zg)("message",e,t,r),(0,n.Zg)("summarize",e,t,r);for(let e=0;e<c.length;e++);return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}}},82682:function(e,t,r){r.d(t,{j:function(){return a}});var s=r(9951),n=r(6439);const a=(e,t,r,a=s)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"AddN":return[a.addN((0,n.Zg)("tensors",e,t,r))];case"FloorMod":case"Mod":return[a.mod((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"Mul":return[a.mul((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"RealDiv":case"Div":return[a.div((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"DivNoNan":return[a.divNoNan((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"FloorDiv":return[a.floorDiv((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"Sub":return[a.sub((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"Minimum":return[a.minimum((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"Maximum":return[a.maximum((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"Pow":return[a.pow((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];case"SquaredDifference":return[a.squaredDifference((0,n.Zg)("a",e,t,r),(0,n.Zg)("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}},85438:function(e,t,r){r.d(t,{j:function(){return o}});var s=r(9951),n=r(6439);function a(e,t,r){const[s,a]=(0,n.Zg)("fusedOps",e,t,r),o="biasadd"===s,i=!o,c="prelu"===a,g="fusedbatchnorm"===s,d=(0,n.Zg)("numArgs",e,t,r);if(o){if(c&&2!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&o&&1!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(g)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=(0,n.Zg)("strides",e,t,r),Z=(0,n.Cq)(e,t,r),l=(0,n.Zg)("dataFormat",e,t,r).toUpperCase(),p=(0,n.Zg)("dilations",e,t,r);let[m,h]=(0,n.Zg)("args",e,t,r);i&&(h=m,m=void 0);return{stride:u,pad:Z,dataFormat:l,dilations:p,biasArg:m,preluArg:h,activationFunc:a,leakyreluAlpha:(0,n.Zg)("leakyreluAlpha",e,t,r)}}const o=(e,t,r,o=s)=>{switch(e.op){case"Conv1D":{const s=(0,n.Zg)("stride",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("dataFormat",e,t,r).toUpperCase(),c=(0,n.Zg)("dilation",e,t,r);return[o.conv1d((0,n.Zg)("x",e,t,r),(0,n.Zg)("filter",e,t,r),s,a,i,c)]}case"Conv2D":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Cq)(e,t,r),i=(0,n.Zg)("dataFormat",e,t,r).toUpperCase(),c=(0,n.Zg)("dilations",e,t,r);return[o.conv2d((0,n.Zg)("x",e,t,r),(0,n.Zg)("filter",e,t,r),[s[1],s[2]],a,i,[c[1],c[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:c,dilations:g,biasArg:d,preluArg:u,activationFunc:Z,leakyreluAlpha:l}=a(e,t,r);return[o.fused.conv2d({x:(0,n.Zg)("x",e,t,r),filter:(0,n.Zg)("filter",e,t,r),strides:[s[1],s[2]],pad:i,dataFormat:c,dilations:[g[1],g[2]],bias:d,activation:Z,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:c,dilations:g,biasArg:d,preluArg:u,activationFunc:Z,leakyreluAlpha:l}=a(e,t,r);return[o.fused.depthwiseConv2d({x:(0,n.Zg)("x",e,t,r),filter:(0,n.Zg)("filter",e,t,r),strides:[s[1],s[2]],pad:i,dataFormat:c,dilations:[g[1],g[2]],bias:d,activation:Z,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=(0,n.Zg)("outputShape",e,t,r),a=(0,n.Zg)("strides",e,t,r),i=(0,n.Cq)(e,t,r);return[o.conv2dTranspose((0,n.Zg)("x",e,t,r),(0,n.Zg)("filter",e,t,r),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Cq)(e,t,r),i=(0,n.Zg)("dilations",e,t,r),c=(0,n.Zg)("dataFormat",e,t,r).toUpperCase();return[o.depthwiseConv2d((0,n.Zg)("input",e,t,r),(0,n.Zg)("filter",e,t,r),[s[1],s[2]],a,c,[i[1],i[2]])]}case"Conv3D":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("dataFormat",e,t,r).toUpperCase(),c=(0,n.Zg)("dilations",e,t,r);return[o.conv3d((0,n.Zg)("x",e,t,r),(0,n.Zg)("filter",e,t,r),[s[1],s[2],s[3]],a,i,[c[1],c[2],c[3]])]}case"AvgPool":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("kernelSize",e,t,r);return[o.avgPool((0,n.Zg)("x",e,t,r),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("kernelSize",e,t,r);return[o.maxPool((0,n.Zg)("x",e,t,r),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("kernelSize",e,t,r),c=(0,n.Zg)("includeBatchInIndex",e,t,r),{result:g,indexes:d}=o.maxPoolWithArgmax((0,n.Zg)("x",e,t,r),[i[1],i[2]],[s[1],s[2]],a,c);return[g,d]}case"AvgPool3D":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("kernelSize",e,t,r);return[o.avgPool3d((0,n.Zg)("x",e,t,r),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("kernelSize",e,t,r);return[o.maxPool3d((0,n.Zg)("x",e,t,r),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=(0,n.Zg)("strides",e,t,r),a=(0,n.Zg)("pad",e,t,r),i=(0,n.Zg)("dilations",e,t,r),c=s[1],g=s[2],d=i[1],u=i[2];return[o.dilation2d((0,n.Zg)("x",e,t,r),(0,n.Zg)("filter",e,t,r),[c,g],a,[d,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}}]);
//# sourceMappingURL=stylist-vendors-32f38a1b.1e09b25fd8c8e3fd76d2.js.map