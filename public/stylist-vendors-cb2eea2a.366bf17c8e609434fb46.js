"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[7156],{28098:function(i,t,e){var a=e(9495),s=e(87504),n=e(79730),r=e(15841),l=e(59351),h=e(84379),o=e(44813),m=e(73072),u=e(63057);function g(i,t,e,s,n,l=.001){let h;if(2===i.rank)h=a.batchNorm2d(i,t,e,s,n,l);else if(3===i.rank)h=a.batchNorm3d(i,t,e,s,n,l);else{if(4!==i.rank)throw new r.EH(`batchNormalization is not implemented for array of rank ${i.rank} yet`);h=a.batchNorm4d(i,t,e,s,n,l)}return h}function c(i,t,e,s,n=.001){return a.util.arraysEqual(s.slice().sort(),m.y1(0,i.rank-1))?function(i,t,e,s,n=.001){return(0,a.tidy)((()=>{const r=a.moments(i,s),l=r.mean,h=r.variance;return[g(i,l,h,e,t,n),l,h]}))}(i,t,e,s,n):function(i,t,e,s,n=.001){return(0,a.tidy)((()=>{const r=a.moments(i,s),l=r.mean,h=r.variance,o=[];for(const t of m.y1(0,i.rank))-1!==s.indexOf(t)?o.push(1):o.push(i.shape[t]);const u=(0,a.reshape)(l,o),c=(0,a.reshape)(h,o),z=null==t?null:(0,a.reshape)(t,o),b=null==e?null:(0,a.reshape)(e,o);return[g(i,u,c,b,z,n),l,h]}))}(i,t,e,s,n)}class z extends n.Wd{constructor(i){null==i&&(i={}),super(i),this.supportsMasking=!0,this.axis=null==i.axis?-1:i.axis,this.momentum=null==i.momentum?.99:i.momentum,this.epsilon=null==i.epsilon?.001:i.epsilon,this.center=null==i.center||i.center,this.scale=null==i.scale||i.scale,this.betaInitializer=(0,l.Fe)(i.betaInitializer||"zeros"),this.gammaInitializer=(0,l.Fe)(i.gammaInitializer||"ones"),this.movingMeanInitializer=(0,l.Fe)(i.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,l.Fe)(i.movingVarianceInitializer||"ones"),this.betaConstraint=(0,s.YZ)(i.betaConstraint),this.gammaConstraint=(0,s.YZ)(i.gammaConstraint),this.betaRegularizer=(0,h.Bm)(i.betaRegularizer),this.gammaRegularizer=(0,h.Bm)(i.gammaRegularizer)}build(i){i=(0,u.U$)(i);const t=this.axis>=0?this.axis:this.axis+i.length,e=i[t];if(null==e)throw new r.Qp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(i)}.`);this.inputSpec=[new n.eO({ndim:i.length,axes:{[t]:e}})];const a=[e];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(i,t){return(0,a.tidy)((()=>{const e=null!=t.training&&t.training,s=(0,u.un)(i),n=s.shape,r=n.length,l=m.y1(0,r),h=this.axis>=0?this.axis:this.axis+r;l.splice(h,1);const z=o.fD(1,r);z[h]=n[h];const b=l.slice();b.sort();const d=!a.util.arraysEqual(b,m.y1(0,r).slice(0,r-1));if(!e)return(()=>{if(d){const i=(0,a.reshape)(this.movingMean.read(),z),t=(0,a.reshape)(this.movingVariance.read(),z),e=this.center?(0,a.reshape)(this.beta.read(),z):null,n=this.scale?(0,a.reshape)(this.gamma.read(),z):null;return g(s,i,t,e,n,this.epsilon)}return g(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,x,f]=c(s,this.gamma.read(),this.beta.read(),l,this.epsilon),I=(i,t,e)=>{a.tidy((()=>{const s=1-e,n=i.read(),r=a.mul(a.sub(n,t),s);i.write(a.sub(n,r))}))};return(()=>{I(this.movingMean,x,this.momentum),I(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const i={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,l.zo)(this.betaInitializer),gammaInitializer:(0,l.zo)(this.gammaInitializer),movingMeanInitializer:(0,l.zo)(this.movingMeanInitializer),movingVarianceInitializer:(0,l.zo)(this.movingVarianceInitializer),betaRegularizer:(0,h.R9)(this.betaRegularizer),gammaRegularizer:(0,h.R9)(this.gammaRegularizer),betaConstraint:(0,s.uH)(this.betaConstraint),gammaConstraint:(0,s.uH)(this.gammaConstraint)},t=super.getConfig();return Object.assign(i,t),i}}z.className="BatchNormalization",a.serialization.registerClass(z);class b extends n.Wd{constructor(i){if(null==i&&(i={}),super(i),this.axis=null==i.axis?-1:i.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const i of this.axis)if(!Number.isInteger(i))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==i.epsilon?.001:i.epsilon,this.center=null==i.center||i.center,this.scale=null==i.scale||i.scale,this.betaInitializer=(0,l.Fe)(i.betaInitializer||"zeros"),this.gammaInitializer=(0,l.Fe)(i.gammaInitializer||"ones"),this.betaRegularizer=(0,h.Bm)(i.betaRegularizer),this.gammaRegularizer=(0,h.Bm)(i.gammaRegularizer),this.supportsMasking=!0}build(i){const t=(i=(0,u.U$)(i)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==o.Am(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const e=this.axis.map((t=>i[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",e,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",e,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(i,t){const e=(0,u.un)(i),s=e.shape,n=s.length;return(0,a.tidy)((()=>{let{mean:i,variance:t}=(0,a.moments)(e,this.axis,!0);const r=o.fD(1,n);for(const e of this.axis)r[e]=s[e];const l=i=>null!=i&&i.shape.length!==n?a.reshape(i,r):i;let h=this.scale?l(this.gamma.read()):null,m=this.center?l(this.beta.read()):null;const u=[],c=[];for(let e=0;e<n;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return i=a.tile(i,u),t=a.tile(t,u),null!=h&&(h=a.tile(h,c)),null!=m&&(m=a.tile(m,c)),g(e,i,t,m,h,this.epsilon)}))}getConfig(){const i={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,l.zo)(this.betaInitializer),gammaInitializer:(0,l.zo)(this.gammaInitializer),betaRegularizer:(0,h.R9)(this.betaRegularizer),gammaRegularizer:(0,h.R9)(this.gammaRegularizer)},t=super.getConfig();return Object.assign(i,t),i}}b.className="LayerNormalization",a.serialization.registerClass(b)}}]);
//# sourceMappingURL=stylist-vendors-cb2eea2a.366bf17c8e609434fb46.js.map