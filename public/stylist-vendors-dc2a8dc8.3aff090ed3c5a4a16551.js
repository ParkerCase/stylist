"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[6056],{448:function(n,t,e){e.d(t,{r:function(){return o}});var r=e(50259),a=e(45119);function o(n,t="float32",e){return t=t||"float32",a.SA(n),new r.yl(n,t,e)}},9160:function(n,t,e){e.d(t,{$:function(){return c}});var r=e(67897),a=e(15441),o=e(28189),s=e(45119),i=e(62302);const c=(0,e(70929).op)({batchNorm_:function(n,t,e,c,u,l){null==l&&(l=.001);const f=(0,o.YT)(n,"x","batchNorm"),h=(0,o.YT)(t,"mean","batchNorm"),d=(0,o.YT)(e,"variance","batchNorm");let m,b;null!=u&&(m=(0,o.YT)(u,"scale","batchNorm")),null!=c&&(b=(0,o.YT)(c,"offset","batchNorm")),s.vA(h.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.vA(null==b||h.rank===b.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.vA(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const k={x:function(n){let t;return t=0===n.rank||1===n.rank?(0,i.t)(n,[1,1,1,n.size]):2===n.rank?(0,i.t)(n,[1,1,n.shape[0],n.shape[1]]):3===n.rank?(0,i.t)(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n,t}(f),scale:m,offset:b,mean:h,variance:d},p={varianceEpsilon:l},g=r.T2.runKernel(a.i5R,k,p);return(0,i.t)(g,f.shape)}})},13620:function(n,t,e){e.d(t,{B:function(){return s}});var r=e(28189),a=e(45119),o=e(9160);const s=(0,e(70929).op)({batchNorm2d_:function(n,t,e,s,i,c){const u=(0,r.YT)(n,"x","batchNorm"),l=(0,r.YT)(t,"mean","batchNorm"),f=(0,r.YT)(e,"variance","batchNorm");let h,d;return null!=i&&(h=(0,r.YT)(i,"scale","batchNorm")),null!=s&&(d=(0,r.YT)(s,"offset","batchNorm")),a.vA(2===u.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${u.rank}.`)),a.vA(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`)),a.vA(2===f.rank||1===f.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${f.rank}.`)),null!=h&&a.vA(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=d&&a.vA(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),(0,o.$)(u,l,f,d,h,c)}})},17367:function(n,t,e){e.d(t,{R:function(){return s}});var r=e(67897),a=e(15441),o=e(28189);const s=(0,e(70929).op)({broadcastArgs_:function(n,t){const e=(0,o.YT)(n,"s0","broadcastArgs","int32"),s=(0,o.YT)(t,"s1","broadcastArgs","int32");if(1!==e.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const i={s0:e,s1:s};return r.T2.runKernel(a.vj7,i)}})},27836:function(n,t,e){e.r(t),e.d(t,{draw:function(){return w},fromPixels:function(){return v},fromPixelsAsync:function(){return k},toPixels:function(){return g}});var r=e(67897),a=e(46574),o=e(15441),s=e(37074),i=e(50259),c=e(28189),u=e(29809),l=e(70929),f=e(42768);let h,d=!1;function m(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,a=!1,i=!1,c=!1,u=!1,l=!1;if(n.data instanceof Uint8Array)e=!0;else if("undefined"!==typeof ImageData&&n instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&n instanceof HTMLVideoElement)i=!0;else if("undefined"!==typeof HTMLImageElement&&n instanceof HTMLImageElement)c=!0;else if(null!=n.getContext)u=!0;else{if(!("undefined"!==typeof ImageBitmap&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);l=!0}if(null!=(0,s._5)(o.awo,r.T2.backendName)){const e={pixels:n},a={numChannels:t};return r.T2.runKernel(o.awo,e,a)}const[d,m]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height];let b,k;if(u)b=n.getContext("2d").getImageData(0,0,d,m).data;else if(a||e)b=n.data;else if(c||i||l){if(null==h)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");h=new OffscreenCanvas(1,1).getContext("2d")}else h=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});h.canvas.width=d,h.canvas.height=m,h.drawImage(n,0,0,d,m),b=h.getImageData(0,0,d,m).data}if(4===t)k=new Int32Array(b);else{const n=d*m;k=new Int32Array(n*t);for(let e=0;e<n;e++)for(let n=0;n<t;++n)k[e*t+n]=b[4*e+n]}const p=[m,d,t];return(0,f.$)(k,p,"int32")}function b(n){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(n instanceof ImageBitmap)&&function(n){return null!=n&&0!==n.width&&0!==n.height}(n)&&!function(n){return null!=n&&n.data instanceof Uint8Array}(n)}async function k(n,t=3){let e=null;if((0,a._K)().getBool("WRAP_TO_IMAGEBITMAP")&&b(n)){let t;try{t=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch(r){t=null}e=null!=t&&t.width===n.width&&t.height===n.height?t:n}else e=n;return m(e,t)}function p(n){if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const t=2===n.rank?1:n.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function g(n,t){let e=(0,c.YT)(n,"img","toPixels");if(!(n instanceof i.qY)){const n=e;e=(0,u.w)(n,"int32"),n.dispose()}p(e);const[a,l]=e.shape.slice(0,2),f=2===e.rank?1:e.shape[2],h=await e.data(),m="float32"===e.dtype?255:1,b=new Uint8ClampedArray(l*a*4);for(let r=0;r<a*l;++r){const n=[0,0,0,255];for(let a=0;a<f;a++){const t=h[r*f+a];if("float32"===e.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===e.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(n[0]=t*m,n[1]=t*m,n[2]=t*m):n[a]=t*m}const t=4*r;b[t+0]=Math.round(n[0]),b[t+1]=Math.round(n[1]),b[t+2]=Math.round(n[2]),b[t+3]=Math.round(n[3])}if(null!=t){if(!d){null!=(0,s._5)(o.XmO,r.T2.backendName)&&(d=!0)}t.width=l,t.height=a;const n=t.getContext("2d"),e=new ImageData(b,l,a);n.putImageData(e,0,0)}return e!==n&&e.dispose(),b}function w(n,t,e){let a=(0,c.YT)(n,"img","draw");if(!(n instanceof i.qY)){const n=a;a=(0,u.w)(n,"int32"),n.dispose()}p(a),function(n){const t=(null===n||void 0===n?void 0:n.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===e||void 0===e?void 0:e.imageOptions);const s={image:a},l={canvas:t,options:e};r.T2.runKernel(o.XmO,s,l)}const v=(0,l.op)({fromPixels_:m})},27874:function(n,t,e){e.d(t,{T:function(){return s}});var r=e(28189),a=e(45119),o=e(9160);const s=(0,e(70929).op)({batchNorm4d_:function(n,t,e,s,i,c){const u=(0,r.YT)(n,"x","batchNorm"),l=(0,r.YT)(t,"mean","batchNorm"),f=(0,r.YT)(e,"variance","batchNorm");let h,d;return null!=i&&(h=(0,r.YT)(i,"scale","batchNorm")),null!=s&&(d=(0,r.YT)(s,"offset","batchNorm")),a.vA(4===u.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${u.rank}.`)),a.vA(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`)),a.vA(4===f.rank||1===f.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${f.rank}.`)),null!=h&&a.vA(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=d&&a.vA(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),(0,o.$)(u,l,f,d,h,c)}})},33007:function(n,t,e){e.d(t,{f:function(){return u}});var r=e(28189),a=e(45119),o=e(48229),s=e(62302),i=e(5932),c=e(44271);const u=async function(n,t,e){const u=(0,r.YT)(n,"tensor","boolMask"),l=(0,r.YT)(t,"mask","boolMask","bool"),f=null==e?0:e,h=l.rank,d=u.shape;a.vA(h>0,(()=>"mask cannot be scalar")),a.O3(d.slice(f,f+h),l.shape,"mask's shape must match the first K dimensions of tensor's shape,");let m=1;for(let r=f;r<f+h;r++)m*=d[r];const b=d.slice(0,f).concat([m],d.slice(f+h)),k=(0,s.t)(u,b),p=(0,s.t)(l,[-1]),g=await(0,c.Y)(p),w=(0,i.r)(g,[1]),v=(0,o.k)(k,w,f);return n!==u&&u.dispose(),t!==l&&l.dispose(),w.dispose(),k.dispose(),p.dispose(),g.dispose(),v}},40758:function(n,t,e){e.d(t,{H:function(){return i}});var r=e(67897),a=e(15441),o=e(28189),s=e(45119);const i=(0,e(70929).op)({bincount_:function(n,t,e){const i=(0,o.YT)(n,"x","bincount"),c=(0,o.YT)(t,"weights","bincount");s.vA("int32"===i.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${i.dtype}`)),s.vA(e>=0,(()=>`size must be non-negative, but got ${e}.`)),s.vA(c.size===i.size||0===c.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: ${c.shape}.`));const u={x:i,weights:c},l={size:e};return r.T2.runKernel(a.N4F,u,l)}})},62198:function(n,t,e){function r(n,t){const e=n.length,r=[];for(let a=0;a<e;a++){const o=e-1-a,s=n[o]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function a(n,t){const e=[];for(let r=0;r<t.length;r++){const a=n[n.length-r-1],o=t.length-r-1,s=t[o];(null==a||1===a&&s>1)&&e.unshift(o)}return e}function o(n,t){const e=Math.max(n.length,t.length),r=new Array(e);for(let a=0;a<e;a++){let o=n[n.length-a-1];null==o&&(o=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===o)r[e-a-1]=s;else if(1===s)r[e-a-1]=o;else{if(o!==s){throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`)}r[e-a-1]=o}}return r}e.r(t),e.d(t,{assertAndGetBroadcastShape:function(){return o},getBroadcastDims:function(){return r},getReductionAxes:function(){return a}})},63567:function(n,t,e){e.d(t,{h:function(){return l}});var r=e(67897),a=e(15441),o=e(28189),s=e(45119),i=e(70125),c=e(70929),u=e(62302);const l=(0,c.op)({broadcastTo_:function(n,t){let e=(0,o.YT)(n,"broadcastTo","x");const c=e.shape;if((0,s.SA)(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const n=e.shape.slice();for(;n.length<t.length;)n.unshift(1);e=(0,u.t)(e,n)}const l=e.shape,f=Array.from(t);for(let r=t.length-1;r>=0;r--)if(l[r]===t[r])f[r]=1;else if(1!==e.shape[r])throw new Error(`broadcastTo(): [${c}] cannot be broadcast to [${t}].`);if(0===f.map(((n,t)=>n>1?t:-1)).filter((n=>n>=0)).length)return(0,i.o)(e);const h={x:e},d={reps:f};return r.T2.runKernel(a.FAs,h,d)}})},69772:function(n,t,e){e.d(t,{G:function(){return i}});var r=e(67897),a=e(15441),o=e(28189),s=e(45119);const i=(0,e(70929).op)({batchToSpaceND_:function(n,t,e){const i=(0,o.YT)(n,"x","batchToSpaceND"),c=t.reduce(((n,t)=>n*t));s.vA(i.rank>=1+t.length,(()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`)),s.vA(e.length===t.length,(()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`)),s.vA(i.shape[0]%c===0,(()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${c}`));const u={x:i},l={blockShape:t,crops:e};return r.T2.runKernel(a.Ik2,u,l)}})},69906:function(n,t,e){e.d(t,{l:function(){return h}});var r=e(28189),a=e(37523),o=e(25030),s=e(65703),i=e(9258),c=e(70929),u=e(28968),l=e(17986),f=e(57311);const h=(0,c.op)({basicLSTMCell_:function(n,t,e,c,h,d){const m=(0,r.YT)(n,"forgetBias","basicLSTMCell"),b=(0,r.YT)(t,"lstmKernel","basicLSTMCell"),k=(0,r.YT)(e,"lstmBias","basicLSTMCell"),p=(0,r.YT)(c,"data","basicLSTMCell"),g=(0,r.YT)(h,"c","basicLSTMCell"),w=(0,r.YT)(d,"h","basicLSTMCell"),v=(0,o.x)([p,w],1),T=(0,s.N)(v,b),A=(0,a.W)(T,k),y=A.shape[0],$=A.shape[1]/4,N=[y,$],E=(0,l.d)(A,[0,0],N),x=(0,l.d)(A,[0,$],N),Y=(0,l.d)(A,[0,2*$],N),D=(0,l.d)(A,[0,3*$],N),C=(0,a.W)((0,i.l)((0,u.r)(E),(0,f.y)(x)),(0,i.l)(g,(0,u.r)((0,a.W)(m,Y))));return[C,(0,i.l)((0,f.y)(C),(0,u.r)(D))]}})},75569:function(n,t,e){e.d(t,{v:function(){return i}});var r=e(67897),a=e(15441),o=e(28189),s=e(45119);const i=(0,e(70929).op)({bitwiseAnd_:function(n,t){const e=(0,o.YT)(n,"x","bitwiseAnd"),i=(0,o.YT)(t,"y","bitwiseAnd");if(!(0,s.r1)(e.shape,i.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${i.shape}`);if("int32"!==e.dtype||"int32"!==i.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${i.dtype}`);const c={a:e,b:i};return r.T2.runKernel(a.HNs,c)}})},76241:function(n,t,e){e.d(t,{k:function(){return s}});var r=e(28189),a=e(45119),o=e(9160);const s=(0,e(70929).op)({batchNorm3d_:function(n,t,e,s,i,c){const u=(0,r.YT)(n,"x","batchNorm"),l=(0,r.YT)(t,"mean","batchNorm"),f=(0,r.YT)(e,"variance","batchNorm");let h,d;return null!=i&&(h=(0,r.YT)(i,"scale","batchNorm")),null!=s&&(d=(0,r.YT)(s,"offset","batchNorm")),a.vA(3===u.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${u.rank}.`)),a.vA(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`)),a.vA(3===f.rank||1===f.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${f.rank}.`)),null!=h&&a.vA(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=d&&a.vA(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),(0,o.$)(u,l,f,d,h,c)}})}}]);
//# sourceMappingURL=stylist-vendors-dc2a8dc8.3aff090ed3c5a4a16551.js.map