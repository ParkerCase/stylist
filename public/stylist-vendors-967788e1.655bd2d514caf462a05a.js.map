{"version":3,"file":"stylist-vendors-967788e1.655bd2d514caf462a05a.js","mappings":"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","sources":["webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js","webpack://StylistWidget/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ASIN = CHECK_NAN_SNIPPET + `\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n`;\nexport const asin = unaryKernelFunc({ opSnippet: ASIN });\nexport const asinConfig = {\n    kernelName: Asin,\n    backendName: 'webgl',\n    kernelFunc: asin,\n};\n//# sourceMappingURL=Asin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { addImplCPU as cpuAdd } from '../kernel_utils/shared';\nconst ADD = 'return a + b;';\nexport const addKernelFunc = binaryKernelFunc({\n    opSnippet: ADD,\n    packedOpSnippet: ADD,\n    supportsComplex: true,\n    cpuKernelImpl: cpuAdd\n});\nexport const addConfig = {\n    kernelName: Add,\n    backendName: 'webgl',\n    kernelFunc: addKernelFunc\n};\n//# sourceMappingURL=Add.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util, util } from '@tensorflow/tfjs-core';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nimport { identity } from './Identity';\nexport function avgPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    assertNotComplex(x, 'avgPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return identity({ inputs: { x }, backend });\n    }\n    const avgPoolProgram = new Pool2DProgram(convInfo, 'avg', false);\n    return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nexport const avgPoolConfig = {\n    kernelName: AvgPool,\n    backendName: 'webgl',\n    kernelFunc: avgPool\n};\n//# sourceMappingURL=AvgPool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ATAN = CHECK_NAN_SNIPPET + `\n  return atan(x);\n`;\nexport const atan = unaryKernelFunc({ opSnippet: ATAN });\nexport const atanConfig = {\n    kernelName: Atan,\n    backendName: 'webgl',\n    kernelFunc: atan,\n};\n//# sourceMappingURL=Atan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ACOS = CHECK_NAN_SNIPPET + `\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n`;\nexport const acos = unaryKernelFunc({ opSnippet: ACOS });\nexport const acosConfig = {\n    kernelName: Acos,\n    backendName: 'webgl',\n    kernelFunc: acos,\n};\n//# sourceMappingURL=Acos.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc, CHECK_NAN_SNIPPET_BINARY, CHECK_NAN_SNIPPET_BINARY_PACKED } from '../kernel_utils/kernel_funcs_utils';\nconst ATAN2 = CHECK_NAN_SNIPPET_BINARY + `\n  return atan(a, b);\n`;\nconst ATAN2_PACKED = `\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET_BINARY_PACKED + `\n  return result;\n`;\nexport const atan2 = binaryKernelFunc({ opSnippet: ATAN2, packedOpSnippet: ATAN2_PACKED });\nexport const atan2Config = {\n    kernelName: Atan2,\n    backendName: 'webgl',\n    kernelFunc: atan2,\n};\n//# sourceMappingURL=Atan2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, env, upcastType } from '@tensorflow/tfjs-core';\nimport { AddNProgram } from '../addn_gpu';\nimport { AddNPackedProgram } from '../addn_packed_gpu';\nimport { identity } from './Identity';\nexport function addN(args) {\n    const { inputs, backend } = args;\n    const tensors = inputs;\n    if (tensors.length === 1) {\n        return identity({ inputs: { x: tensors[0] }, backend });\n    }\n    // Limit the number of uploaded textures for optimization.\n    if (tensors.length > env().get('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n        const midIndex = Math.floor(tensors.length / 2);\n        const leftSide = addN({ inputs: tensors.slice(0, midIndex), backend });\n        const rightSide = addN({ inputs: tensors.slice(midIndex), backend });\n        return addN({ inputs: [leftSide, rightSide], backend });\n    }\n    const dtype = tensors.map(t => t.dtype).reduce((d1, d2) => upcastType(d1, d2));\n    const shapes = tensors.map(t => t.shape);\n    // We can make sure shapes are identical in op level.\n    const usePackedOp = env().getBool('WEBGL_PACK');\n    const program = usePackedOp ?\n        new AddNPackedProgram(tensors[0].shape, shapes) :\n        new AddNProgram(tensors[0].shape, shapes);\n    return backend.runWebGLProgram(program, tensors, dtype);\n}\nexport const addNConfig = {\n    kernelName: AddN,\n    backendName: 'webgl',\n    kernelFunc: addN\n};\n//# sourceMappingURL=AddN.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n    const out = argMinMaxReduce(backend, $x, axes[0], 'max');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nexport const argMaxConfig = {\n    kernelName: ArgMax,\n    backendName: 'webgl',\n    kernelFunc: argMax\n};\n//# sourceMappingURL=ArgMax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function all(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('all', axes, xRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = reduce(a2D, a2D.dtype, 'all', backend);\n    let res;\n    if (keepDims) {\n        const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nexport const allConfig = {\n    kernelName: All,\n    backendName: 'webgl',\n    kernelFunc: all\n};\n//# sourceMappingURL=All.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, env } from '@tensorflow/tfjs-core';\nimport { simpleAbsImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nconst ABS = `return abs(x);`;\nexport function abs(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    // TODO: handle cases when x is complex. Once the cpu implementation\n    // can handle complex values, refactor to use unaryKernelFunc.\n    if (backend.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n        const xData = backend.texData.get(x.dataId);\n        const outValues = simpleAbsImplCPU(xData.values);\n        return backend.makeTensorInfo(x.shape, x.dtype, outValues);\n    }\n    let program;\n    if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n        program = new UnaryOpPackedProgram(x.shape, ABS);\n    }\n    else {\n        program = new UnaryOpProgram(x.shape, ABS);\n    }\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const absConfig = {\n    kernelName: Abs,\n    backendName: 'webgl',\n    kernelFunc: abs\n};\n//# sourceMappingURL=Abs.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function any(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('any', axes, xRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = reduce(a2D, a2D.dtype, 'any', backend);\n    let res;\n    if (keepDims) {\n        const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nexport const anyConfig = {\n    kernelName: Any,\n    backendName: 'webgl',\n    kernelFunc: any\n};\n//# sourceMappingURL=Any.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ASINH = CHECK_NAN_SNIPPET + `return log(x + sqrt(x * x + 1.0));`;\nexport const asinh = unaryKernelFunc({ opSnippet: ASINH });\nexport const asinhConfig = {\n    kernelName: Asinh,\n    backendName: 'webgl',\n    kernelFunc: asinh,\n};\n//# sourceMappingURL=Asinh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D, backend_util } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function avgPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode, dataFormat } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const avgPoolProgram = new Pool3DProgram(convInfo, 'avg', false);\n    return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nexport const avgPool3DConfig = {\n    kernelName: AvgPool3D,\n    backendName: 'webgl',\n    kernelFunc: avgPool3D\n};\n//# sourceMappingURL=AvgPool3D.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3DGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool3DBackpropProgram } from '../avg_pool_backprop_gpu';\nexport function avgPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    const avgPoolBackpropProgram = new AvgPool3DBackpropProgram(convInfo);\n    return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nexport const avgPoolGrad3DConfig = {\n    kernelName: AvgPool3DGrad,\n    backendName: 'webgl',\n    kernelFunc: avgPool3DGrad\n};\n//# sourceMappingURL=AvgPool3DGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPoolGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool2DBackpropProgram } from '../avg_pool_backprop_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function avgPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    assertNotComplex([dy, input], 'avgPoolGrad');\n    const { filterSize, strides, pad } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad);\n    const avgPoolBackpropProgram = new AvgPool2DBackpropProgram(convInfo);\n    return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nexport const avgPoolGradConfig = {\n    kernelName: AvgPoolGrad,\n    backendName: 'webgl',\n    kernelFunc: avgPoolGrad\n};\n//# sourceMappingURL=AvgPoolGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMin(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n    const out = argMinMaxReduce(backend, $x, axes[0], 'min');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nexport const argMinConfig = {\n    kernelName: ArgMin,\n    backendName: 'webgl',\n    kernelFunc: argMin\n};\n//# sourceMappingURL=ArgMin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ACOSH = CHECK_NAN_SNIPPET + `\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));`;\nexport const acosh = unaryKernelFunc({ opSnippet: ACOSH });\nexport const acoshConfig = {\n    kernelName: Acosh,\n    backendName: 'webgl',\n    kernelFunc: acosh,\n};\n//# sourceMappingURL=Acosh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ATANH = CHECK_NAN_SNIPPET + `\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;`;\nexport const atanh = unaryKernelFunc({ opSnippet: ATANH });\nexport const atanhConfig = {\n    kernelName: Atanh,\n    backendName: 'webgl',\n    kernelFunc: atanh,\n};\n//# sourceMappingURL=Atanh.js.map"],"names":["ASIN","asin","opSnippet","asinConfig","kernelName","Asin","backendName","kernelFunc","ADD","addKernelFunc","packedOpSnippet","supportsComplex","cpuKernelImpl","addConfig","Add","avgPoolConfig","AvgPool","args","inputs","backend","attrs","x","filterSize","strides","pad","dimRoundingMode","util","backend_util","convInfo","shape","filterWidth","filterHeight","inShape","outShape","avgPoolProgram","runWebGLProgram","ATAN","atan","atanConfig","Atan","ACOS","acos","acosConfig","Acos","ATAN2","ATAN2_PACKED","atan2","atan2Config","Atan2","addNConfig","AddN","addN","tensors","length","env","get","midIndex","Math","floor","leftSide","slice","rightSide","dtype","map","t","reduce","d1","d2","upcastType","shapes","program","getBool","argMaxConfig","ArgMax","axis","axes","permutedAxes","$x","intermediateTensorInfos","perm","push","out","forEach","disposeIntermediateTensorInfo","allConfig","All","keepDims","xRank","origAxes","permutedX","reduceShape","inSize","a2D","reduced","res","newShape","ABS","absConfig","Abs","shouldExecuteOnCPU","xData","texData","dataId","outValues","values","makeTensorInfo","anyConfig","Any","ASINH","asinh","asinhConfig","Asinh","avgPool3DConfig","AvgPool3D","dataFormat","avgPoolGrad3DConfig","AvgPool3DGrad","dy","input","avgPoolBackpropProgram","avgPoolGradConfig","AvgPoolGrad","argMinConfig","ArgMin","ACOSH","acosh","acoshConfig","Acosh","ATANH","atanh","atanhConfig","Atanh"],"sourceRoot":""}