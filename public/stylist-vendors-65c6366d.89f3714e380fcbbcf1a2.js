"use strict";(self.webpackChunkStylistWidget=self.webpackChunkStylistWidget||[]).push([[9860],{5437:function(t,e,n){n.d(e,{Q:function(){return s}});var r=n(9495),a=n(73514);const s={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:o,rightPad:u,padWidth:c,preserveShortSequences:l}=r,{data:d,dataSplits:h}=e,p=n.data.get(d.dataId).values,f=n.data.get(h.dataId).values,[m,g]=(0,a.G)(p,f,s,i,o,u,c,l);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",g)]}}},18566:function(t,e,n){n.d(e,{Zl:function(){return c},dl:function(){return i},jb:function(){return u}});var r=n(9495),a=n(8195),s=n(98880);const i=(0,a.Z)(((t,e)=>t-e)),o=(0,s.B)(((t,e,n,r)=>({real:t-n,imag:e-r}))),u=(0,s.j)(r.Sub,i,o),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},22615:function(t,e,n){n.d(e,{o:function(){return s}});var r=n(9495),a=n(32948);const s={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:o}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const u=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values[0],[l,d,h]=(0,a.S)(u,c,s),p=d.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}}},24863:function(t,e,n){n.d(e,{i:function(){return s}});var r=n(9495);const a=(0,n(21694).v)(r.Tanh,(t=>Math.tanh(t))),s={kernelName:r.Tanh,backendName:"cpu",kernelFunc:a}},25231:function(t,e,n){n.d(e,{c:function(){return l},q:function(){return d}});var r=n(9495),a=n(97870),s=n(11317),i=n(13713),o=n(46936),u=n(14590),c=n(85655);function l(t){const{inputs:e,backend:n,attrs:l}=t,{x:d}=e,{axis:h,keepDims:p}=l;let f;(0,a.C)(d,"sum"),f="bool"===d.dtype?(0,i.wg)({inputs:{x:d},backend:n,attrs:{dtype:"int32"}}):(0,o.D)({inputs:{x:d},backend:n});const m=f.shape.length,g=r.util.parseAxisParam(h,f.shape),k=r.backend_util.getAxesPermutation(g,m);let b=g,S=f;null!=k&&(S=(0,c.m)({inputs:{x:f},backend:n,attrs:{perm:k}}),b=r.backend_util.getInnerMostAxes(b.length,m)),r.backend_util.assertAxesAreInnerMostDims("sum",b,S.shape.length);const[v,y]=r.backend_util.computeOutAndReduceShapes(S.shape,b),N=r.backend_util.upcastType(S.dtype,"int32");let I=(0,s.U)(n,v,N);const w=r.util.sizeFromShape(y),x=n.data.get(I.dataId).values,T=n.data.get(S.dataId).values;for(let r=0;r<x.length;++r){const t=r*w;let e=0;for(let n=0;n<w;++n)e+=T[t+n];x[r]=e}if(p){const t=r.backend_util.expandShapeToKeepDim(I.shape,g),e=I;I=(0,u.t)({inputs:{x:I},backend:n,attrs:{shape:t}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(f),null!=k&&n.disposeIntermediateTensorInfo(S),I}const d={kernelName:r.Sum,backendName:"cpu",kernelFunc:l}},32948:function(t,e,n){n.d(e,{S:function(){return s}});var r=n(9495);function a(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const a=e[0];let s=t.indexOf(a);for(;-1!==s;){const e=t.subarray(0,s);n&&0===e.length||r.push(e),s=(t=t.subarray(s+1)).indexOf(a)}return void(n&&0===t.length||r.push(t))}let a=0;for(let s=0;s<t.length+1;s++)if(s===t.length||-1!==e.indexOf(t[s])){const e=t.subarray(a,s);n&&0===e.length||r.push(e),a=s+1}}function s(t,e,n){const s=t.length,i=[];let o=0,u=0;const c=new Array(s);for(let r=0;r<s;++r){const s=i.length;a(t[r],e,n,i);const l=i.length-s;c[r]=l,o+=l,u=Math.max(u,l)}const l=r.util.getArrayFromDType("int32",2*o),d=new Array(o),h=[s,u];let p=0;for(let r=0;r<s;++r)for(let t=0;t<c[r];++t)l[2*p]=r,l[2*p+1]=t,d[p]=i[p],++p;return[l,d,h]}},33442:function(t,e,n){n.d(e,{J:function(){return s}});var r=n(9495),a=n(45535);const s={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(i.dataId).values,u=(0,a.f)(o,s);return n.makeTensorInfo(i.shape,"int32",u)}}},35615:function(t,e,n){n.d(e,{W:function(){return s}});var r=n(9495);const a=(0,n(21694).v)(r.Tan,(t=>Math.tan(t))),s={kernelName:r.Tan,backendName:"cpu",kernelFunc:a}},45535:function(t,e,n){n.d(e,{f:function(){return a}});var r=n(9495);function a(t,e){const n=r.util.getArrayFromDType("int32",t.length);for(let a=0;a<t.length;++a)n[a]=r.util.fingerPrint64(t[a]).modulo(e).getLowBitsUnsigned();return n}},67686:function(t,e,n){n.d(e,{e:function(){return a}});var r=n(9495);function a(t,e,n,a){const s=(0,r.buffer)(t,e.dtype);for(let r=0;r<s.size;r++){const t=s.indexToLoc(r),i=new Array(t.length);for(let e=0;e<i.length;e++)i[e]=t[e]*n[e]+a[e];s.set(e.get(...i),...t)}return s}},70704:function(t,e,n){n.d(e,{B:function(){return s}});var r=n(9495),a=n(19095);const s={kernelName:r.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{tensor:s,indices:i,updates:o}=e,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(o,i,s.shape),p=n.bufferSync(i),f=n.bufferSync(o),m=n.bufferSync(s),g=(0,a.b)(p,f,s.shape,h,l,c,u,d,m,!1);return n.makeTensorInfo(s.shape,g.dtype,g.values)}}},73514:function(t,e,n){n.d(e,{G:function(){return s}});var r=n(9495);class a{constructor(t,e,n,a,s,i){this.separator=r.util.encodeString(t),this.nGramWidths=e,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),c=Math.max(0,o-(a-(i+1))),l=s-(u+c),d=e+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let e=0;e<l;++e)h+=t[d+e].length;h+=c*this.rightPad.length;h+=(u+c+l-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<u;++t)m(this.leftPad),m(this.separator);for(let e=0;e<l-1;++e)m(t[d+e]),m(this.separator);if(l>0){m(t[d+l-1]);for(let t=0;t<c;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<c-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,a=e.length;if(a>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let r=1;r<a;++r){let a=e[r]>=t;if(a=a&&e[r]<=n,!a)throw new Error(`Invalid split value ${e[r]}, must be in [${t}, ${n}]`);t=e[r]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=a-1,i=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const t=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[t,i]}i[0]=0;for(let r=1;r<=s;++r){const t=e[r]-e[r-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),i[r]=i[r-1]+n}const o=new Array(i[s]);for(let r=0;r<s;++r){const n=e[r];let a=i[r];if(this.nGramWidths.forEach((s=>{const i=e[r+1]-e[r],u=this.getNumNGrams(i,s);this.createNGrams(t,n,o,a,u,s),a+=u})),this.preserveShort&&a===i[r]){const s=e[r+1]-e[r];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(t,n,o,a,u,i)}}return[o,i]}}function s(t,e,n,r,s,i,o,u){return new a(n,r,s,i,o,u).compute(t,e)}},88105:function(t,e,n){n.d(e,{c:function(){return u}});var r=n(9495),a=n(97870),s=n(14590),i=n(87906),o=n(67686);const u={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:u}=t,{x:c}=e,{begin:l,end:d,strides:h,beginMask:p,endMask:f,ellipsisMask:m,newAxisMask:g,shrinkAxisMask:k}=u;(0,a.C)(c,"stridedSlice");const{finalShapeSparse:b,finalShape:S,isIdentity:v,sliceDim0:y,isSimpleSlice:N,begin:I,end:w,strides:x}=r.slice_util.sliceInfo(c.shape,l,d,h,p,f,m,g,k);let T;if(v)T=(0,s.t)({inputs:{x:c},backend:n,attrs:{shape:S}});else if(y||N){r.util.assert(c.shape.length>=1,(()=>`Input must have rank at least 1, got: ${c.shape.length}`));const t=r.slice_util.computeOutShape(I,w,x),e=(0,i.di)({inputs:{x:c},backend:n,attrs:{begin:I,size:t}});T=(0,s.t)({inputs:{x:e},backend:n,attrs:{shape:S}}),n.disposeIntermediateTensorInfo(e)}else{const t=n.bufferSync(c),e=(0,o.e)(b,t,x,I);T=n.makeTensorInfo(S,e.dtype,e.values)}return T}}},94604:function(t,e,n){n.d(e,{t:function(){return s}});var r=n(9495);const a=(0,n(21694).v)(r.Step,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),s={kernelName:r.Step,backendName:"cpu",kernelFunc:a}}}]);
//# sourceMappingURL=stylist-vendors-65c6366d.89f3714e380fcbbcf1a2.js.map