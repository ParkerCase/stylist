// src/components/common/OfflineIndicator.scss

@use "../../styles/variables.scss" as variables;
@use "../../styles/mixins.scss" as mixins;

.stylist-offline-indicator {
  position: fixed;
  z-index: variables.$z-index-popover;
  max-width: 300px;
  width: auto;
  background-color: variables.$background-color;
  border: 1px solid variables.$border-color;
  border-radius: variables.$border-radius-md;
  box-shadow: variables.$shadow-md;
  overflow: hidden;
  @include mixins.animate-all;
  
  // Position variations
  &--top {
    top: variables.$spacing-md;
    right: variables.$spacing-md;
  }
  
  &--bottom {
    bottom: variables.$spacing-md;
    right: variables.$spacing-md;
  }
  
  // Status bar
  &__status {
    @include mixins.flex-between;
    padding: variables.$spacing-sm variables.$spacing-md;
    cursor: pointer;
    transition: background-color variables.$animation-duration ease-in-out;
    
    &:hover {
      background-color: variables.$background-color-light;
    }
  }
  
  &__status-icon {
    @include mixins.flex-center;
    margin-right: variables.$spacing-sm;
    color: variables.$success-color;
    
    .stylist-offline-indicator--offline & {
      color: variables.$warning-color;
    }
  }
  
  &__status-text {
    flex: 1;
    font-size: variables.$font-size-sm;
    font-weight: variables.$font-weight-medium;
    color: variables.$text-primary;
  }
  
  // Controls panel
  &__controls {
    padding: variables.$spacing-md;
    border-top: 1px solid variables.$border-color;
    background-color: variables.$background-color-light;
  }
  
  // Toggle switch
  &__toggle {
    @include mixins.flex-between;
    margin-bottom: variables.$spacing-md;
    
    span {
      font-size: variables.$font-size-sm;
      color: variables.$text-secondary;
    }
  }
  
  &__toggle-switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 20px;
    
    input {
      opacity: 0;
      width: 0;
      height: 0;
      
      &:checked + .stylist-offline-indicator__toggle-slider {
        background-color: variables.$primary-color;
        
        &:before {
          transform: translateX(20px);
        }
      }
      
      &:disabled + .stylist-offline-indicator__toggle-slider {
        opacity: 0.5;
        cursor: not-allowed;
      }
    }
  }
  
  &__toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: variables.$border-color;
    transition: variables.$animation-duration;
    border-radius: 34px;
    
    &:before {
      position: absolute;
      content: "";
      height: 16px;
      width: 16px;
      left: 2px;
      bottom: 2px;
      background-color: white;
      transition: variables.$animation-duration;
      border-radius: 50%;
    }
  }
  
  // Info text
  &__info {
    @include mixins.flex-start;
    padding: variables.$spacing-xs variables.$spacing-sm;
    background-color: rgba(variables.$info-color, 0.1);
    border-radius: variables.$border-radius-sm;
    margin-bottom: variables.$spacing-sm;
    
    svg {
      color: variables.$info-color;
      margin-right: variables.$spacing-xs;
      flex-shrink: 0;
    }
    
    span {
      font-size: variables.$font-size-xs;
      color: variables.$text-secondary;
    }
  }
  
  // Sync button
  &__sync-btn {
    @include mixins.flex-center;
    width: 100%;
    padding: variables.$spacing-xs variables.$spacing-sm;
    background-color: variables.$primary-color;
    color: variables.$text-inverse;
    border: none;
    border-radius: variables.$border-radius-sm;
    font-size: variables.$font-size-sm;
    cursor: pointer;
    transition: background-color variables.$animation-duration ease-in-out;
    
    svg {
      margin-left: variables.$spacing-sm;
    }
    
    &:hover {
      background-color: variables.$primary-color-dark;
    }
    
    &:disabled {
      opacity: 0.7;
      cursor: wait;
    }
    
    .rotating {
      animation: rotate 1.5s linear infinite;
    }
  }
  
  // Offline mode styling
  &--offline {
    border-color: rgba(variables.$warning-color, 0.3);
    
    .stylist-offline-indicator__status {
      background-color: rgba(variables.$warning-color, 0.1);
      
      &:hover {
        background-color: rgba(variables.$warning-color, 0.15);
      }
    }
  }
}

// Animation for sync icon
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// Responsive adjustments
@include mixins.mobile-only {
  .stylist-offline-indicator {
    max-width: 100%;
    width: calc(100% - #{variables.$spacing-md * 2});
    
    &--top, &--bottom {
      right: variables.$spacing-md;
      left: variables.$spacing-md;
    }
  }
}

// Extra small screens
@include mixins.responsive('xxs') {
  .stylist-offline-indicator {
    &--top, &--bottom {
      right: variables.$spacing-sm;
      left: variables.$spacing-sm;
      width: calc(100% - #{variables.$spacing-sm * 2});
    }
    
    &__status {
      padding: variables.$spacing-xs variables.$spacing-sm;
    }
    
    &__controls {
      padding: variables.$spacing-sm;
    }
  }
}