// src/components/common/FallbackProvider.scss

@use "../../styles/variables.scss" as variables;
@use "../../styles/mixins.scss" as mixins;

.stylist-fallback-provider {
  @include mixins.flex-center;
  width: 100%;
  height: 100%;
  min-height: 150px;
  background-color: variables.$background-color;
  border-radius: variables.$border-radius-md;
  padding: variables.$spacing-md;
  text-align: center;
  
  &--error {
    background-color: rgba(variables.$error-color, 0.05);
    border: 1px solid rgba(variables.$error-color, 0.1);
  }
  
  &--timeout {
    background-color: rgba(variables.$warning-color, 0.05);
    border: 1px solid rgba(variables.$warning-color, 0.1);
  }
  
  &--loading {
    background-color: rgba(variables.$info-color, 0.05);
    border: 1px solid rgba(variables.$info-color, 0.1);
  }
  
  &__error, &__timeout, &__loading {
    @include mixins.flex-center;
    flex-direction: column;
    max-width: 400px;
  }
  
  &__error-icon {
    @include mixins.flex-center;
    width: 64px;
    height: 64px;
    border-radius: 50%;
    background-color: rgba(variables.$error-color, 0.1);
    color: variables.$error-color;
    margin-bottom: variables.$spacing-md;
  }
  
  &__timeout-icon {
    @include mixins.flex-center;
    width: 64px;
    height: 64px;
    border-radius: 50%;
    background-color: rgba(variables.$warning-color, 0.1);
    color: variables.$warning-color;
    margin-bottom: variables.$spacing-md;
  }
  
  &__spinner {
    width: 40px;
    height: 40px;
    border: 3px solid rgba(variables.$primary-color, 0.1);
    border-radius: 50%;
    border-top-color: variables.$primary-color;
    animation: spin 1s linear infinite;
    margin-bottom: variables.$spacing-md;
  }
  
  & h3 {
    font-size: variables.$font-size-lg;
    font-weight: variables.$font-weight-bold;
    color: variables.$text-primary;
    margin: 0 0 variables.$spacing-sm 0;
  }
  
  & p {
    font-size: variables.$font-size-md;
    color: variables.$text-secondary;
    margin: 0 0 variables.$spacing-md 0;
    max-width: 80%;
  }
  
  &__retry-btn {
    @include mixins.button-primary;
    padding: variables.$spacing-xs variables.$spacing-md;
    font-size: variables.$font-size-sm;
    margin-top: variables.$spacing-sm;
  }
  
  &__error-details {
    margin-top: variables.$spacing-md;
    padding: variables.$spacing-sm;
    background-color: variables.$background-color;
    border-radius: variables.$border-radius-sm;
    max-width: 100%;
    overflow-x: auto;
    text-align: left;
    font-family: monospace;
    font-size: variables.$font-size-xs;
    color: variables.$text-primary;
    
    pre {
      margin: variables.$spacing-xs 0 0 0;
      white-space: pre-wrap;
      word-break: break-word;
      color: variables.$error-color;
    }
  }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

// Responsive adjustments
@include mixins.mobile-only {
  .stylist-fallback-provider {
    padding: variables.$spacing-sm;
    
    & h3 {
      font-size: variables.$font-size-md;
    }
    
    & p {
      font-size: variables.$font-size-sm;
    }
  }
}