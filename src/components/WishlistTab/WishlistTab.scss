@use "../../styles/variables.scss" as variables;
@use "../../styles/mixins.scss" as mixins;

.stylist-wishlist-tab {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
  
  &__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: variables.$spacing-md;
    border-bottom: 1px solid variables.$border-color;
  }
  
  &__title {
    margin: 0;
    font-size: variables.$font-size-lg;
    font-weight: 600;
  }
  
  &__grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: variables.$spacing-md;
    padding: variables.$spacing-md;
    overflow-y: auto;
    flex: 1;
  }
  
  &__item {
    display: flex;
    flex-direction: column;
    
    &:hover {
      .stylist-wishlist-tab__item-actions {
        opacity: 1;
      }
    }
  }
  
  &__item-actions {
    display: flex;
    flex-direction: column;
    gap: variables.$spacing-xs;
    margin-top: variables.$spacing-xs;
    opacity: 0.8;
    transition: opacity variables.$transition-fast ease;
  }
  
  &__action-btn {
    padding: variables.$spacing-xs;
    border: none;
    border-radius: variables.$border-radius-sm;
    font-size: variables.$font-size-xs;
    font-weight: 500;
    cursor: pointer;
    transition: background-color variables.$transition-fast ease;
    
    &--cart {
      background-color: variables.$primary-color;
      color: variables.$text-inverse;
      
      &:hover {
        background-color: variables.$primary-color-dark;
      }
    }
    
    &--closet {
      background-color: variables.$background-color-light;
      color: variables.$text-primary;
      border: 1px solid variables.$border-color;
      
      &:hover {
        background-color: variables.$background-color-dark;
      }
    }
  }
  
  &__loading,
  &__empty {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    padding: variables.$spacing-xl;
    text-align: center;
    color: variables.$text-tertiary;
  }
  
  // Responsive adjustments
  @media (max-width: 768px) {
    &__grid {
      grid-template-columns: repeat(2, 1fr);
      gap: variables.$spacing-sm;
      padding: variables.$spacing-sm;
    }
  }
  
  @media (min-width: 1200px) {
    &__grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }
}