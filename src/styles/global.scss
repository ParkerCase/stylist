// Global styles for the widget

@use './variables.scss' as v;
@use './mixins.scss' as m;
@use './adaptive-animations.scss' as a;

// Reset box-sizing
*,
*::before,
*::after {
  box-sizing: border-box;
}

// Widget container styles
.stylist-widget {
  font-family: v.$font-family;
  font-size: v.$font-size-md;
  color: v.$text-primary;
  line-height: 1.5;
  text-align: left;
  
  // Reset margins and paddings
  h1, h2, h3, h4, h5, h6, p, ul, ol, figure {
    margin: 0;
    padding: 0;
  }
  
  // Reset lists
  ul, ol {
    list-style: none;
  }
  
  // Reset buttons with improved focus states
  button {
    background-color: transparent;
    border: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    line-height: inherit;
    text-align: inherit;
    
    &:focus {
      outline: none;
    }
    
    &:focus-visible {
      outline: 2px solid v.$primary-color;
      outline-offset: 2px;
      box-shadow: 0 0 0 4px rgba(v.$primary-color, 0.2);
      position: relative;
      z-index: 10;
    }
  }
  
  // Reset inputs with improved focus states
  input, select, textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    margin: 0;
    
    &:focus-visible {
      outline: 2px solid v.$primary-color;
      outline-offset: 2px;
      box-shadow: 0 0 0 4px rgba(v.$primary-color, 0.2);
      position: relative;
      z-index: 10;
      border-color: v.$primary-color;
    }
  }
  
  // Links with improved focus states
  a {
    color: v.$primary-color;
    text-decoration: none;
    
    &:hover {
      text-decoration: underline;
    }
    
    &:focus-visible {
      outline: 2px solid v.$primary-color;
      outline-offset: 2px;
      box-shadow: 0 0 0 4px rgba(v.$primary-color, 0.2);
      position: relative;
      z-index: 10;
    }
  }
}

// Animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Common animation classes with adaptive complexity
.animate-fade-in {
  &.animation--high {
    animation: fadeIn v.$transition-normal cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
  }
  
  &.animation--medium {
    animation: fadeIn v.$transition-normal ease-out forwards;
  }
  
  &.animation--low {
    animation: fadeIn v.$transition-fast ease forwards;
  }
  
  &.animation--none {
    animation: none;
    opacity: 1;
  }
  
  // Default for when no explicit complexity class is added
  animation: fadeIn v.$transition-normal ease forwards;
}

.animate-slide-up {
  &.animation--high {
    animation: slideInUp v.$transition-normal cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }
  
  &.animation--medium {
    animation: slideInUp v.$transition-normal ease-out forwards;
  }
  
  &.animation--low {
    animation: slideInUp v.$transition-fast ease forwards;
  }
  
  &.animation--none {
    animation: none;
    opacity: 1;
  }
  
  // Default
  animation: slideInUp v.$transition-normal ease forwards;
}

.animate-slide-right {
  &.animation--high {
    animation: slideInRight v.$transition-normal cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }
  
  &.animation--medium {
    animation: slideInRight v.$transition-normal ease-out forwards;
  }
  
  &.animation--low {
    animation: slideInRight v.$transition-fast ease forwards;
  }
  
  &.animation--none {
    animation: none;
    opacity: 1;
  }
  
  // Default
  animation: slideInRight v.$transition-normal ease forwards;
}

.animate-pulse {
  &.animation--high {
    animation: pulse 2s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
  }
  
  &.animation--medium {
    animation: pulse 2s ease-in-out infinite;
  }
  
  &.animation--low {
    animation: pulse 2.5s ease infinite;
  }
  
  &.animation--none {
    animation: none;
  }
  
  // Default
  animation: pulse 2s ease infinite;
}

.animate-spin {
  &.animation--high, &.animation--medium, &.animation--low {
    animation: spin 1s linear infinite;
  }
  
  &.animation--none {
    animation: none;
  }
  
  // Default
  animation: spin 1s linear infinite;
}

// Common utility classes
.is-hidden {
  display: none !important;
}

.is-visible {
  display: block !important;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-primary {
  color: v.$primary-color;
}

.text-secondary {
  color: v.$secondary-color;
}

.text-success {
  color: v.$success-color;
}

.text-warning {
  color: v.$warning-color;
}

.text-error {
  color: v.$error-color;
}

.text-muted {
  color: v.$text-tertiary;
}

.font-bold {
  font-weight: v.$font-weight-bold;
}

.font-medium {
  font-weight: v.$font-weight-medium;
}

.font-regular {
  font-weight: v.$font-weight-regular;
}

.m-0 {
  margin: 0;
}

.mt-xs {
  margin-top: v.$spacing-xs;
}

.mt-sm {
  margin-top: v.$spacing-sm;
}

.mt-md {
  margin-top: v.$spacing-md;
}

.mt-lg {
  margin-top: v.$spacing-lg;
}

.mb-xs {
  margin-bottom: v.$spacing-xs;
}

.mb-sm {
  margin-bottom: v.$spacing-sm;
}

.mb-md {
  margin-bottom: v.$spacing-md;
}

.mb-lg {
  margin-bottom: v.$spacing-lg;
}

// Loader
.stylist-loader {
  display: inline-block;
  width: 24px;
  height: 24px;
  border: 2px solid rgba(v.$primary-color, 0.2);
  border-radius: 50%;
  border-top-color: v.$primary-color;
  animation: spin 0.8s linear infinite;
}

.stylist-loader-sm {
  width: 16px;
  height: 16px;
  border-width: 2px;
}

.stylist-loader-lg {
  width: 32px;
  height: 32px;
  border-width: 3px;
}